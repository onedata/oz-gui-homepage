{
  "swagger": "2.0",
  "basePath": "/api/v3/onezone",
  "info": {
    "version": "3.0.0-rc14",
    "title": "Onezone",
    "x-bash-codegen-description": "This is the RESTful API definition of Onezone component of Onedata data\nmanagement system [onedata.org].\n\nThis API allows control and configuration of local Onezone service deployment,\nin particular management of users, spaces, groups and providers.\n\n\nREST API operations from the permissions perspective in Onezone service can\nbe divided into 2 groups, depending on the actor making the request:\n**User requests**\nRegular end user requests are authenticated based on the `X-Auth-Token` header,\nwhich must include valid client access token, and authorization is made based\non the privileges assigned to the user in the system. Each operation in this\nAPI that is available to end users, has a list of required privileges, except\nfor the operations which are related to user account management, i.e.each user\ncan perform any operation on his account, the `X-Auth-Token` header example:\n ```\n   X-Auth-Token: IAUYCGOUASGDJHASDJKVAHSDJHASDKJHABSDKJHBASKJHJHBASD...\n ```\nIn case the Onezone deployment supports authentication delegation other IdP's,\nthe `X-Auth-Token` field can contain token from such IdP with appropriate prefix,\nas configured by Onezone administrators, e.g.:\n ```\n   X-Auth-Token: github:GST5aasdA7asdAASFG7asdasaAS\n ```\n\n**Provider requests**\nWhen a Oneprovider service needs to request some action from the Onezone\nservice, it must authenticate using the peer certificate which was assigned to\nthis provider when registering in the Onezone service.\n\n\n## Effective users and effective groups\nOnedata supports creation of arbitrary nested group tree structures. In order\nto allow identification if a given user belongs to the group directly or\nindirectly by belonging to a subgroup of a group, separate API calls are\nprovided for getting information about group users (direct group members) and\neffective users (indirect group members).\n\n## API structure\nMost operations are RESTful, i.e. paths reflect the actual resource mode and\noperations on them are mapped to most appropriate HTTP methods.\n\n## Space management\nThe space management operations of this API provide means for accessing\ninformation about spaces and their management.\n\n## Group management\nThe group management operations allow for creation of user groups, assigning\ntheir authorization rights, adding and removing users from groups.\n\n## User management\nThe user management methods enable for creation of users, managing their\nauthorization credentials as well as space and group membership.\n\n## Provider management\nProvider specific calls enable for getting global information about the\nspaces managed by the provider, and some administrative operations which can\nbe used for monitoring or accounting.\n\n## Handle API\nOnezone provides extensive support for integration with Handle system\nregistration services, including support for DOI and PID identifier assignment\nservices. The API provides methods for adding new Handle services to the\nsystem, managing which users can use which registration services and complete\nAPI for registering identifiers to users data sets which are made public.\n",
    "description": "# Overview\nThis is the RESTful API definition of Onezone component of Onedata data management system [onedata.org](http://www.onedata.org).\n\n> This API is defined using [Swagger](http://swagger.io/), the JSON specification can be used to automatically generate\n> client libraries - [swagger.json](../../../swagger/onezone/swagger.json).\n\nThis API allows control and configuration of local Onezone service deployment, in particular management\nof users, spaces, groups, shares and providers.\n\n## Authentication and permissions\nIn order to be able to use this API the REST client must be able to authenticate with the Onezone service.\n\nREST API operations from the permissions perspective in Onezone service can be divided into 2 groups,\ndepending on the actor making the request:\n * **User requests** - regular end user requests are authenticated based on the `X-Auth-Token` header, which\n must include valid client access token, and authorization is made based on the privileges assigned\n to the user in the system. Each operation in this API that is available to end users, has a list of\n required privileges, except for the operations which are related to user account management, i.e.\n each user can perform any operation on his account, the `X-Auth-Token` header example:\n ```\n   X-Auth-Token: IAUYCGOUASGDJHASDJKVAHSDJHASDKJHABSDKJHBASKJHDBKJHASBDKJHBASDKJHBASD...\n ```\nIn case the Onezone deployment supports authentication delegation other IdP's,\nthe `X-Auth-Token` field can contain token from such IdP with appropriate prefix,\nas configured by Onezone administrators, e.g.:\n ```\n   X-Auth-Token: github:GST5aasdA7asdAASFG7asdasaAS\n ```\n\n * **Provider requests** - when a Oneprovider service needs to request some action from the Onezone service,\n it must authenticate using the peer certificate which was assigned to this provider when registering\n in the Onezone service. In such case the `X-Auth-Token` header is not necessary.\n\nSome special administrative operations do not require authentication:\n * `POST /user/authorize` - authorizes user with authentication token through\n Onezone web interface.This interface is called typically by providers,\n * `POST /provider` - registers a Oneprovider in Onezone service\n (however a valid CSR in the body is required),\n * `POST /provider/test/check_my_ports` - checks if all given ports\n are reachable from Onezone,\n * `GET /provider/test/check_my_ip` - returns the external IP of the request peer (as seen by the Onezone).\n\nAll other operations can be invoked by a user assuming he has valid privileges in the system,\neach operation description lists required permissions, if any.\n\n## Effective users and effective groups and spaces\nOnedata supports creation of arbitrary nested group and space membership tree structures. In order to determine\nif a given user belongs to the group directly or indirectly by belonging to a subgroup of a group,\nseparate API calls are provided for getting information about group users (direct group members) and\neffective users (indirect group members).\n\n## API structure\nMost operations are RESTful, i.e. paths reflect the actual resource mode and operations on them are mapped to\nmost appropriate HTTP methods.\n\n**Space management**\nThe space management operations of this API provide means for accessing information about spaces\nand their management.\n\n**Group management**\nThe group management operations allow for creation of user groups, assigning their authorization rights,\nadding and removing users from groups.\n\n**User management**\nThe user management methods enable for creation of users, managing their authorization\ncredentials as well as space and group membership.\n\n**Provider management**\nProvider specific calls enable for getting global information about the spaces managed by the provider,\nand some administrative operations which can be used for monitoring or accounting.\n\n**Handle API**\nOnezone provides extensive support for integration with Handle system registration\nservices, including support for DOI and PID identifier assignment services. The API\nprovides methods for adding new Handle services to the system, managing which users\ncan use which registration services and complete API for registering identifiers to\nusers data sets which are made public.\n\n## Using the API\nOnezone API is quite complex and thus it might be difficult to quickly figure out how\nto perform specific action, however the following guidelines might be useful:\n  * Operations performed by a regular users on their resources are grouped under\n    `/user` path (**USER** group in the menu)\n  * Operations performed by administrators of specific resources (e.g. groups,\n    spaces, shares) start with specific resource (e.g. `/groups`)\n  * By default the operations which list resource membership\n    (e.g. `/spaces/SPACE_ID/groups/`) will list explicit resource membership.\n    To get list of effective resource membership (i.e. including indirect\n    membership), special paths are provided\n    (e.g. `/spaces/SPACE_ID/effective_groups/`)\n\nFurthermore, we have prepared a command-line client environment based on Docker\nwhich gives easy access to each of Onedata services via command-line clients,\nwith pre-configured shell with full help on the APIs and autocomplete for\noperations and attributes.\n\n```\ndocker run -it onedata/rest-cli:3.0.0-rc14\n```\n\nWe have also prepared tutorials which show how to use this API in practice:\n  * [User oriented tutorial](https://onedata.org/docs/doc/using_onedata/using_onedata_from_cli.html)\n  * [Administrator oriented tutorial](https://onedata.org/docs/doc/administering_onedata/administering_onedata_from_cli.html)\n\n\n## Examples\n\n**Generate new authentication token**\n```bash\ncurl -u user:password -X POST -H 'Content-type: application/json' -d '{}' \\\nhttps://$ONEZONE_HOST:8443/api/v3/onezone/user/client_tokens\n```\n\n**Get user details**\n```bash\ncurl -H 'X-Auth-Token: MDAxNWxvY2F0aW9uIG9uZXpvbmUKMDAzYmlk' -X GET \\\nhttps://$ONEZONE_HOST:8443/api/v3/onezone/user \\\n```\n",
    "contact": {
      "name": "Onedata support",
      "url": "https://onedata.org/support",
      "email": "info@onedata.org"
    },
    "license": {
      "name": "Apache 2.0",
      "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
    },
    "x-logo": {
      "url": "https://onedata.org/assets/images/api/onezone-logo.svg",
      "backgroundColor": "#FFFFFF"
    }
  },
  "paths": {
    "/users": {
      "get": {
        "operationId": "list_users",
        "tags": [
          "Users"
        ],
        "x-onedata-service": "onezone",
        "x-onedata-module": "user",
        "x-onedata-resource": "users",
        "x-onedata-method": "user_logic:list",
        "summary": "List all users",
        "x-bash-codegen-description": "Returns the list of all users in the system.\n\nRequires `list_users` privilege.\n",
        "description": "Returns the list of all users in the system.\n\nRequires `list_users` privilege.\n\n***Example cURL requests***\n\n**List all users in the system**\n```bash\n curl -u username:password -X GET https://$HOST:8443/api/v3/onezone/users\n```\n",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "The list of user ID's registered within the Onezone service.\n",
            "schema": {
              "$ref": "#/definitions/Users"
            }
          },
          "400": {
            "description": "Invalid request.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "401": {
            "description": "Authentication error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "Authorization error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Resource not found.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server Error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "x-code-samples": [
          {
            "lang": "Shell",
            "source": "onezone-rest-cli listUsers"
          }
        ]
      }
    },
    "/users/{id}": {
      "get": {
        "operationId": "get_user",
        "tags": [
          "Users"
        ],
        "x-onedata-service": "onezone",
        "x-onedata-module": "user",
        "x-onedata-resource": "user",
        "x-onedata-method": "user_logic:get",
        "x-onedata-permissions": [
          "user_view_data",
          "list_users"
        ],
        "summary": "Get user details",
        "x-bash-codegen-description": "Returns the information about a specific user.\n\nThis operation requires `list_users` privilege.\n",
        "description": "Returns the information about a specific group.\n\nThis operation requires `list_users` privilege.\n\n***Example cURL requests***\n\n**Get user details**\n```bash\ncurl -u username:password -X GET \\\nhttps://$HOST:8443/api/v3/onezone/users/lb0NvUXIVguzjQ3dBOXAyd1c61fWKB5dKJDQ6YvB7a0\n\n{\n  \"userId\": \"lb0NvUXIVguzjQ3dBOXAyd1c61fWKB5dKJDQ6YvB7a0\",\n  \"login\": \"admin\",\n  \"name\": \"admin\",\n  \"connectedAccounts\": [],\n  \"alias\": \"\",\n  \"emailList\": []\n}\n```\n",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Information about a user.",
            "schema": {
              "$ref": "#/definitions/User"
            }
          },
          "400": {
            "description": "Invalid request.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "401": {
            "description": "Authentication error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "Authorization error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Resource not found.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server Error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "User ID.",
            "type": "string",
            "required": true
          }
        ],
        "x-code-samples": [
          {
            "lang": "Shell",
            "source": "onezone-rest-cli getUser id=lb0NvUXIVguzjQ3dBOXAyd1c61fWKB5dKJDQ6YvB7a0"
          }
        ]
      },
      "delete": {
        "operationId": "remove_user",
        "tags": [
          "User"
        ],
        "x-onedata-service": "onezone",
        "x-onedata-module": "user",
        "x-onedata-resource": "user",
        "x-onedata-method": "user_logic:delete",
        "x-onedata-permissions": [
          "user_remove"
        ],
        "summary": "Remove user",
        "x-bash-codegen-description": "Removes a specific user.\n\nThis operation requires `oz_users_delete` privilege.\n",
        "description": "Removes a specific user.\n\nThis operation requires `oz_users_delete` privilege.\n\n***Example cURL requests***\n\n**Remove user**\n```bash\ncurl -u admin:password -X DELETE  \\\nhttps://$HOST:8443/api/v3/onezone/users/LT88rteQ4KMSYXMWO0Oibiqn7X5nUD51NTsCqgDN8e4\n```\n",
        "responses": {
          "202": {
            "description": "The user will be removed."
          },
          "400": {
            "description": "Invalid request.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "401": {
            "description": "Authentication error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "Authorization error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Resource not found.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server Error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "User ID.",
            "type": "string",
            "required": true
          }
        ],
        "x-code-samples": [
          {
            "lang": "Shell",
            "source": "onezone-rest-cli removeUser id=HwUpk8jrwxKOe45uzLFX2GVC8lKEasj4q253sptVqF8"
          }
        ]
      }
    },
    "/users/{id}/privileges": {
      "get": {
        "operationId": "list_user_onezone_privileges",
        "tags": [
          "Users"
        ],
        "x-onedata-service": "onezone",
        "x-onedata-module": "privileges",
        "x-onedata-resource": "upriv",
        "x-onedata-method": "onezone_logic:get_user_privileges",
        "summary": "List user Onezone privileges",
        "x-bash-codegen-description": "Returns the list of user privileges for Onezone.\n\nThis operation requires `view_privileges` privilege.\n",
        "description": "Returns the list of user privileges for Onezone.\n\nThis operation requires `view_privileges` privilege.\n\n***Example cURL requests***\n\n**Get users privileges to Onezone service**\n```bash\ncurl -u username:password -X GET  \\\nhttps://$HOST:8443/api/v3/onezone/users/ivMnRLb2WYNApEmP-j3SF0NsqBgdHG7iel89FHY802w/privileges\n\n{\n  \"privileges\": []\n}\n```\n",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "The list of user privileges in Onezone.",
            "schema": {
              "$ref": "#/definitions/OnezonePrivileges"
            }
          },
          "400": {
            "description": "Invalid request.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "401": {
            "description": "Authentication error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "Authorization error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Resource not found.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server Error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "User ID.",
            "type": "string",
            "required": true
          }
        ],
        "x-code-samples": [
          {
            "lang": "Shell",
            "source": "onezone-rest-cli listUserOnezonePrivileges id=T5x_HhFYOnILOCUf9OqgExw00RwaU2MXT5122oWk_sM"
          }
        ]
      },
      "patch": {
        "operationId": "set_user_onezone_privileges",
        "tags": [
          "User"
        ],
        "x-onedata-service": "onezone",
        "x-onedata-module": "onezone",
        "x-onedata-resource": "upriv",
        "x-onedata-method": "onezone_logic:set_privileges",
        "summary": "Set user's Onezone privileges",
        "x-bash-codegen-description": "Modifies privileges for a user {id} for Onezone.\n\nThis operation requires `set_privileges` privilege.\n",
        "description": "Modifies privileges for a user {id} for Onezone.\n\nThis operation requires `set_privileges` privilege.\n\n***Example cURL requests***\n\n**Modifies users privileges to Onezone service**\n```bash\ncurl -u username:password  -H \"Content-type: application/json\"  -X PUT \\\n-d '{\"privileges\":[\"list_spaces\"]}' \\\nhttps://$HOST:8443/api/v3/onezone/users/ivMnRLb2WYNApEmPj3SF0NsqBgdHG7iel89FHY802w/privileges\n```\n",
        "responses": {
          "204": {
            "description": "The user privileges have been updated."
          },
          "400": {
            "description": "Invalid request.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "401": {
            "description": "Authentication error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "Authorization error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Resource not found.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server Error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "User ID.",
            "type": "string",
            "required": true
          },
          {
            "name": "data",
            "in": "body",
            "description": "User Onezone privileges.",
            "schema": {
              "$ref": "#/definitions/OnezonePrivileges"
            }
          }
        ],
        "x-code-samples": [
          {
            "lang": "Shell",
            "source": "echo '[\"list_spaces\", \"list_spaces\"]' | onezone-rest-cli setUserOnezonePrivileges id=T5x_HhFYOnILOCUf9OqgExw00RwaU2MXT5122oWk_sM -"
          }
        ]
      },
      "delete": {
        "operationId": "remove_user_onezone_privileges",
        "tags": [
          "User"
        ],
        "x-onedata-service": "onezone",
        "x-onedata-module": "onezone",
        "x-onedata-resource": "upriv",
        "x-onedata-method": "onezone_logic:remoev_privileges",
        "summary": "Remove user's Onezone privileges",
        "x-bash-codegen-description": "Removes all privileges for a user {id} to Onezone.\n\nThis operation requires `set_privileges` privilege.\n",
        "description": "Removes all privileges for a user {id} to Onezone.\n\nThis operation requires `set_privileges` privilege.\n\n***Example cURL requests***\n\n**Delete all user privileges to Onezone service**\n```bash\ncurl -u username:password  -X DELETE  \\\nhttps://$HOST:8443/api/v3/onezone/users/ivMnRLb2WYNApEmP-j3SF0NsqBgdHG7iel89FHY802w/privileges\n```\n",
        "responses": {
          "202": {
            "description": "The user privileges will be removed."
          },
          "400": {
            "description": "Invalid request.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "401": {
            "description": "Authentication error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "Authorization error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Resource not found.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server Error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "User ID.",
            "type": "string",
            "required": true
          }
        ],
        "x-code-samples": [
          {
            "lang": "Shell",
            "source": "onezone-rest-cli removeUserOnezonePrivileges id=T5x_HhFYOnILOCUf9OqgExw00RwaU2MXT5122oWk_sM"
          }
        ]
      }
    },
    "/users/{id}/effective_privileges": {
      "get": {
        "operationId": "list_user_onezone_effective_privileges",
        "tags": [
          "Users"
        ],
        "x-onedata-service": "onezone",
        "x-onedata-module": "privileges",
        "x-onedata-resource": "upriv",
        "x-onedata-method": "onezone_logic:get_user_privileges",
        "summary": "List user's effective Onezone privileges",
        "x-bash-codegen-description": "Returns the list of user privileges for Onezone.\n\nThis operation requires `view_privileges` privilege.\n",
        "description": "Returns the list of user privileges for Onezone.\n\nThis operation requires `view_privileges` privilege.\n\n***Example cURL requests***\n\n**Get users privileges to Onezone service**\n```bash\ncurl -u username:password -X GET  \\\nhttps://$HOST:8443/api/v3/onezone/users/ivMnRLb2WYNApEmP-j3SF0NsqBgdHG7iel89FHY802w/effective_privileges\n\n{\n  \"privileges\": []\n}\n```\n",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "The list of user effective privileges in Onezone.",
            "schema": {
              "$ref": "#/definitions/OnezonePrivileges"
            }
          },
          "400": {
            "description": "Invalid request.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "401": {
            "description": "Authentication error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "Authorization error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Resource not found.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server Error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "User ID.",
            "type": "string",
            "required": true
          }
        ],
        "x-code-samples": [
          {
            "lang": "Shell",
            "source": "onezone-rest-cli listUserOnezoneEffectivePrivileges id=T5x_HhFYOnILOCUf9OqgExw00RwaU2MXT5122oWk_sM"
          }
        ]
      }
    },
    "/user": {
      "get": {
        "operationId": "get_current_user",
        "tags": [
          "User"
        ],
        "x-onedata-service": "onezone",
        "x-onedata-module": "user",
        "x-onedata-method": "user_logic:get_data",
        "summary": "Get current user details",
        "x-bash-codegen-description": "Returns details about currently authenticated user.\n\nThis operation can be invoked on behalf of current user only.\n",
        "description": "Returns details about currently authenticated user.\n\nThis operation can be invoked on behalf of current user only.\n\n***Example cURL requests***\n\n**Get user details**\n```bash\ncurl -u username:password -X GET https://$HOST:8443/api/v3/onezone/user\n\n{\n  \"userId\": \"lb0NvUXIVguzjQ3dBOXAyd1c61fWKB5dKJDQ6YvB7a0\",\n  \"login\": \"admin\",\n  \"name\": \"admin\",\n  \"connectedAccounts\": [],\n  \"alias\": \"\",\n  \"emailList\": []\n}\n```\n",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Returns the information about user.",
            "schema": {
              "$ref": "#/definitions/User"
            }
          },
          "400": {
            "description": "Invalid request.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "Forbidden request.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Resource not found..",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "x-code-samples": [
          {
            "lang": "Shell",
            "source": "onezone-rest-cli getCurrentUser"
          }
        ]
      },
      "patch": {
        "operationId": "modify_current_user",
        "tags": [
          "User"
        ],
        "x-onedata-service": "onezone",
        "x-onedata-module": "user",
        "x-onedata-method": "user_logic:modify",
        "summary": "Modify current user",
        "x-bash-codegen-description": "Modifies user account details based on information provided in the request body.\n\nThis operation can be invoked on behalf of current user only.\n",
        "description": "Modifies user account details based on information provided in the request body.\n\nThis operation can be invoked on behalf of current user only.\n\n***Example cURL requests***\n\n**Change user name**\n```bash\ncurl -u username:password  -H \"Content-type: application/json\" -X PATCH  \\\n-d '{\"name\": \"new_name\"}' \\\nhttps://$HOST:8443/api/v3/onezone/user\n```\n",
        "consumes": [
          "application/json"
        ],
        "responses": {
          "204": {
            "description": "User information updated successfully."
          },
          "400": {
            "description": "Invalid request.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "401": {
            "description": "Authentication error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "Authorization error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Resource not found.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server Error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "description": "User data.",
            "schema": {
              "$ref": "#/definitions/UserUpdateRequest"
            },
            "required": true
          }
        ],
        "x-code-samples": [
          {
            "lang": "Shell",
            "source": "onezone-rest-cli modifyCurrentUser name==new_name"
          }
        ]
      },
      "delete": {
        "operationId": "remove_current_user",
        "tags": [
          "User"
        ],
        "x-onedata-service": "onezone",
        "x-onedata-module": "user",
        "x-onedata-method": "user_logic:remove",
        "summary": "Remove current user",
        "x-bash-codegen-description": "Removes the account of currently authenticated user.\n",
        "description": "Removes the account of currently authenticated user.\n\n***Example cURL requests***\n\n**Remove user account**\n```bash\ncurl -u username:password -X DELETE  \\\nhttps://$HOST:8443/api/v3/onezone/user\n```\n",
        "responses": {
          "202": {
            "description": "User will be removed."
          },
          "400": {
            "description": "Invalid request.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "401": {
            "description": "Authentication error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "Authorization error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Resource not found.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server Error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "x-code-samples": [
          {
            "lang": "Shell",
            "source": "onezone-rest-cli removeCurrentUser"
          }
        ]
      }
    },
    "/user/authorize": {
      "post": {
        "operationId": "authorize_user",
        "tags": [
          "User"
        ],
        "x-onedata-service": "onezone",
        "x-onedata-module": "user",
        "x-onedata-method": "auth_logic:authenticate_user",
        "summary": "Authenticate user",
        "x-bash-codegen-description": "Authorizes user with authentication token through Onezone web interface.\n\nThis operation has public access.\n",
        "description": "Authorizes user with authentication token through Onezone web interface.\n\nThis operation has public access.\n",
        "consumes": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "User authorized successfully - the body contains a discharge macaroon.",
            "schema": {
              "type": "string"
            }
          },
          "400": {
            "description": "Invalid request.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "401": {
            "description": "Authentication error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "Authorization error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Resource not found.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server Error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "description": "User authentication token.",
            "schema": {
              "$ref": "#/definitions/AuthenticationToken"
            },
            "required": true
          }
        ],
        "x-code-samples": [
          {
            "lang": "Shell",
            "source": "onezone-rest-cli authorizeUser token==ASKDJHASKJDHLKAJASD785674ASDghjkoGLHJKASDJGHK7655I803ZirkUfdiWDd4W3"
          }
        ]
      }
    },
    "/user/privileges": {
      "get": {
        "operationId": "list_current_user_privileges",
        "tags": [
          "User"
        ],
        "x-onedata-service": "onezone",
        "x-onedata-module": "privileges",
        "x-onedata-resource": "upriv",
        "x-onedata-method": "onezone_logic:get_user_privileges",
        "summary": "List current user privileges",
        "x-bash-codegen-description": "Returns the list of currently authenticated user privileges for Onezone.\n\nThis operation can be invoked on behalf of current user only.\n\nThis operation requires `get_privileges` administrator privilege.\n",
        "description": "Returns the list of currently authenticated user privileges for Onezone.\n\nThis operation can be invoked on behalf of current user only.\n\nThis operation requires `get_privileges` administrator privilege.\n\n***Example cURL requests***\n\n**Get users privileges to Onezone service**\n```bash\ncurl -u username:password -X GET  \\\nhttps://$HOST:8443/api/v3/onezone/user/privileges\n\n{\n  \"privileges\": []\n}\n```\n",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "The list of user privileges in Onezone.",
            "schema": {
              "$ref": "#/definitions/OnezonePrivileges"
            }
          },
          "400": {
            "description": "Invalid request.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "401": {
            "description": "Authentication error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "Authorization error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Resource not found.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server Error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "x-code-samples": [
          {
            "lang": "Shell",
            "source": "onezone-rest-cli listCurrentUserPrivileges"
          }
        ]
      },
      "patch": {
        "operationId": "set_current_user_privileges",
        "tags": [
          "User"
        ],
        "x-onedata-service": "onezone",
        "x-onedata-module": "onezone",
        "x-onedata-resource": "upriv",
        "x-onedata-method": "onezone_logic:set_privileges",
        "summary": "Set current user privileges",
        "x-bash-codegen-description": "Modifies privileges for a user for Onezone.\n\nThis operation can be invoked on behalf of current user only.\n\nThis operation requires `set_privileges` administrator privilege.\n",
        "description": "Modifies privileges for a user for Onezone.\n\nThis operation can be invoked on behalf of current user only.\n\nThis operation requires `set_privileges` administrator privilege.\n\n***Example cURL requests***\n\n**Modifies users privileges to Onezone service**\n```bash\ncurl -u username:password  -H \"Content-type: application/json\"  -X PUT \\\n-d '{\"privileges\":[\"list_spaces\"]}' \\\nhttps://$HOST:8443/api/v3/onezone/user/privileges\n```\n",
        "responses": {
          "204": {
            "description": "The user privileges have been updated."
          },
          "400": {
            "description": "Invalid request.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "401": {
            "description": "Authentication error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "Authorization error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Resource not found.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server Error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "description": "User Onezone privileges.",
            "schema": {
              "$ref": "#/definitions/OnezonePrivileges"
            }
          }
        ],
        "x-code-samples": [
          {
            "lang": "Shell",
            "source": "echo '[\"list_spaces\", \"list_spaces\"]' | onezone-rest-cli setCurrentUserPrivileges -"
          }
        ]
      },
      "delete": {
        "operationId": "remove_current_user_privileges",
        "tags": [
          "User"
        ],
        "x-onedata-service": "onezone",
        "x-onedata-module": "onezone",
        "x-onedata-resource": "upriv",
        "x-onedata-method": "onezone_logic:remove_privileges",
        "summary": "Remove current user privileges",
        "x-bash-codegen-description": "Removes all privileges for a user to Onezone.\n\nThis operation can be invoked on behalf of current user only.\n\nThis operation requires `set_privileges` administrator privilege.\n",
        "description": "Removes all privileges for a user to Onezone.\n\nThis operation can be invoked on behalf of current user only.\n\nThis operation requires `set_privileges` administrator privilege.\n\n***Example cURL requests***\n\n**Delete all user privileges to Onezone service**\n```bash\ncurl -u username:password  -X DELETE  \\\nhttps://$HOST:8443/api/v3/onezone/users/privileges\n```\n",
        "responses": {
          "202": {
            "description": "The user privileges will be cleared."
          },
          "400": {
            "description": "Invalid request.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "401": {
            "description": "Authentication error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "Authorization error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Resource not found.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server Error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "x-code-samples": [
          {
            "lang": "Shell",
            "source": "onezone-rest-cli removeCurrentUserPrivileges"
          }
        ]
      }
    },
    "/user/effective_privileges": {
      "get": {
        "operationId": "list_current_user_effective_privileges",
        "tags": [
          "User"
        ],
        "x-onedata-service": "onezone",
        "x-onedata-module": "privileges",
        "x-onedata-resource": "upriv",
        "x-onedata-method": "onezone_logic:get_user_effective_privileges",
        "summary": "List current user effective privileges",
        "x-bash-codegen-description": "Returns the list of currently authenticated user effective privileges for Onezone.\n\nThis operation can be invoked on behalf of current user only.\n\nThis operation requires `get_privileges` administrator privilege.\n",
        "description": "Returns the list of currently authenticated user effective privileges for Onezone.\n\nThis operation can be invoked on behalf of current user only.\n\nThis operation requires `get_privileges` administrator privilege.\n\n\n***Example cURL requests***\n\n**Get users privileges to Onezone service**\n```bash\ncurl -u username:password -X GET  \\\nhttps://$HOST:8443/api/v3/onezone/user/effective_privileges\n\n{\n  \"privileges\": []\n}\n```\n",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "The list of user effective privileges in Onezone.",
            "schema": {
              "$ref": "#/definitions/OnezonePrivileges"
            }
          },
          "400": {
            "description": "Invalid request.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "401": {
            "description": "Authentication error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "Authorization error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Resource not found.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server Error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "x-code-samples": [
          {
            "lang": "Shell",
            "source": "onezone-rest-cli listCurrentUserEffectivePrivileges"
          }
        ]
      }
    },
    "/user/client_tokens": {
      "get": {
        "operationId": "list_client_tokens",
        "tags": [
          "User"
        ],
        "x-onedata-service": "onezone",
        "x-onedata-module": "user",
        "x-onedata-resource": "utoken",
        "x-onedata-method": "token_logic:get",
        "summary": "List user access tokens",
        "x-bash-codegen-description": "Returns the list of user tokens.\n\nThis operation can be invoked on behalf of currently authenticated user only.\n",
        "description": "Returns the list of user tokens.\n\nThis operation can be invoked on behalf of currently authenticated user only.\n\n***Example cURL requests***\n\n**Get user tokens**\n```bash\ncurl -u username:password -X GET https://$HOST:8443/api/v3/onezone/user/client_tokens\n\n{\n  \"tokens: [\n     \"LKHKJASDkkajsdnKJASDkjasDJASDjkasACJNS2KJNAS\"\n  ]\n}\n```\n",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "The list of user access tokens.",
            "schema": {
              "$ref": "#/definitions/ClientTokens"
            }
          },
          "400": {
            "description": "Invalid request.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "401": {
            "description": "Authentication error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "Authorization error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Resource not found.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server Error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "x-code-samples": [
          {
            "lang": "Shell",
            "source": "onezone-rest-cli listClientTokens"
          }
        ]
      },
      "post": {
        "operationId": "create_client_token",
        "tags": [
          "User"
        ],
        "x-onedata-service": "onezone",
        "x-onedata-module": "user",
        "x-onedata-resource": "utoken",
        "x-onedata-method": "token_logic:create",
        "summary": "Generate user access token",
        "x-bash-codegen-description": "Creates new user token.\n\nThis operation can be invoked on behalf of currently authenticated user only.\n",
        "description": "Creates new user token. The token is returned in the response body.\n\nThis operation can be invoked on behalf of currently authenticated user only.\n\n***Example cURL requests***\n\n**Generate user token**\n```bash\ncurl -u username:password -X POST -d '' -H 'content-type: application/json' \\\n  https://$HOST:8443/api/v3/onezone/user/client_tokens\n\n{\n  \"token\": \"MDAxNWxvY2F00aW9uIG9uZXpvbmUKMDAzYmlkZW500aWZpZXIgSlVxNGFLVkJSTXVFN3FLbHNQVHlNX00lLeHpYZXNWdVFSMGNfMldpOXFZNAowMDFhY2lkIHRpbWUgPCAxNTIyMzU4MzMzCjAwMmZzaWduYXR1cmUgv02ByyOA9802H02rPMB7Y9mIhDVAjYDmjAUjtrMs13znukK\"\n}\n```\n",
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "The token has been successfully created.",
            "schema": {
              "$ref": "#/definitions/ClientToken"
            }
          },
          "400": {
            "description": "Invalid request.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "401": {
            "description": "Authentication error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "Authorization error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Resource not found.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server Error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "parameters": [
          {
            "name": "options",
            "description": "Optional token parameters",
            "in": "body",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "x-code-samples": [
          {
            "lang": "Shell",
            "source": "onezone-rest-cli createClientToken"
          }
        ]
      }
    },
    "/user/client_tokens/{tid}": {
      "delete": {
        "operationId": "remove_client_token",
        "tags": [
          "User"
        ],
        "x-onedata-service": "onezone",
        "x-onedata-module": "user",
        "x-onedata-method": "user_logic:remove_token",
        "summary": "Delete access token",
        "x-bash-codegen-description": "Removes a specific access token.\n\nThis operation can be invoked on behalf of current user only.\n",
        "description": "Removes a specific access token.\n\nThis operation can be invoked on behalf of current user only.\n\n***Example cURL requests***\n\n**Delete user space**\n```bash\ncurl -u username:password -X DELETE \\\nhttps://$HOST:8443/api/v3/onezone/user/client_tokens/PMPs42mROSS7Rg7z7BwU9JYpSof4SvIW5v14uQY8X08\n```\n",
        "produces": [
          "application/json"
        ],
        "responses": {
          "202": {
            "description": "The token will be deleted."
          },
          "400": {
            "description": "Invalid request.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "401": {
            "description": "Authentication error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "Authorization error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Resource not found.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server Error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "parameters": [
          {
            "name": "tid",
            "in": "path",
            "description": "Token.",
            "type": "string",
            "required": true
          }
        ],
        "x-code-samples": [
          {
            "lang": "Shell",
            "source": "onezone-rest-cli removeClientSpace tid=LKJGHASDJHasdklajlsd899878asdJKAS22AJKLSHDLJKASD"
          }
        ]
      }
    },
    "/user/default_space": {
      "get": {
        "operationId": "get_default_space",
        "tags": [
          "User"
        ],
        "x-onedata-service": "onezone",
        "x-onedata-module": "spaces",
        "x-onedata-method": "user_logic:get_default_space",
        "summary": "Get default space",
        "x-bash-codegen-description": "Returns the ID of the default users space.\n\nThis operation can be invoked on behalf of current user only.\n",
        "description": "Returns the ID of the default users space.\n\nThis operation can be invoked on behalf of current user only.\n\n***Example cURL requests***\n\n**Get user default space**\n```bash\ncurl -u username:password -X GET \\\nhttps://$HOST:8443/api/v3/onezone/user/default_space\n\n{\n  \"spaceId\": \"undefined\"\n}\n```\n",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Returns the Id of the default user space or 'undefined' in case no space is selected as default.",
            "schema": {
              "$ref": "#/definitions/DefaultSpace"
            }
          },
          "400": {
            "description": "Invalid request.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "401": {
            "description": "Authentication error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "Authorization error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Resource not found.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server Error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "x-code-samples": [
          {
            "lang": "Shell",
            "source": "onezone-rest-cli getDefaultSpace"
          }
        ]
      },
      "put": {
        "operationId": "set_default_space",
        "tags": [
          "User"
        ],
        "x-onedata-service": "onezone",
        "x-onedata-module": "spaces",
        "x-onedata-method": "user_logic:set_default_space",
        "summary": "Set default space",
        "x-bash-codegen-description": "Sets default space for current user.\n\nThis operation can be invoked on behalf of current user only.\n",
        "description": "Sets default space for current user.\n\nThis operation can be invoked on behalf of current user only.\n\n***Example cURL requests***\n\n**Set user default space**\n```bash\ncurl -u username:password  -H \"Content-type: application/json\" -X PUT \\\n-d '{ \"spaceId\" : \"S0Y9FSeSrVTXCTmCpgqfH4-_Dw3Uc9TFJFFzzLtBEs8\" }' \\\nhttps://$HOST:8443/api/v3/onezone/user/default_space\n```\n",
        "consumes": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Default space set successfully."
          },
          "400": {
            "description": "Invalid request.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "401": {
            "description": "Authentication error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "Authorization error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Resource not found.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server Error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "parameters": [
          {
            "name": "defaultspace",
            "in": "body",
            "description": "Default Space ID.",
            "schema": {
              "$ref": "#/definitions/DefaultSpace"
            },
            "required": true
          }
        ],
        "x-code-samples": [
          {
            "lang": "Shell",
            "source": "onezone-rest-cli setDefaultSpace spaceId==LASKJLD7687ASDJKLHGasd67867KJGHASDJHAJKLSHDLJKASD"
          }
        ]
      },
      "delete": {
        "operationId": "remove_default_space",
        "tags": [
          "User"
        ],
        "x-onedata-service": "onezone",
        "x-onedata-module": "spaces",
        "x-onedata-method": "user_logic:set_default_space",
        "summary": "Unset default space",
        "x-bash-codegen-description": "Removes default space setting for current user.\n\nThis operation can be invoked on behalf of current user only.\n",
        "description": "Removes default space setting for current user.\n\nThis operation can be invoked on behalf of current user only.\n\n***Example cURL requests***\n\n**Set user default space**\n```bash\ncurl -u username:password  -X DELETE \\\nhttps://$HOST:8443/api/v3/onezone/user/default_space\n```\n",
        "consumes": [
          "application/json"
        ],
        "responses": {
          "202": {
            "description": "Default space will be removed."
          },
          "400": {
            "description": "Invalid request.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "401": {
            "description": "Authentication error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "Authorization error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Resource not found.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server Error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "x-code-samples": [
          {
            "lang": "Shell",
            "source": "onezone-rest-cli removeDefaultSpace"
          }
        ]
      }
    },
    "/user/default_provider": {
      "get": {
        "operationId": "get_default_provider",
        "tags": [
          "User"
        ],
        "x-onedata-service": "onezone",
        "x-onedata-module": "spaces",
        "x-onedata-method": "user_logic:get_default_provider",
        "summary": "Get default provider",
        "x-bash-codegen-description": "Returns the ID of the default provider.\n\nThis operation can be invoked on behalf of current user only.\n",
        "description": "Returns the ID of the default provider.\n\nThis operation can be invoked on behalf of current user only.\n\n***Example cURL requests***\n\n**Get user default provider**\n```bash\ncurl -u username:password -X GET \\\nhttps://$HOST:8443/api/v3/onezone/user/default_provider\n\n{\n  \"providerId\": \"oOVF-KrO1P6rpA0LFgNVI8NxuhxyQMUnrYzjAnKiyAY\"\n}\n```\n",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Returns the Id of the default user provider or '404'.",
            "schema": {
              "$ref": "#/definitions/DefaultProvider"
            }
          },
          "400": {
            "description": "Invalid request.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "401": {
            "description": "Authentication error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "Authorization error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Resource not found.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server Error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "x-code-samples": [
          {
            "lang": "Shell",
            "source": "onezone-rest-cli getDefaultProvider"
          }
        ]
      },
      "put": {
        "operationId": "set_default_provider",
        "tags": [
          "User"
        ],
        "x-onedata-service": "onezone",
        "x-onedata-module": "spaces",
        "x-onedata-method": "user_logic:set_default_provider",
        "summary": "Set default provider",
        "x-bash-codegen-description": "Sets default provider for current user.\n\nThis operation can be invoked on behalf of current user only.\n",
        "description": "Sets default provider for current user.\n\nThis operation can be invoked on behalf of current user only.\n\n***Example cURL requests***\n\n**Set user default provider**\n```bash\ncurl -u username:password  -H \"Content-type: application/json\" -X PUT \\\n-d '{ \"providerId\" : \"S0Y9FSeSrVTXCTmCpgqfH4-_Dw3Uc9TFJFFzzLtBEs8\" }' \\\nhttps://$HOST:8443/api/v3/onezone/user/default_provider\n```\n",
        "consumes": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Default provider set successfully."
          },
          "400": {
            "description": "Invalid request.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "401": {
            "description": "Authentication error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "Authorization error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Resource not found.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server Error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "parameters": [
          {
            "name": "defaultprovider",
            "in": "body",
            "description": "Default provider ID.",
            "schema": {
              "$ref": "#/definitions/DefaultProvider"
            },
            "required": true
          }
        ],
        "x-code-samples": [
          {
            "lang": "Shell",
            "source": "onezone-rest-cli setDefaultProvider providerId==LASKJLD7687ASDJKLHGasd67867KJGHASDJHAJKLSHDLJKASD"
          }
        ]
      },
      "delete": {
        "operationId": "remove_default_provider",
        "tags": [
          "User"
        ],
        "x-onedata-service": "onezone",
        "x-onedata-module": "spaces",
        "x-onedata-method": "user_logic:set_default_provider",
        "summary": "Unset default provider",
        "x-bash-codegen-description": "Removes default provider setting for current user.\n\nThis operation can be invoked on behalf of current user only.\n",
        "description": "Removes default provider setting for current user.\n\nThis operation can be invoked on behalf of current user only.\n\n***Example cURL requests***\n\n**Set user default space**\n```bash\ncurl -u username:password  -X DELETE \\\nhttps://$HOST:8443/api/v3/onezone/user/default_provider\n```\n",
        "consumes": [
          "application/json"
        ],
        "responses": {
          "202": {
            "description": "Default provider removed successfully."
          },
          "400": {
            "description": "Invalid request.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "401": {
            "description": "Authentication error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "Authorization error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Resource not found.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server Error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "x-code-samples": [
          {
            "lang": "Shell",
            "source": "onezone-rest-cli removeDefaultProvider"
          }
        ]
      }
    },
    "/user/groups": {
      "get": {
        "operationId": "list_user_groups",
        "tags": [
          "User"
        ],
        "x-onedata-service": "onezone",
        "x-onedata-module": "user",
        "x-onedata-method": "user_logic:get_groups",
        "summary": "List user groups",
        "x-bash-codegen-description": "Returns the list of user's groups.\n\nThis operation can be invoked on behalf of current user only.\n",
        "description": "Returns the list of user's groups.\n\nThis operation can be invoked on behalf of current user only.\n\n***Example cURL requests***\n\n**Get user groups**\n```bash\ncurl -u admin:password -X GET \\\nhttps://$HOST:8443/api/v3/onezone/user/groups\n\n{\n  \"groups\": [\n    \"ASDLKJASLDKJLKASJDAJHSGD66ASDjasadA\"\n  ]\n}\n```\n",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "The list of groups.",
            "schema": {
              "$ref": "#/definitions/Groups"
            }
          },
          "400": {
            "description": "Invalid request.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "401": {
            "description": "Authentication error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "Authorization error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Resource not found.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server Error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "x-code-samples": [
          {
            "lang": "Shell",
            "source": "onezone-rest-cli listUserGroups"
          }
        ]
      },
      "post": {
        "operationId": "create_group_for_user",
        "tags": [
          "User"
        ],
        "x-onedata-service": "onezone",
        "x-onedata-module": "group",
        "x-onedata-method": "group_logic:create",
        "summary": "Create new group",
        "x-bash-codegen-description": "Creates a new group for the current user.\nThe user automatically becomes a member of this group.\n\nThis operation can be invoked on behalf of current user only.\n",
        "description": "Creates a new group for the current user.\nThe user automatically becomes a member of this group.\n\nThis operation can be invoked on behalf of current user only.\n\n***Example cURL requests***\n\n**Create new group**\n```bash\ncurl -u username:password  -H \"Content-type: application/json\" \\\n-X POST -d '{ \"name\" : \"test_group\" , \"type\" : \"role\" }' \\\nhttps://$HOST:8443/api/v3/onezone/user/groups\n```\n",
        "consumes": [
          "application/json"
        ],
        "responses": {
          "201": {
            "description": "ID of the created group in the form /user/groups/{gid} is returned in the response `Location` header.\n",
            "headers": {
              "Location": {
                "description": "ID of the created group.",
                "type": "string"
              }
            }
          },
          "400": {
            "description": "Invalid request.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "401": {
            "description": "Authentication error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "Authorization error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Resource not found.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server Error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "parameters": [
          {
            "name": "group",
            "in": "body",
            "description": "New group parameters.",
            "schema": {
              "$ref": "#/definitions/Group"
            },
            "required": true
          }
        ],
        "x-code-samples": [
          {
            "lang": "Shell",
            "source": "onezone-rest-cli createGroupForUser name==Group1 type==team"
          }
        ]
      }
    },
    "/user/groups/join": {
      "post": {
        "operationId": "join_group",
        "tags": [
          "User"
        ],
        "x-onedata-service": "onezone",
        "x-onedata-module": "user",
        "x-onedata-method": "group_logic:join",
        "summary": "Join group",
        "x-bash-codegen-description": "Join existing group using inivitation token.\n\nThis operation can be invoked on behalf of current user only.\n",
        "description": "Join existing group using inivitation token.\n\nThis operation can be invoked on behalf of current user only.\n\n***Example cURL requests***\n\n**Join group**\n\n```bash\ncurl -u username:password  -H \"Content-type: application/json\" \\\n-X POST -d '{ \"token\": \"LKJGH6785678asdASDKhj879asdLKJHASDASDJHAJKLSHDLJKASD\" }' \\\nhttps://$HOST:8443/api/v3/onezone/user/groups/join\n```\n",
        "consumes": [
          "application/json"
        ],
        "responses": {
          "201": {
            "description": "ID of the joined group in the form /user/groups/{id} is returned in the response `Location` header.\n",
            "headers": {
              "Location": {
                "description": "ID of the joined group.",
                "type": "string"
              }
            }
          },
          "400": {
            "description": "Invalid request.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "401": {
            "description": "Authentication error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "Authorization error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Resource not found.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server Error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "parameters": [
          {
            "name": "groupinvitetoken",
            "in": "body",
            "description": "Token for joining a group.",
            "schema": {
              "$ref": "#/definitions/GroupInviteToken"
            },
            "required": true
          }
        ],
        "x-code-samples": [
          {
            "lang": "Shell",
            "source": "onezone-rest-cli joinGroup token==LKJGH6785678asdASDKhj879asdLKJHASDASDJHAJKLSHDLJKASD"
          }
        ]
      }
    },
    "/user/groups/{gid}": {
      "get": {
        "operationId": "get_user_group",
        "tags": [
          "User"
        ],
        "x-onedata-service": "onezone",
        "x-onedata-module": "group",
        "x-onedata-method": "group_logic:get_data",
        "summary": "Get group details",
        "x-bash-codegen-description": "Returns information about a specific group to which the user belongs.\n\nThis operation can be invoked on behalf of current user only.\n",
        "description": "Returns information about a specific group to which the user belongs.\n\nThis operation can be invoked on behalf of current user only.\n\n***Example cURL requests***\n\n**Get user groups**\n```bash\ncurl -u username:password -X GET \\\nhttps://$HOST:8443/api/v3/onezone/user/groups/LKJGHASDJHAJKLSHDLJKASD\n\n{\n  \"groupId\": \"LKJGHASDJHAJKLSHDLJKASD\",\n  \"name\": \"admins\",\n  \"type\": \"role\"\n}\n```\n",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Returns the information about a specific group.",
            "schema": {
              "$ref": "#/definitions/Group"
            }
          },
          "400": {
            "description": "Invalid request.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "401": {
            "description": "Authentication error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "Authorization error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Resource not found.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server Error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "parameters": [
          {
            "name": "gid",
            "in": "path",
            "description": "Group ID.",
            "type": "string",
            "required": true
          }
        ],
        "x-code-samples": [
          {
            "lang": "Shell",
            "source": "onezone-rest-cli getUserGroup gid=LKJGHASDJHAJKLSHDLJKASD"
          }
        ]
      },
      "delete": {
        "operationId": "leave_group",
        "tags": [
          "User"
        ],
        "x-onedata-service": "onezone",
        "x-onedata-module": "group",
        "x-onedata-method": "group_logic:remove_user",
        "summary": "Leave group",
        "x-bash-codegen-description": "Removes the current user from a specific group.\n\nThis operation can be invoked on behalf of current user only.\n",
        "description": "Removes the current user from a specific group.\n\nThis operation can be invoked on behalf of current user only.\n\n***Example cURL requests***\n\n**Leave group**\n```bash\ncurl -u username:password -X DELETE \\\nhttps://$HOST:8443/api/v3/onezone/user/groups/qScCV0Tt3NiTLYbx_DGzJFnQxDYQNqNxk6o5YANWRo8\n```\n",
        "produces": [
          "application/json"
        ],
        "responses": {
          "202": {
            "description": "The user will be removed from group."
          },
          "400": {
            "description": "Invalid request.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "401": {
            "description": "Authentication error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "Authorization error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Resource not found.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server Error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "parameters": [
          {
            "name": "gid",
            "in": "path",
            "description": "Group ID.",
            "type": "string",
            "required": true
          }
        ],
        "x-code-samples": [
          {
            "lang": "Shell",
            "source": "onezone-rest-cli leaveGroup gid=LKJGHASDJHAJKLSHDLJKASD"
          }
        ]
      }
    },
    "/user/effective_groups": {
      "get": {
        "operationId": "list_effective_user_groups",
        "tags": [
          "User"
        ],
        "x-onedata-service": "onezone",
        "x-onedata-module": "user",
        "x-onedata-method": "user_logic:get_effective_groups",
        "summary": "List effective user groups",
        "x-bash-codegen-description": "Returns the list of user's effective groups.\n\nThis operation can be invoked on behalf of current user only.\n",
        "description": "Returns the list of user's effective groups.\n\nThis operation can be invoked on behalf of current user only.\n\n***Example cURL requests***\n\n**Get user effective groups**\n```bash\ncurl -u admin:password -X GET \\\nhttps://$HOST:8443/api/v3/onezone/user/effective_groups\n\n{\n  \"groups\": [\n    \"admins\"\n  ]\n}\n```\n",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "The list of groups.",
            "schema": {
              "$ref": "#/definitions/Groups"
            }
          },
          "400": {
            "description": "Invalid request.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "401": {
            "description": "Authentication error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "Authorization error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Resource not found.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server Error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "x-code-samples": [
          {
            "lang": "Shell",
            "source": "onezone-rest-cli listEffectiveUserGroups"
          }
        ]
      }
    },
    "/user/effective_groups/{gid}": {
      "get": {
        "operationId": "get_user_effective_group",
        "tags": [
          "User"
        ],
        "x-onedata-service": "onezone",
        "x-onedata-module": "group",
        "x-onedata-method": "group_logic:get_effective_group",
        "summary": "Get effective group details",
        "x-bash-codegen-description": "Returns information about a specific effective group to which the user belongs.\n\nThis operation can be invoked on behalf of current user only.\n",
        "description": "Returns information about a specific effective group to which the user belongs.\n\nThis operation can be invoked on behalf of current user only.\n\n***Example cURL requests***\n\n**Get user effective group**\n```bash\ncurl -u username:password -X GET \\\nhttps://$HOST:8443/api/v3/onezone/user/effective_groups/LKJGHASDJHAJKLSHDLJKASD\n\n{\n  \"groupId\": \"LKJGHASDJHAJKLSHDLJKASD\",\n  \"name\": \"admins\",\n  \"type\": \"role\"\n}\n```\n",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Returns the information about a specific effective group.",
            "schema": {
              "$ref": "#/definitions/Group"
            }
          },
          "400": {
            "description": "Invalid request.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "401": {
            "description": "Authentication error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "Authorization error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Resource not found.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server Error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "parameters": [
          {
            "name": "gid",
            "in": "path",
            "description": "Group ID.",
            "type": "string",
            "required": true
          }
        ],
        "x-code-samples": [
          {
            "lang": "Shell",
            "source": "onezone-rest-cli getUserEffectiveGroup gid=LKJGHASDJHAJKLSHDLJKASD"
          }
        ]
      }
    },
    "/user/spaces": {
      "get": {
        "operationId": "list_user_spaces",
        "tags": [
          "User"
        ],
        "x-onedata-service": "onezone",
        "x-onedata-module": "user",
        "x-onedata-method": "user_logic:get_spaces",
        "summary": "List user spaces",
        "x-bash-codegen-description": "Returns the list of users' spaces.\n\nThis operation can be invoked on behalf of current user only.\n",
        "description": "Returns the list of users' spaces.\n\nThis operation can be invoked on behalf of current user only.\n\n***Example cURL requests***\n\n**Get user spaces**\n```bash\ncurl -u username:password -X GET \\\nhttps://$HOST:8443/api/v3/onezone/user/spaces\n\n{\n  \"spaces\": [\n    \"IkHB2CCoAFm5FCswhAJynbFU4fj26yiE1lhpK3p-0Y8\"\n  ],\n  \"default\": \"undefined\"\n}\n```\n",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Returns the list of user spaces, including information which space is default.\n",
            "schema": {
              "type": "object",
              "properties": {
                "spaces": {
                  "description": "The list of all user spaces ID's.",
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "default": {
                  "description": "The ID of the default user space.",
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "Invalid request.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "401": {
            "description": "Authentication error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "Authorization error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Resource not found.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server Error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "x-code-samples": [
          {
            "lang": "Shell",
            "source": "onezone-rest-cli listUserSpaces"
          }
        ]
      },
      "post": {
        "operationId": "create_user_space",
        "tags": [
          "User"
        ],
        "x-onedata-service": "onezone",
        "x-onedata-module": "space",
        "x-onedata-method": "space_logic:create",
        "summary": "Create new user space",
        "x-bash-codegen-description": "Creates a new space as current user. The user automaticaly becomes\nthe spaces' member.\n\nThis operation can be invoked on behalf of current user only.\n",
        "description": "Creates a new space as current user. The user automaticaly becomes\nthe spaces' member.\n\nThis operation can be invoked on behalf of current user only.\n\n***Example cURL requests***\n\n**Create new user space**\n```bash\ncurl -u admin:password  -H \"Content-type: application/json\" -X POST \\\n-d '{ \"name\" : \"test_space\" , \"token\" : \"JKAxNWxUgPCAxNDk2MTQwMTQ0v38YI0Z2\",  \"size\" : \"150\" }'\nhttps://$HOST:8443/api/v3/onezone/user/spaces\n```\n",
        "consumes": [
          "application/json"
        ],
        "responses": {
          "201": {
            "description": "ID of the created space in the form /user/spaces/{id} is returned in the response `Location` header.\n",
            "headers": {
              "Location": {
                "description": "ID of the created space.",
                "type": "string"
              }
            }
          },
          "400": {
            "description": "Invalid request.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "401": {
            "description": "Authentication error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "Authorization error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Resource not found.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server Error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "parameters": [
          {
            "name": "space",
            "in": "body",
            "description": "New space parameters.",
            "schema": {
              "$ref": "#/definitions/SpaceCreateRequest"
            },
            "required": true
          }
        ],
        "x-code-samples": [
          {
            "lang": "Shell",
            "source": "onezone-rest-cli createUserSpace name==test_space token==JKAxNWxUgPCAxNDk2MTQwMTQ0v38YI0Z2 size:=1024"
          }
        ]
      }
    },
    "/user/spaces/join": {
      "post": {
        "operationId": "join_space",
        "tags": [
          "User"
        ],
        "x-onedata-service": "onezone",
        "x-onedata-module": "space",
        "x-onedata-method": "space_logic:join",
        "summary": "Join space",
        "x-bash-codegen-description": "Join existing space using inivitation token.\n\nThis operation can be invoked on behalf of current user only.\n",
        "description": "Join existing space using inivitation token.\n\nThis operation can be invoked on behalf of current user only.\n\n***Example cURL requests***\n\n**Join existing space**\n```bash\ncurl -u admin:password  -H \"Content-type: application/json\" -X PUT \\\n-d '{ \"token\" : \"MDAxNmxvY2F00aW9uRVM2TVo5UlZ5cGFjZV9jcmLciFsOgyUkPI3f02le6PM01IX8go\" }'  \\\nhttps://$HOST:8443/api/v3/onezone/user/spaces/join\n```\n",
        "consumes": [
          "application/json"
        ],
        "responses": {
          "201": {
            "description": "ID of the joined space in the form /user/spaces/{id} is returned in the response `Location` header.\n",
            "headers": {
              "Location": {
                "description": "ID of the joined space.",
                "type": "string"
              }
            }
          },
          "400": {
            "description": "Invalid request.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "401": {
            "description": "Authentication error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "Authorization error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Resource not found.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server Error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "parameters": [
          {
            "name": "spaceinvitetoken",
            "in": "body",
            "description": "Token for joining a space.",
            "schema": {
              "$ref": "#/definitions/SpaceInviteToken"
            },
            "required": true
          }
        ],
        "x-code-samples": [
          {
            "lang": "Shell",
            "source": "onezone-rest-cli joinSpace token==ASDKLJHASD868&ASDJKJKHasjhdaASD89798asdaA"
          }
        ]
      }
    },
    "/user/spaces/{sid}": {
      "get": {
        "operationId": "get_user_space",
        "tags": [
          "User"
        ],
        "x-onedata-service": "onezone",
        "x-onedata-module": "space",
        "x-onedata-method": "space_logic:get_data",
        "summary": "Get space details",
        "x-bash-codegen-description": "Returns the details of a specific space.\n\nThis operation can be invoked on behalf of current user only.\n",
        "description": "Returns the details of a specific space.\n\nThis operation can be invoked on behalf of current user only.\n\n***Example cURL requests***\n\n**Get space details**\n```bash\ncurl -u username:password -X GET \\\nhttps://$HOST:8443/api/v3/onezone/user/spaces/Xnp1JVpWfL8_stHJgct76AFALjRsI0W3rNs1nfMwqnY\n\n{\n   \"providersSupports\" : {\n      \"hxfMCWmquqAIjG1GeG2eZY8qvs8iRIn09HzjCJilnSE\" : 5368709120\n   },\n   \"spaceId\" : \"Xnp1JVpWfL8_stHJgct76AFALjRsI0W3rNs1nfMwqnY\",\n   \"name\" : \"Test\"\n}\n```\n",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Returns the details of a specific space.",
            "schema": {
              "$ref": "#/definitions/Space"
            }
          },
          "400": {
            "description": "Invalid request.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "401": {
            "description": "Authentication error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "Authorization error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Resource not found.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server Error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "parameters": [
          {
            "name": "sid",
            "in": "path",
            "description": "Space ID.",
            "type": "string",
            "required": true
          }
        ],
        "x-code-samples": [
          {
            "lang": "Shell",
            "source": "onezone-rest-cli getUserSpace sid=oOVF-KrO1P6rpA0LFgNVI8NxuhxyQMUnrYzjAnKiyAY"
          }
        ]
      },
      "delete": {
        "operationId": "remove_user_space",
        "tags": [
          "User"
        ],
        "x-onedata-service": "onezone",
        "x-onedata-module": "space",
        "x-onedata-method": "space_logic:remove_user",
        "summary": "Leave space",
        "x-bash-codegen-description": "Removes the users ownership or membership in a specific space.\n\nThis operation can be invoked on behalf of current user only.\n",
        "description": "Removes the users ownership or membership in a specific space.\n\nThis operation can be invoked on behalf of current user only.\n\n***Example cURL requests***\n\n**Delete user space**\n```bash\ncurl -u username:password -X DELETE \\\nhttps://$HOST:8443/api/v3/onezone/user/spaces/oOVF-KrO1P6rpA0LFgNVI8NxuhxyQMUnrYzjAnKiyAY\n```\n",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "The space will be deleted."
          },
          "400": {
            "description": "Invalid request.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "401": {
            "description": "Authentication error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "Authorization error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Resource not found.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server Error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "parameters": [
          {
            "name": "sid",
            "in": "path",
            "description": "Space Id.",
            "type": "string",
            "required": true
          }
        ],
        "x-code-samples": [
          {
            "lang": "Shell",
            "source": "onezone-rest-cli removeUserSpace sid=oOVF-KrO1P6rpA0LFgNVI8NxuhxyQMUnrYzjAnKiyAY"
          }
        ]
      }
    },
    "/user/spaces/{sid}/alias": {
      "get": {
        "operationId": "get_user_space_alias",
        "tags": [
          "User"
        ],
        "x-onedata-service": "onezone",
        "x-onedata-module": "space",
        "x-onedata-method": "space_logic:get_data",
        "summary": "Get user space alias",
        "x-bash-codegen-description": "Returns the alias of a specific space.\n\nThis operation can be invoked on behalf of current user only.\n",
        "description": "Returns the alias of a specific space.\n\nThis operation can be invoked on behalf of current user only.\n\n***Example cURL requests***\n\n**Get space alias**\n```bash\ncurl -u username:password -X GET \\\nhttps://$HOST:8443/api/v3/onezone/user/spaces/oOVF-KrO1P6rpA0LFgNVI8NxuhxyQMUnrYzjAnKiyAY/alias\n\n{\n  \"alias\": \"Test space 2\"\n}\n```\n",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Returns the details of a specific space.",
            "schema": {
              "$ref": "#/definitions/SpaceAlias"
            }
          },
          "400": {
            "description": "Invalid request.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "401": {
            "description": "Authentication error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "Authorization error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Resource not found.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server Error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "parameters": [
          {
            "name": "sid",
            "in": "path",
            "description": "Space ID.",
            "type": "string",
            "required": true
          }
        ],
        "x-code-samples": [
          {
            "lang": "Shell",
            "source": "onezone-rest-cli getUserSpaceAlias sid=oOVF-KrO1P6rpA0LFgNVI8NxuhxyQMUnrYzjAnKiyAY"
          }
        ]
      },
      "put": {
        "operationId": "set_user_space_alias",
        "tags": [
          "User"
        ],
        "x-onedata-service": "onezone",
        "x-onedata-module": "space",
        "x-onedata-method": "space_logic:get_data",
        "summary": "Set user space alias",
        "x-bash-codegen-description": "Sets the alias of a specific space.\n\nThis operation can be invoked on behalf of current user only.\n",
        "description": "Sets the alias of a specific space.\n\nThis operation can be invoked on behalf of current user only.\n\n***Example cURL requests***\n\n**Set space alias**\n```bash\ncurl -u username:password -X POST -d '{\"alias\": \"Space alias\"}' \\\n-H 'Content-type: application/json' \\\nhttps://$HOST:8443/api/v3/onezone/user/spaces/oOVF-KrO1P6rpA0LFgNVI8NxuhxyQMUnrYzjAnKiyAY/alias\n```\n",
        "consumes": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Space alias has been successfully set.",
            "schema": {
              "$ref": "#/definitions/SpaceAlias"
            }
          },
          "400": {
            "description": "Invalid request.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "401": {
            "description": "Authentication error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "Authorization error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Resource not found.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server Error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "parameters": [
          {
            "name": "sid",
            "in": "path",
            "description": "Space ID.",
            "type": "string",
            "required": true
          },
          {
            "name": "data",
            "in": "body",
            "description": "New space alias.",
            "schema": {
              "$ref": "#/definitions/SpaceAlias"
            },
            "required": true
          }
        ],
        "x-code-samples": [
          {
            "lang": "Shell",
            "source": "onezone-rest-cli setUserSpaceAlias sid=oOVF-KrO1P6rpA0LFgNVI8NxuhxyQMUnrYzjAnKiyAY alias==\"Space alias\""
          }
        ]
      },
      "delete": {
        "operationId": "remove_user_space_alias",
        "tags": [
          "User"
        ],
        "x-onedata-service": "onezone",
        "x-onedata-module": "space",
        "x-onedata-method": "space_logic:remove_space_alias",
        "summary": "Remove space alias",
        "x-bash-codegen-description": "Removes the space alias.\n\nThis operation can be invoked on behalf of current user only.\n",
        "description": "Removes the space alias.\n\nThis operation can be invoked on behalf of current user only.\n\n***Example cURL requests***\n\n**Remove user space alias**\n```bash\ncurl -u username:password -X DELETE \\\nhttps://$HOST:8443/api/v3/onezone/user/spaces/oOVF-KrO1P6rpA0LFgNVI8NxuhxyQMUnrYzjAnKiyAY/alias\n```\n",
        "produces": [
          "application/json"
        ],
        "responses": {
          "202": {
            "description": "The space alias will be removed."
          },
          "400": {
            "description": "Invalid request.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "401": {
            "description": "Authentication error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "Authorization error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Resource not found.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server Error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "parameters": [
          {
            "name": "sid",
            "in": "path",
            "description": "Space Id.",
            "type": "string",
            "required": true
          }
        ],
        "x-code-samples": [
          {
            "lang": "Shell",
            "source": "onezone-rest-cli removeUserSpaceAlias sid=oOVF-KrO1P6rpA0LFgNVI8NxuhxyQMUnrYzjAnKiyAY"
          }
        ]
      }
    },
    "/user/effective_spaces": {
      "get": {
        "operationId": "list_effective_user_spaces",
        "tags": [
          "User"
        ],
        "x-onedata-service": "onezone",
        "x-onedata-module": "user",
        "x-onedata-method": "user_logic:get_effective_spaces",
        "summary": "List effective user spaces",
        "x-bash-codegen-description": "Returns the list of user's effective spaces.\n\nThis operation can be invoked on behalf of current user only.\n",
        "description": "Returns the list of user's effective spaces.\n\nThis operation can be invoked on behalf of current user only.\n\n***Example cURL requests***\n\n**Get user effective spaces**\n```bash\ncurl -u admin:password -X GET \\\nhttps://$HOST:8443/api/v3/onezone/user/effective_spaces\n\n{\n  \"spaces\": [\n    \"ALSDJLASJDLKJAS86asdkkaSDD\"\n  ]\n}\n```\n",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "The list of spaces.",
            "schema": {
              "$ref": "#/definitions/Spaces"
            }
          },
          "400": {
            "description": "Invalid request.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "401": {
            "description": "Authentication error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "Authorization error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Resource not found.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server Error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "x-code-samples": [
          {
            "lang": "Shell",
            "source": "onezone-rest-cli listEffectiveUserSpaces"
          }
        ]
      }
    },
    "/user/effective_spaces/{sid}": {
      "get": {
        "operationId": "get_effective_user_space",
        "tags": [
          "User"
        ],
        "x-onedata-service": "onezone",
        "x-onedata-module": "space",
        "x-onedata-method": "space_logic:get_effective_space",
        "summary": "Get effective space details",
        "x-bash-codegen-description": "Returns information about a specific effective space to which the user belongs.\n\nThis operation can be invoked on behalf of current user only.\n",
        "description": "Returns information about a specific effective space to which the user belongs.\n\nThis operation can be invoked on behalf of current user only.\n\n***Example cURL requests***\n\n**Get user effective space**\n```bash\ncurl -u username:password -X GET \\\nhttps://$HOST:8443/api/v3/onezone/user/effective_spaces/Xnp1JVpWfL8_stHJgct76AFALjRsI0W3rNs1nfMwqnY\n\n{\n   \"providersSupports\" : {\n      \"hxfMCWmquqAIjG1GeG2eZY8qvs8iRIn09HzjCJilnSE\" : 5368709120\n   },\n   \"spaceId\" : \"Xnp1JVpWfL8_stHJgct76AFALjRsI0W3rNs1nfMwqnY\",\n   \"name\" : \"Test\"\n}\n```\n",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Returns the information about a specific effective space.",
            "schema": {
              "$ref": "#/definitions/Space"
            }
          },
          "400": {
            "description": "Invalid request.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "401": {
            "description": "Authentication error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "Authorization error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Resource not found.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server Error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "parameters": [
          {
            "name": "sid",
            "in": "path",
            "description": "Space ID.",
            "type": "string",
            "required": true
          }
        ],
        "x-code-samples": [
          {
            "lang": "Shell",
            "source": "onezone-rest-cli getEffectiveUserSpace sid=oOVF-KrO1P6rpA0LFgNVI8NxuhxyQMUnrYzjAnKiyAY"
          }
        ]
      }
    },
    "/user/effective_providers": {
      "get": {
        "operationId": "list_effective_user_providers",
        "tags": [
          "User"
        ],
        "x-onedata-service": "onezone",
        "x-onedata-module": "user",
        "x-onedata-method": "user_logic:get_effective_providers",
        "summary": "List user effective providers",
        "x-bash-codegen-description": "Returns the list of user's effective providers.\n\nThis operation can be invoked on behalf of current user only.\n",
        "description": "Returns the list of user's effective providers.\n\nThis operation can be invoked on behalf of current user only.\n\n***Example cURL requests***\n\n**Get user effective providers**\n```bash\ncurl -u admin:password -X GET \\\nhttps://$HOST:8443/api/v3/onezone/user/effective_providers\n\n{\n  \"providers\": [\n    \"LKJASHGDFKLJHASKLJDH\"\n  ]\n}\n```\n",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "The list of providers.",
            "schema": {
              "$ref": "#/definitions/Providers"
            }
          },
          "400": {
            "description": "Invalid request.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "401": {
            "description": "Authentication error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "Authorization error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Resource not found.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server Error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "x-code-samples": [
          {
            "lang": "Shell",
            "source": "onezone-rest-cli listUserEffectiveProviders"
          }
        ]
      }
    },
    "/user/effective_providers/{pid}": {
      "get": {
        "operationId": "get_effective_user_provider",
        "tags": [
          "User"
        ],
        "x-onedata-service": "onezone",
        "x-onedata-module": "provider",
        "x-onedata-method": "provider_logic:get_effective_provider",
        "summary": "Get effective provider details",
        "x-bash-codegen-description": "Returns information about a specific effective provider for the user.\n\nThis operation can be invoked on behalf of current user only.\n",
        "description": "Returns information about a specific effective provider for the user.\n\nThis operation can be invoked on behalf of current user only.\n\n***Example cURL requests***\n\n**Get user effective provider**\n```bash\ncurl -u username:password -X GET \\\nhttps://$HOST:8443/api/v3/onezone/user/effective_providers/oOVF-KrO1P6rpA0LFgNVI8NxuhxyQMUnrYzjAnKiyAY\n\n{\n  \"providerId\":\"oOVF-KrO1P6rpA0LFgNVI8NxuhxyQMUnrYzjAnKiyAY\",\n  \"urls\": [\n    \"http://beta.onedata.org/provider1\",\n    \"http://beta.onedata.org/provider2\"\n  ],\n  \"redirectionPoint\": \"http://beta.onedata.org/provider2\",\n  \"latitude\": 50.0647,\n  \"longitude\": 19.9450\n}\n```\n",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Returns the information about a specific effective provider.",
            "schema": {
              "$ref": "#/definitions/ProviderDetails"
            }
          },
          "400": {
            "description": "Invalid request.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "401": {
            "description": "Authentication error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "Authorization error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Resource not found.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server Error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "parameters": [
          {
            "name": "pid",
            "in": "path",
            "description": "Provider ID.",
            "type": "string",
            "required": true
          }
        ],
        "x-code-samples": [
          {
            "lang": "Shell",
            "source": "onezone-rest-cli getEffectiveUserProvider pid=oOVF-KrO1P6rpA0LFgNVI8NxuhxyQMUnrYzjAnKiyAY"
          }
        ]
      }
    },
    "/user/handle_services": {
      "get": {
        "operationId": "list_user_handle_services",
        "tags": [
          "User"
        ],
        "x-onedata-service": "onezone",
        "x-onedata-module": "handle_service",
        "x-onedata-resource": "handle_service",
        "x-onedata-method": "handle_logic:get_user_handle_services",
        "x-onedata-permissions": [
          "list_handle_services"
        ],
        "summary": "List user handle services",
        "x-bash-codegen-description": "Returns the list of registered user handle services.\n",
        "description": "Returns the list of registered user handle services.\n\n***Example cURL requests***\n\n**Get user handle services**\n```bash\ncurl -u username:password -X GET https://$HOST:8443/api/v3/user/handle_services\n\n{\n  \"handle_services\": [\n    \"SADHLKJhlkASHDLAKSHDLKJHJjLH\",\n    \"LAKSHDLKJHJjLHSADHLKJhlkASHD\"\n  ]\n}\n```\n",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "The list of identifiers of registered handle services.",
            "schema": {
              "$ref": "#/definitions/HandleServices"
            }
          },
          "400": {
            "description": "Invalid request.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "401": {
            "description": "Authentication error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "Authorization error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Resource not found.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server Error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "x-code-samples": [
          {
            "lang": "Shell",
            "source": "onezone-rest-cli listUserHandleServices"
          }
        ]
      },
      "post": {
        "operationId": "add_user_handle_service",
        "tags": [
          "User"
        ],
        "x-onedata-service": "onezone",
        "x-onedata-module": "handle_service",
        "x-onedata-resource": "handle_service",
        "x-onedata-method": "handle_logic:add_handle_service",
        "x-onedata-permissions": [
          "add_handle_services"
        ],
        "summary": "Add user handle service",
        "x-bash-codegen-description": "Allows to register a new handle service.\n",
        "description": "Allows to register a new handle service.\n\n***Example cURL requests***\n\n**Add user handle services**\n```bash\ncurl -u username:password -X POST  -H \"Content-type: application/json\" \\\n-d '{ ... }' https://$HOST:8443/api/v3/user/handle_services\n```\n",
        "consumes": [
          "application/json"
        ],
        "responses": {
          "204": {
            "description": "Request successful.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The endpoint of the new handle service resource including the generated GUID.\n"
              }
            }
          },
          "400": {
            "description": "Invalid request.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "401": {
            "description": "Authentication error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "Authorization error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Resource not found.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server Error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "parameters": [
          {
            "name": "handleService",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/HandleService"
            }
          }
        ],
        "x-code-samples": [
          {
            "lang": "Shell",
            "source": "cat hndl_service.json | onezone-rest-cli addUserHandleService -"
          }
        ]
      }
    },
    "/user/handle_services/{hsid}": {
      "get": {
        "operationId": "get_user_handle_service",
        "tags": [
          "User"
        ],
        "x-onedata-service": "onezone",
        "x-onedata-module": "space",
        "x-onedata-method": "space_logic:get_data",
        "summary": "Get user handle service details",
        "x-bash-codegen-description": "Returns the details of a specific handle service.\n\nThis operation can be invoked on behalf of current user only.\n",
        "description": "Returns the details of a specific handle service.\n\nThis operation can be invoked on behalf of current user only.\n\n***Example cURL requests***\n\n**Get handle service details**\n```bash\ncurl -u username:password -X GET \\\nhttps://$HOST:8443/api/v3/onezone/user/handle_services/oOVF-KrO1P6rpA0LFgNVI8NxuhxyQMUnrYzjAnKiyAY\n\n{\n    \"name\": \"MyCommunity Handle service\",\n    \"proxyEndpoint\": \"https://localhost:17000/handle_proxy\",\n    \"serviceProperties\": {\n        \"allowTemplateOverride\": false,\n        \"doiEndpoint\": \"/doi\",\n        \"host\": \"https://mds.test.datacite.org\",\n        \"identifierTemplate\": \"{{space.name}}-{{space.guid}}\",\n        \"mediaEndpoint\": \"/media\",\n        \"metadataEndpoint\": \"/metadata\",\n        \"password\": \"pa$$word\",\n        \"prefix\": 10.5072,\n        \"type\": \"DOI\",\n        \"username\": \"alice\"\n    }\n}\n```\n",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Returns the details of a specific handle service.",
            "schema": {
              "$ref": "#/definitions/HandleService"
            }
          },
          "400": {
            "description": "Invalid request.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "401": {
            "description": "Authentication error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "Authorization error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Resource not found.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server Error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "parameters": [
          {
            "name": "hsid",
            "in": "path",
            "description": "Handle service ID.",
            "type": "string",
            "required": true
          }
        ],
        "x-code-samples": [
          {
            "lang": "Shell",
            "source": "onezone-rest-cli getUserHandleService hsid=oOVF-KrO1P6rpA0LFgNVI8NxuhxyQMUnrYzjAnKiyAY"
          }
        ]
      },
      "delete": {
        "operationId": "remove_user_handle_service",
        "tags": [
          "User"
        ],
        "x-onedata-service": "onezone",
        "x-onedata-module": "space",
        "x-onedata-method": "space_logic:remove_user",
        "summary": "Remove user handle service",
        "x-bash-codegen-description": "Removes the users ownership or membership in a specific handle service.\n\nThis operation can be invoked on behalf of current user only.\n",
        "description": "Removes the users ownership or membership in a specific handle service.\n\nThis operation can be invoked on behalf of current user only.\n\n***Example cURL requests***\n\n**Delete user handle service**\n```bash\ncurl -u username:password -X DELETE \\\nhttps://$HOST:8443/api/v3/onezone/user/handle_services/oOVF-KrO1P6rpA0LFgNVI8NxuhxyQMUnrYzjAnKiyAY\n```\n",
        "produces": [
          "application/json"
        ],
        "responses": {
          "202": {
            "description": "The handle service will be removed."
          },
          "400": {
            "description": "Invalid request.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "401": {
            "description": "Authentication error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "Authorization error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Resource not found.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server Error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "parameters": [
          {
            "name": "hsid",
            "in": "path",
            "description": "Handle service Id.",
            "type": "string",
            "required": true
          }
        ],
        "x-code-samples": [
          {
            "lang": "Shell",
            "source": "onezone-rest-cli removeUserHandleService hsid=oOVF-KrO1P6rpA0LFgNVI8NxuhxyQMUnrYzjAnKiyAY"
          }
        ]
      }
    },
    "/user/effective_handle_services": {
      "get": {
        "operationId": "list_user_effective_handle_services",
        "tags": [
          "User"
        ],
        "x-onedata-service": "onezone",
        "x-onedata-module": "user",
        "x-onedata-method": "user_logic:get_effective_handle_services",
        "summary": "List user effective handle services",
        "x-bash-codegen-description": "Returns the list of user's effective handle services.\n\nThis operation can be invoked on behalf of current user only.\n",
        "description": "Returns the list of user's effective handle services.\n\nThis operation can be invoked on behalf of current user only.\n\n***Example cURL requests***\n\n**Get user effective handle services**\n```bash\ncurl -u admin:password -X GET \\\nhttps://$HOST:8443/api/v3/onezone/user/effective_handle_services\n\n{\n  \"handle_services\": [\n    \"LKJASHGDFKLJHASKLJDH\"\n  ]\n}\n```\n",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "The list of handle services.",
            "schema": {
              "$ref": "#/definitions/HandleServices"
            }
          },
          "400": {
            "description": "Invalid request.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "401": {
            "description": "Authentication error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "Authorization error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Resource not found.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server Error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "x-code-samples": [
          {
            "lang": "Shell",
            "source": "onezone-rest-cli listUserEffectiveHandleServices"
          }
        ]
      }
    },
    "/user/effective_handle_services/{hsid}": {
      "get": {
        "operationId": "get_user_effective_handle_service",
        "tags": [
          "User"
        ],
        "x-onedata-service": "onezone",
        "x-onedata-module": "provider",
        "x-onedata-method": "provider_logic:get_effective_handle_service",
        "summary": "Get effective handle service details",
        "x-bash-codegen-description": "Returns information about a specific effective handle service for the user.\n\nThis operation can be invoked on behalf of current user only.\n",
        "description": "Returns information about a specific effective handle service for the user.\n\nThis operation can be invoked on behalf of current user only.\n\n***Example cURL requests***\n\n**Get user effective handle service**\n```bash\ncurl -u username:password -X GET \\\nhttps://$HOST:8443/api/v3/onezone/user/effective_handle_services/oOVF-KrO1P6rpA0LFgNVI8NxuhxyQMUnrYzjAnKiyAY\n\n{\n    \"name\": \"MyCommunity Handle service\",\n    \"proxyEndpoint\": \"https://localhost:17000/handle_proxy\",\n    \"serviceProperties\": {\n        \"allowTemplateOverride\": false,\n        \"doiEndpoint\": \"/doi\",\n        \"host\": \"https://mds.test.datacite.org\",\n        \"identifierTemplate\": \"{{space.name}}-{{space.guid}}\",\n        \"mediaEndpoint\": \"/media\",\n        \"metadataEndpoint\": \"/metadata\",\n        \"password\": \"pa$$word\",\n        \"prefix\": 10.5072,\n        \"type\": \"DOI\",\n        \"username\": \"alice\"\n    }\n}\n```\n",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Returns the information about a specific effective handle service.",
            "schema": {
              "$ref": "#/definitions/HandleService"
            }
          },
          "400": {
            "description": "Invalid request.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "401": {
            "description": "Authentication error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "Authorization error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Resource not found.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server Error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "parameters": [
          {
            "name": "hsid",
            "in": "path",
            "description": "Handle service ID.",
            "type": "string",
            "required": true
          }
        ],
        "x-code-samples": [
          {
            "lang": "Shell",
            "source": "onezone-rest-cli getUserEffectiveHandleService hsid=oOVF-KrO1P6rpA0LFgNVI8NxuhxyQMUnrYzjAnKiyAY"
          }
        ]
      }
    },
    "/user/handles": {
      "get": {
        "operationId": "list_user_handles",
        "tags": [
          "User"
        ],
        "x-onedata-service": "onezone",
        "x-onedata-module": "user",
        "x-onedata-method": "user_logic:get_handles",
        "summary": "List user handles",
        "x-bash-codegen-description": "Returns the list of users' handles.\n\nThis operation can be invoked on behalf of current user only.\n",
        "description": "Returns the list of users' handles.\n\nThis operation can be invoked on behalf of current user only.\n\n***Example cURL requests***\n\n**Get user handles**\n```bash\ncurl -u username:password -X GET \\\nhttps://$HOST:8443/api/v3/onezone/user/handles\n\n{\n  \"handles\": [\n    \"IkHB2CCoAFm5FCswhAJynbFU4fj26yiE1lhpK3p-0Y8\"\n  ]\n}\n```\n",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Returns the list of user handles.\n",
            "schema": {
              "$ref": "#/definitions/Handles"
            }
          },
          "400": {
            "description": "Invalid request.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "401": {
            "description": "Authentication error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "Authorization error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Resource not found.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server Error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "x-code-samples": [
          {
            "lang": "Shell",
            "source": "onezone-rest-cli listUserHandles"
          }
        ]
      },
      "post": {
        "operationId": "create_user_handle",
        "tags": [
          "User"
        ],
        "x-onedata-service": "onezone",
        "x-onedata-module": "handle",
        "x-onedata-method": "handle_logic:create",
        "summary": "Create new user handle",
        "x-bash-codegen-description": "Creates a new handle as current user.\n\nThis operation can be invoked on behalf of current user only.\n",
        "description": "Creates a new handle as current user.\n\nThis operation can be invoked on behalf of current user only.\n\n***Example cURL requests***\n\n**Create new user handle**\n```bash\ncurl -u admin:password  -H \"Content-type: application/json\" -X POST \\\n-d '{ \"handleServiceId\": \"LKJAHSDKJLHASD\", \"resourceType\": \"Share\", \"resourceId\": \"ASDasd7asdASDASD76\", \"metadata\": \"<?xml version=\\'1.0\\'?>...\" }'\nhttps://$HOST:8443/api/v3/onezone/user/handles\n```\n",
        "consumes": [
          "application/json"
        ],
        "responses": {
          "201": {
            "description": "ID of the created space in the form /user/spaces/{id} is returned in the response `Location` header.\n",
            "headers": {
              "Location": {
                "description": "ID of the created space.",
                "type": "string"
              }
            }
          },
          "400": {
            "description": "Invalid request.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "401": {
            "description": "Authentication error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "Authorization error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Resource not found.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server Error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "parameters": [
          {
            "name": "handle",
            "in": "body",
            "description": "New handle parameters.",
            "schema": {
              "$ref": "#/definitions/HandleRegistrationRequest"
            },
            "required": true
          }
        ],
        "x-code-samples": [
          {
            "lang": "Shell",
            "source": "cat handle.json | onezone-rest-cli createUserHandle -"
          }
        ]
      }
    },
    "/user/handles/{hid}": {
      "get": {
        "operationId": "get_user_handle",
        "tags": [
          "User"
        ],
        "x-onedata-service": "onezone",
        "x-onedata-module": "handle",
        "x-onedata-method": "handle_logic:get_data",
        "summary": "Get handle details",
        "x-bash-codegen-description": "Returns the details of a specific handle.\n\nThis operation can be invoked on behalf of current user only.\n",
        "description": "Returns the details of a specific handle.\n\nThis operation can be invoked on behalf of current user only.\n\n***Example cURL requests***\n\n**Get handle details**\n```bash\ncurl -u username:password -X GET \\\nhttps://$HOST:8443/api/v3/onezone/user/handles/oOVF-KrO1P6rpA0LFgNVI8NxuhxyQMUnrYzjAnKiyAY\n\n{\n  \"handleId\": \"oOVF-KrO1P6rpA0LFgNVI8NxuhxyQMUnrYzjAnKiyAY\",\n  \"handleServiceId\": \"ASKDGHKAJSHDukjhasdlkjalksjd76876asdkb\",\n  \"resourceType\": \"Share\",\n  \"resourceId\": \"dlkjalkADKDGHKAJSHDukjhassjd76876asdkb\",\n  \"metadata\": \"<?xml version=\\\"1.0\\\"?>\n      <!DOCTYPE rdf:RDF SYSTEM \\\\\"http://dublincore.org/2000/12/01-dcmes-xml-dtd.dtd\\\">\n      <rdf:RDF xmlns:rdf=\\\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\\\"\n               xmlns:dc=\\\"http://purl.org/dc/elements/1.1/\\\">\n        <rdf:Description rdf:about=\\\"http://example.com/resouces/1\\\">\n          <dc:title>Example Resource</dc:title>\n          <dc:creator>John Doe</dc:creator>\n          <dc:publisher>MIT</dc:publisher>\n          <dc:date>2000-06-06</dc:date>\n        </rdf:Description>\n      </rdf:RDF>\",\n  \"timestamp\": \"1997-07-16T19:20\"\n}\n```\n",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Returns the details of a specific handle.",
            "schema": {
              "$ref": "#/definitions/Handle"
            }
          },
          "400": {
            "description": "Invalid request.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "401": {
            "description": "Authentication error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "Authorization error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Resource not found.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server Error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "parameters": [
          {
            "name": "hid",
            "in": "path",
            "description": "Handle ID.",
            "type": "string",
            "required": true
          }
        ],
        "x-code-samples": [
          {
            "lang": "Shell",
            "source": "onezone-rest-cli getUserHandle hid=oOVF-KrO1P6rpA0LFgNVI8NxuhxyQMUnrYzjAnKiyAY"
          }
        ]
      },
      "delete": {
        "operationId": "remove_user_handle",
        "tags": [
          "User"
        ],
        "x-onedata-service": "onezone",
        "x-onedata-module": "space",
        "x-onedata-method": "space_logic:remove_user",
        "summary": "Remove handle",
        "x-bash-codegen-description": "Removes the users ownership or membership in a specific space.\n\nThis operation can be invoked on behalf of current user only.\n",
        "description": "Removes the users ownership or membership in a specific space.\n\nThis operation can be invoked on behalf of current user only.\n\n***Example cURL requests***\n\n**Delete user space**\n```bash\ncurl -u username:password -X DELETE \\\nhttps://$HOST:8443/api/v3/onezone/user/spaces/oOVF-KrO1P6rpA0LFgNVI8NxuhxyQMUnrYzjAnKiyAY\n```\n",
        "produces": [
          "application/json"
        ],
        "responses": {
          "202": {
            "description": "The handle will be deleted."
          },
          "400": {
            "description": "Invalid request.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "401": {
            "description": "Authentication error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "Authorization error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Resource not found.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server Error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "parameters": [
          {
            "name": "hid",
            "in": "path",
            "description": "Handle Id.",
            "type": "string",
            "required": true
          }
        ],
        "x-code-samples": [
          {
            "lang": "Shell",
            "source": "onezone-rest-cli removeUserHandle hid=oOVF-KrO1P6rpA0LFgNVI8NxuhxyQMUnrYzjAnKiyAY"
          }
        ]
      }
    },
    "/user/effective_handles": {
      "get": {
        "operationId": "list_user_effective_handles",
        "tags": [
          "User"
        ],
        "x-onedata-service": "onezone",
        "x-onedata-module": "user",
        "x-onedata-method": "user_logic:get_effective_spaces",
        "summary": "Get user effective handles",
        "x-bash-codegen-description": "Returns the list of user's effective handles.\n\nThis operation can be invoked on behalf of current user only.\n",
        "description": "Returns the list of user's effective handles.\n\nThis operation can be invoked on behalf of current user only.\n\n***Example cURL requests***\n\n**Get user effective handles**\n```bash\ncurl -u admin:password -X GET \\\nhttps://$HOST:8443/api/v3/onezone/user/effective_handles\n\n{\n  \"handles\": [\n    \"ASKJDKLJASBDJHGA75ASDK\"\n  ]\n}\n```\n",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "The list of handles.",
            "schema": {
              "$ref": "#/definitions/Handles"
            }
          },
          "400": {
            "description": "Invalid request.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "401": {
            "description": "Authentication error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "Authorization error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Resource not found.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server Error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "x-code-samples": [
          {
            "lang": "Shell",
            "source": "onezone-rest-cli listUserEffectiveHandles"
          }
        ]
      }
    },
    "/user/effective_handles/{hid}": {
      "get": {
        "operationId": "get_user_effective_handle",
        "tags": [
          "User"
        ],
        "x-onedata-service": "onezone",
        "x-onedata-module": "space",
        "x-onedata-method": "space_logic:get_effective_handle",
        "summary": "Get effective handle details",
        "x-bash-codegen-description": "Returns information about a specific effective handle to which the user belongs.\n\nThis operation can be invoked on behalf of current user only.\n",
        "description": "Returns information about a specific effective handle to which the user belongs.\n\nThis operation can be invoked on behalf of current user only.\n\n***Example cURL requests***\n\n**Get user effective space**\n```bash\ncurl -u username:password -X GET \\\nhttps://$HOST:8443/api/v3/onezone/user/effective_handles/oOVF-KrO1P6rpA0LFgNVI8NxuhxyQMUnrYzjAnKiyAY\n\n{\n  \"handleId\": \"oOVF-KrO1P6rpA0LFgNVI8NxuhxyQMUnrYzjAnKiyAY\",\n  \"handleServiceId\": \"ASKDGHKAJSHDukjhasdlkjalksjd76876asdkb\",\n  \"resourceType\": \"Share\",\n  \"resourceId\": \"dlkjalkADKDGHKAJSHDukjhassjd76876asdkb\",\n  \"metadata\": \"<?xml version=\\\"1.0\\\"?>\n      <!DOCTYPE rdf:RDF SYSTEM \\\\\"http://dublincore.org/2000/12/01-dcmes-xml-dtd.dtd\\\">\n      <rdf:RDF xmlns:rdf=\\\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\\\"\n               xmlns:dc=\\\"http://purl.org/dc/elements/1.1/\\\">\n        <rdf:Description rdf:about=\\\"http://example.com/resouces/1\\\">\n          <dc:title>Example Resource</dc:title>\n          <dc:creator>John Doe</dc:creator>\n          <dc:publisher>MIT</dc:publisher>\n          <dc:date>2000-06-06</dc:date>\n        </rdf:Description>\n      </rdf:RDF>\",\n  \"timestamp\": \"1997-07-16T19:20\"\n}\n```\n",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Returns the information about a specific effective handle.",
            "schema": {
              "$ref": "#/definitions/Handle"
            }
          },
          "400": {
            "description": "Invalid request.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "401": {
            "description": "Authentication error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "Authorization error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Resource not found.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server Error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "parameters": [
          {
            "name": "hid",
            "in": "path",
            "description": "Handle ID.",
            "type": "string",
            "required": true
          }
        ],
        "x-code-samples": [
          {
            "lang": "Shell",
            "source": "onezone-rest-cli getUserEffectiveHandle hid=oOVF-KrO1P6rpA0LFgNVI8NxuhxyQMUnrYzjAnKiyAY"
          }
        ]
      }
    },
    "/groups": {
      "get": {
        "operationId": "list_groups",
        "tags": [
          "Group"
        ],
        "x-onedata-service": "onezone",
        "x-onedata-module": "group",
        "x-onedata-resource": "groups",
        "x-onedata-method": "group_logic:create",
        "summary": "List all groups",
        "x-bash-codegen-description": "Returns the list of all groups in the system.\n\nRequires `list_groups` privilege.\n",
        "description": "Returns the list of all groups in the system.\n\nRequires `list_groups` privilege.\n\n***Example cURL requests***\n\n**List all groups in the system**\n```bash\n curl -u username:password -X GET https://$HOST:8443/api/v3/onezone/groups\n```\n",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "The list of group ID's created within the Onezone service.\n",
            "schema": {
              "$ref": "#/definitions/Groups"
            }
          },
          "400": {
            "description": "Invalid request.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "401": {
            "description": "Authentication error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "Authorization error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Resource not found.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server Error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "x-code-samples": [
          {
            "lang": "Shell",
            "source": "onezone-rest-cli listGroups"
          }
        ]
      },
      "post": {
        "operationId": "create_group",
        "tags": [
          "Group"
        ],
        "x-onedata-service": "onezone",
        "x-onedata-module": "group",
        "x-onedata-resource": "groups",
        "x-onedata-method": "group_logic:create",
        "summary": "Create new group",
        "x-bash-codegen-description": "Creates a new group.\n\nThis operation does require any specific privileges.\n",
        "description": "Creates a new group.\n\nThis operation does require any specific privileges.\n\n***Example cURL requests***\n\n**Create new group of type `role`**\n```bash\n curl -u username:password  -H \"Content-type: application/json\" \\\n -X POST -d '{ \"name\":\"new_group\" , \"type\":\"role\" }' \\\n https://$HOST:8443/api/v3/onezone/groups/\n```\n",
        "consumes": [
          "application/json"
        ],
        "responses": {
          "201": {
            "description": "ID of the group created in the form /groups/{id} is returned in the response `Location` header.\n",
            "headers": {
              "Location": {
                "description": "ID of the created group.",
                "type": "string"
              }
            }
          },
          "400": {
            "description": "Invalid request.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "401": {
            "description": "Authentication error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "Authorization error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Resource not found.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server Error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "description": "Group properties.",
            "schema": {
              "$ref": "#/definitions/GroupCreateRequest"
            },
            "required": true
          }
        ],
        "x-code-samples": [
          {
            "lang": "Shell",
            "source": "onezone-rest-cli createGroup name==Group2 type==role"
          }
        ]
      }
    },
    "/groups/{id}": {
      "get": {
        "operationId": "get_group",
        "tags": [
          "Group"
        ],
        "x-onedata-service": "onezone",
        "x-onedata-module": "group",
        "x-onedata-resource": "group",
        "x-onedata-method": "group_logic:get_data",
        "x-onedata-permissions": [
          "group_view_data",
          "list_groups"
        ],
        "summary": "Get group details",
        "x-bash-codegen-description": "Returns the information about a specific group.\n\nThis operation requires `group_view_data` or `list_groups` privilege.\n",
        "description": "Returns the information about a specific group.\n\nThis operation requires `group_view_data` or `list_groups` privilege.\n\n***Example cURL requests***\n\n**Get group details**\n```bash\ncurl -u username:password -X GET \\\nhttps://$HOST:8443/api/v3/onezone/groups/HwUpk8jrwxKOe45uzLFX2GVa8lKEasj4q253sptVqF8\n\n{\n  \"groupId\":\"HwUpk8jrwxKOe45uzLFX2GVa8lKEasj4q253sptVqF8\",\n  \"name\":\"new_group\",\n  \"type\":\"role\"\n}\n```\n",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Information about a group.",
            "schema": {
              "$ref": "#/definitions/Group"
            }
          },
          "400": {
            "description": "Invalid request.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "401": {
            "description": "Authentication error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "Authorization error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Resource not found.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server Error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Group ID.",
            "type": "string",
            "required": true
          }
        ],
        "x-code-samples": [
          {
            "lang": "Shell",
            "source": "onezone-rest-cli getGroup id=HwUpk8jrwxKOe45uzLFX2GVC8lKEasj4q253sptVqF8"
          }
        ]
      },
      "patch": {
        "operationId": "modify_group",
        "tags": [
          "Group"
        ],
        "x-onedata-service": "onezone",
        "x-onedata-module": "group",
        "x-onedata-resource": "group",
        "x-onedata-method": "group_logic:modify",
        "x-onedata-permissions": [
          "group_change_data"
        ],
        "summary": "Modify group details",
        "x-bash-codegen-description": "Updates the details about a group.\n\nThis operation requires `group_change_data` privilege.\n",
        "description": "Updates the details about a group.\n\nThis operation requires `group_change_data` privilege.\n\n***Example cURL requests***\n\n**Modify group name**\n```bash\ncurl -i -u admin:password  -H \"Content-type: application/json\" \\\n-X PATCH -d '{\"name\": \"new_group_name\"}' \\\nhttps://$HOST:8443/api/v3/onezone/groups/HwUpk8jrwxKOe45uzLFX2GVC8lKEqsj4q253sptVqF8\n```\n",
        "consumes": [
          "application/json"
        ],
        "responses": {
          "204": {
            "description": "Group details modified."
          },
          "400": {
            "description": "Invalid request.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "401": {
            "description": "Authentication error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "Authorization error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Resource not found.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server Error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Group ID.",
            "type": "string",
            "required": true
          },
          {
            "name": "data",
            "in": "body",
            "description": "Group parameters",
            "schema": {
              "$ref": "#/definitions/GroupUpdateRequest"
            },
            "required": true
          }
        ],
        "x-code-samples": [
          {
            "lang": "Shell",
            "source": "onezone-rest-cli modifyGroup id=HwUpk8jrwxKOe45uzLFX2GVC8lKEasj4q253sptVqF8 name==\"New Group Name\" type==team"
          }
        ]
      },
      "delete": {
        "operationId": "remove_group",
        "tags": [
          "Group"
        ],
        "x-onedata-service": "onezone",
        "x-onedata-module": "group",
        "x-onedata-resource": "group",
        "x-onedata-method": "group_logic:remove_group",
        "x-onedata-permissions": [
          "group_remove"
        ],
        "summary": "Remove group",
        "x-bash-codegen-description": "Removes a specific group.\n\nThis operation requires `group_remove` privilege.\n",
        "description": "Removes a specific group.\n\nThis operation requires `group_remove` privilege.\n\n***Example cURL requests***\n\n**Remove group**\n```bash\ncurl -u admin:password -X DELETE  \\\nhttps://$HOST:8443/api/v3/onezone/user/groups/LT88rteQ4KMSYXMWO0Oibiqn7X5nUD51NTsCqgDN8e4\n```\n",
        "responses": {
          "202": {
            "description": "The group will be removed."
          },
          "400": {
            "description": "Invalid request.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "401": {
            "description": "Authentication error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "Authorization error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Resource not found.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server Error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Group ID.",
            "type": "string",
            "required": true
          }
        ],
        "x-code-samples": [
          {
            "lang": "Shell",
            "source": "onezone-rest-cli removeGroup id=HwUpk8jrwxKOe45uzLFX2GVC8lKEasj4q253sptVqF8"
          }
        ]
      }
    },
    "/groups/{id}/privileges": {
      "get": {
        "operationId": "list_group_onezone_privileges",
        "tags": [
          "Group"
        ],
        "x-onedata-service": "onezone",
        "x-onedata-module": "privileges",
        "x-onedata-resource": "upriv",
        "x-onedata-method": "onezone_logic:get_group_privileges",
        "summary": "List group's Onezone privileges",
        "x-bash-codegen-description": "Returns the list of group privileges for Onezone.\n\nThis operation requires `view_privileges` privilege.\n",
        "description": "Returns the list of group privileges for Onezone.\n\nThis operation requires `view_privileges` privilege.\n\n***Example cURL requests***\n\n**Get groups privileges to Onezone service**\n```bash\ncurl -u admin:password -X GET \\\nhttps://$HOST:8443/api/v3/onezone/groups/T5x_HhFYOnILOCUf9OqgExw00RwaU2MXT5122oWk_sM/privileges\n\n{\n  \"privileges\": []\n}\n```\n",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "The list of group privileges in Onezone.",
            "schema": {
              "$ref": "#/definitions/OnezonePrivileges"
            }
          },
          "400": {
            "description": "Invalid request.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "401": {
            "description": "Authentication error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "Authorization error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Resource not found.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server Error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Group ID.",
            "type": "string",
            "required": true
          }
        ],
        "x-code-samples": [
          {
            "lang": "Shell",
            "source": "onezone-rest-cli listGroupOnezonePrivileges id=T5x_HhFYOnILOCUf9OqgExw00RwaU2MXT5122oWk_sM"
          }
        ]
      },
      "patch": {
        "operationId": "set_group_onezone_privileges",
        "tags": [
          "Group"
        ],
        "x-onedata-service": "onezone",
        "x-onedata-module": "onezone",
        "x-onedata-resource": "upriv",
        "x-onedata-method": "onezone_logic:set_privileges",
        "summary": "Set group's Onezone privileges",
        "x-bash-codegen-description": "Modifies privileges for a group {id} for Onezone.\n\nThis operation requires `set_privileges` privilege.\n",
        "description": "Modifies privileges for a group {id} for Onezone.\n\nThis operation requires `set_privileges` privilege.\n\n***Example cURL requests***\n\n**Set groups privileges to Onezone service**\n```bash\ncurl -H \"Content-type: application/json\"  -X PUT \\\n-d '{\"privileges\": [\"list_spaces\"]}' \\\nhttps://$HOST:8443/api/v3/onezone/groups/T5x_HhFYOnILOCUf9OqgExw00RwaU2MXT5122oWk_sM/privileges\n```\n",
        "responses": {
          "204": {
            "description": "The group privileges have been added."
          },
          "400": {
            "description": "Invalid request.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "401": {
            "description": "Authentication error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "Authorization error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Resource not found.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server Error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Group ID.",
            "type": "string",
            "required": true
          },
          {
            "name": "data",
            "in": "body",
            "description": "User Onezone privileges.",
            "schema": {
              "$ref": "#/definitions/OnezonePrivileges"
            }
          }
        ],
        "x-code-samples": [
          {
            "lang": "Shell",
            "source": "echo '{\"privileges\": [\"list_spaces\", \"add_spaces\"]}' | onezone-rest-cli setGroupOnezonePrivileges id=T5x_HhFYOnILOCUf9OqgExw00RwaU2MXT5122oWk_sM -"
          }
        ]
      },
      "delete": {
        "operationId": "remove_group_onezone_privileges",
        "tags": [
          "Group"
        ],
        "x-onedata-service": "onezone",
        "x-onedata-module": "onezone",
        "x-onedata-resource": "upriv",
        "x-onedata-method": "onezone_logic:remove_privileges",
        "summary": "Remove group's Onezone privileges",
        "x-bash-codegen-description": "Removes all privileges for a group {id} to Onezone.\n\nThis operation requires `set_privileges` privilege.\n",
        "description": "Removes all privileges for a group {id} to Onezone.\n\nThis operation requires `set_privileges` privilege.\n\n***Example cURL requests***\n\n**Remove all groups privileges to Onezone service**\n```bash\ncurl -i -u username:password -X DELETE \\\nhttps://$HOST:8443/api/v3/onezone/groups/T5x_HhFYOnILOCUf9OqgExw00RwaU2/privileges\n```\n",
        "responses": {
          "202": {
            "description": "The group privileges will be removed."
          },
          "400": {
            "description": "Invalid request.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "401": {
            "description": "Authentication error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "Authorization error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Resource not found.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server Error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Group ID.",
            "type": "string",
            "required": true
          }
        ],
        "x-code-samples": [
          {
            "lang": "Shell",
            "source": "onezone-rest-cli removeGroupOnezonePrivileges id=T5x_HhFYOnILOCUf9OqgExw00RwaU2MXT5122oWk_sM"
          }
        ]
      }
    },
    "/groups/{id}/effective_privileges": {
      "get": {
        "operationId": "list_effective_group_privileges",
        "tags": [
          "Group"
        ],
        "x-onedata-service": "onezone",
        "x-onedata-module": "privileges",
        "x-onedata-resource": "upriv",
        "x-onedata-method": "onezone_logic:get_group_effective_privileges",
        "summary": "List group's effective privileges",
        "x-bash-codegen-description": "Returns the list of group effective privileges for Onezone.\n\nThis operation requires `view_privileges` privilege.\n",
        "description": "Returns the list of group effective privileges for Onezone.\n\nThis operation requires `view_privileges` privilege.\n\n***Example cURL requests***\n\n**Get groups effective privileges to Onezone service**\n```bash\ncurl -u admin:password -X GET \\\nhttps://$HOST:8443/api/v3/onezone/groups/T5x_HhFYOnILOCUf9OqgExw00RwaU2MXT5122oWk_sM/effective_privileges\n\n{\n  \"privileges\": []\n}\n```\n",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "The list of group effective privileges in Onezone.",
            "schema": {
              "$ref": "#/definitions/OnezonePrivileges"
            }
          },
          "400": {
            "description": "Invalid request.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "401": {
            "description": "Authentication error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "Authorization error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Resource not found.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server Error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Group ID.",
            "type": "string",
            "required": true
          }
        ],
        "x-code-samples": [
          {
            "lang": "Shell",
            "source": "onezone-rest-cli listGroupOnezoneEffectivePrivileges id=T5x_HhFYOnILOCUf9OqgExw00RwaU2MXT5122oWk_sM"
          }
        ]
      }
    },
    "/groups/{id}/users": {
      "get": {
        "operationId": "list_group_users",
        "tags": [
          "Group"
        ],
        "x-onedata-service": "onezone",
        "x-onedata-module": "group",
        "x-onedata-resource": "users",
        "x-onedata-method": "group_logic:get_users",
        "x-onedata-permissions": [
          "group_view_data"
        ],
        "summary": "List group users",
        "x-bash-codegen-description": "Returns the list of users belonging to a specific group.\n\nThis operation requires `group_view_data` privilege.\nFor administrator who do not need to be members of this group\n`oz_groups_list_users` privilege is required.\n",
        "description": "Returns the list of users belonging to a specific group.\n\nThis operation requires `group_view_data` privilege.\nFor administrator who do not need to be members of this group\n`oz_groups_list_users` privilege is required.\n\n***Example cURL requests***\n\n**Get group users**\n```bash\ncurl -u username:password -X GET \\\nhttps://$HOST:8443/api/v3/onezone/groups/HwUpk8jrwxKOe45uzLFX2GVC8lKEasj4q253sptVqF8/users\n\n{\n  \"users\": [\n    \"lb0NvUXIVguzjQ3dBOXAyd1c61fWKB5dKJDQ6YvB7a0\"\n  ]\n}\n```\n",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "The list of all user ID's that belong to a specific group",
            "schema": {
              "$ref": "#/definitions/Users"
            }
          },
          "400": {
            "description": "Invalid request.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "401": {
            "description": "Authentication error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "Authorization error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Resource not found.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server Error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Group ID.",
            "type": "string",
            "required": true
          }
        ],
        "x-code-samples": [
          {
            "lang": "Shell",
            "source": "onezone-rest-cli listGroupUsers id=HwUpk8jrwxKOe45uzLFX2GVC8lKEasj4q253sptVqF8"
          }
        ]
      }
    },
    "/groups/{id}/users/token": {
      "post": {
        "operationId": "create_user_group_invite_token",
        "tags": [
          "Group"
        ],
        "x-onedata-service": "onezone",
        "x-onedata-module": "group",
        "x-onedata-resource": "uinvite",
        "x-onedata-method": "token_logic:create",
        "x-onedata-permissions": [
          "group_invite_user"
        ],
        "summary": "Create user invite token for group",
        "x-bash-codegen-description": "Creates a token allowing new user to join the group.\n\nThis operation requires `group_invite_user` privilege.\n",
        "description": "Creates a token allowing new user to join the group.\n\nThis operation requires `group_invite_user` privilege.\n\n***Example cURL requests***\n\n**Generate user group invite token**\n```bash\ncurl -u username:password -X POST \\\nhttps://$HOST:8443/api/v3/onezone/groups/HwUpk8jrwxKOe45uzLFX2GVC8lKEasj4q253sptVqF8/users/token\n\n{\n  \"token\": \"MDAxNmxvY2F00aW9uIHJlZlFTUbnZpdGVthHo8xmai4RqqBO2MZM00mrYGgo\"\n}\n```\n",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "The token for joining a specific group.",
            "schema": {
              "$ref": "#/definitions/GroupInviteToken"
            }
          },
          "400": {
            "description": "Invalid request.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "401": {
            "description": "Authentication error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "Authorization error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Resource not found.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server Error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Group ID.",
            "type": "string",
            "required": true
          },
          {
            "name": "data",
            "in": "body",
            "description": "Group invite token attributes.",
            "schema": {
              "$ref": "#/definitions/GroupInviteTokenRequest"
            }
          }
        ],
        "x-code-samples": [
          {
            "lang": "Shell",
            "source": "onezone-rest-cli createUserGroupInviteToken id=HwUpk8jrwxKOe45uzLFX2GVC8lKEasj4q253sptVqF8"
          }
        ]
      }
    },
    "/groups/{id}/users/{uid}": {
      "get": {
        "operationId": "get_group_user",
        "tags": [
          "Group"
        ],
        "x-onedata-service": "onezone",
        "x-onedata-module": "group",
        "x-onedata-resource": "user",
        "x-onedata-method": "group_logic:get_user",
        "x-onedata-permissions": [
          "group_view_data"
        ],
        "summary": "Get group user details",
        "x-bash-codegen-description": "Returns the public information about a user {uid} in group {id}.\n\nThis operation requires `group_view_data` privilege.\nFor administrator who do not need to be members of this group\n`oz_groups_list_users` privilege is required.\n",
        "description": "Returns the public information about a user {uid} in group {id}.\n\nThis operation requires `group_view_data` privilege.\nFor administrator who do not need to be members of this group\n`oz_groups_list_users` privilege is required.\n\n***Example cURL requests***\n\n**Generate user group invite token**\n```bash\ncurl -u admin:password -X GET \\\nhttps://$HOST:8443/api/v3/onezone/groups/HwUpk8jrwxKOe45uzLFX2GVC8lKEasj4q253sptVqF8/users/lb0NvUXIVguzjQ3dBOXAyd1c61fWKB5dKJDQ6YvB7a0\n\n{\n  \"userId\": \"lb0NvUXIVguzjQ3dBOXAyd1c61fWKB5dKJDQ6YvB7a0\",\n  \"login\": \"admin\",\n  \"name\": \"admin\",\n  \"connectedAccounts\": [],\n  \"alias\": \"\",\n  \"emailList\": []\n}\n```\n",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Information about a group user.",
            "schema": {
              "$ref": "#/definitions/User"
            }
          },
          "400": {
            "description": "Invalid request.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "401": {
            "description": "Authentication error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "Authorization error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Resource not found.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server Error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Group ID.",
            "type": "string",
            "required": true
          },
          {
            "name": "uid",
            "in": "path",
            "description": "User ID.",
            "type": "string",
            "required": true
          }
        ],
        "x-code-samples": [
          {
            "lang": "Shell",
            "source": "onezone-rest-cli getGroupUser id=HwUpk8jrwxKOe45uzLFX2GVC8lKEasj4q253sptVqF8 uid=lb0NvUXIVguzjQ3dBOXAyd1c61fWKB5dKJDQ6YvB7a0"
          }
        ]
      },
      "put": {
        "operationId": "add_group_user",
        "tags": [
          "Group"
        ],
        "x-onedata-service": "onezone",
        "x-onedata-module": "group",
        "x-onedata-resource": "user",
        "x-onedata-method": "group_logic:add_user",
        "x-onedata-permissions": [
          "oz_groups_add_members"
        ],
        "summary": "Add user to group",
        "x-bash-codegen-description": "Returns the public information about a user {uid} in group {id}.\n\nOptionally, user privileges in this gropu can be specified\nin the request body.\n\nThis operation requires `oz_groups_add_members` privilege.\n",
        "description": "Returns the public information about a user {uid} in group {id}.\n\nOptionally, user privileges in this gropu can be specified\nin the request body.\n\nThis operation requires `oz_groups_add_members` privilege.\n\n***Example cURL requests***\n\n**Generate user group invite token**\n```bash\ncurl -u admin:password -X GET \\\nhttps://$HOST:8443/api/v3/onezone/groups/HwUpk8jrwxKOe45uzLFX2GVC8lKEasj4q253sptVqF8/users/lb0NvUXIVguzjQ3dBOXAyd1c61fWKB5dKJDQ6YvB7a0\n```\n",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Information about a group user.",
            "schema": {
              "$ref": "#/definitions/User"
            }
          },
          "400": {
            "description": "Invalid request.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "401": {
            "description": "Authentication error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "Authorization error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Resource not found.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server Error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Group ID.",
            "type": "string",
            "required": true
          },
          {
            "name": "uid",
            "in": "path",
            "description": "User ID.",
            "type": "string",
            "required": true
          },
          {
            "name": "privileges",
            "in": "body",
            "required": false,
            "description": "The list of privileges for the",
            "schema": {
              "$ref": "#/definitions/GroupPrivileges"
            }
          }
        ],
        "x-code-samples": [
          {
            "lang": "Shell",
            "source": "onezone-rest-cli addGroupUser id=HwUpk8jrwxKOe45uzLFX2GVC8lKEasj4q253sptVqF8 uid=lb0NvUXIVguzjQ3dBOXAyd1c61fWKB5dKJDQ6YvB7a0"
          }
        ]
      },
      "delete": {
        "operationId": "remove_group_user",
        "tags": [
          "Group"
        ],
        "x-onedata-service": "onezone",
        "x-onedata-module": "group",
        "x-onedata-resource": "user",
        "x-onedata-method": "group_logic:remove_user",
        "x-onedata-permissions": [
          "group_remove_user"
        ],
        "summary": "Remove user from group",
        "x-bash-codegen-description": "Removes the user {uid} from a group {id} (the user will no longer have\naccess to spaces accessible to the group).\n\nThis operation requires `group_remove_user` privilege.\nFor administrator who do not need to be members of this group\n`oz_groups_remove_members` privilege is required.\n",
        "description": "Removes the user {uid} from a group {id} (the user will no longer have access\nto spaces accessible to the group).\n\nThis operation requires `group_remove_user` privilege.\nFor administrator who do not need to be members of this group\n`oz_groups_remove_members` privilege is required.\n\n***Example cURL requests***\n\n**Remove user from group**\n```bash\ncurl -u username:password -X DELETE \\\nhttps://$HOST:8443/api/v3/onezone/groups/Qi4QT2oalnfQu0SzTK1HgXxKuUrlRppb68rr_UhwC50/users/ivMnRLb2WYNApEmP-j3SF0NsqBgdHG7iel89FHY802w\n```\n",
        "consumes": [
          "application/json"
        ],
        "responses": {
          "202": {
            "description": "The user will be removed from the group."
          },
          "400": {
            "description": "Invalid request.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "401": {
            "description": "Authentication error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "Authorization error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Resource not found.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server Error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Group ID.",
            "type": "string",
            "required": true
          },
          {
            "name": "uid",
            "in": "path",
            "description": "User ID.",
            "type": "string",
            "required": true
          }
        ],
        "x-code-samples": [
          {
            "lang": "Shell",
            "source": "onezone-rest-cli removeGroupUser id=HwUpk8jrwxKOe45uzLFX2GVC8lKEasj4q253sptVqF8 uid=lb0NvUXIVguzjQ3dBOXAyd1c61fWKB5dKJDQ6YvB7a0"
          }
        ]
      }
    },
    "/groups/{id}/users/{uid}/privileges": {
      "get": {
        "operationId": "list_user_group_privileges",
        "tags": [
          "Group"
        ],
        "x-onedata-service": "onezone",
        "x-onedata-module": "group",
        "x-onedata-resource": "upriv",
        "x-onedata-method": "group_logic:get_privileges",
        "x-onedata-permissions": [
          "group_view_data"
        ],
        "summary": "List user's group privileges",
        "x-bash-codegen-description": "Returns the list of user privileges in a specific group.\n\nThis operation requires `group_view_data` privilege.\n",
        "description": "Returns the list of user privileges in a specific group.\n\nThis operation requires `group_view_data` privilege.\n\n***Example cURL requests***\n\n**Get group users**\n```bash\ncurl -u username:password -X GET\nhttps://$HOST:8443/api/v3/onezone/groups/HwUpk8jrwxKOe45uzLFX2GVC8lKEasj4q253sptVqF8/users/lb0NvUXIVguzjQ3dBOXAyd1c61fWKB5dKJDQ6YvB7a0/privileges\n\n{\n  \"privileges\": [\n    \"group_change_data\",\n    \"group_create_space\",\n    \"group_create_space_token\",\n    \"group_invite_group\"]\n}\n```\n",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "The list of user privileges in a group.",
            "schema": {
              "$ref": "#/definitions/GroupPrivileges"
            }
          },
          "400": {
            "description": "Invalid request.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "401": {
            "description": "Authentication error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "Authorization error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Resource not found.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server Error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Group ID.",
            "type": "string",
            "required": true
          },
          {
            "name": "uid",
            "in": "path",
            "description": "User ID.",
            "type": "string",
            "required": true
          }
        ],
        "x-code-samples": [
          {
            "lang": "Shell",
            "source": "onezone-rest-cli listUserGroupPrivileges id=HwUpk8jrwxKOe45uzLFX2GVC8lKEasj4q253sptVqF8 uid=lb0NvUXIVguzjQ3dBOXAyd1c61fWKB5dKJDQ6YvB7a0"
          }
        ]
      },
      "patch": {
        "operationId": "set_user_group_privileges",
        "tags": [
          "Group"
        ],
        "x-onedata-service": "onezone",
        "x-onedata-module": "group",
        "x-onedata-resource": "upriv",
        "x-onedata-method": "group_logic:set_privileges",
        "x-onedata-permissions": [
          "group_set_privileges"
        ],
        "summary": "Set user's group privileges",
        "x-bash-codegen-description": "Sets privileges for a user {uid} in a group {id}.\n\nThis operation requires `group_set_privileges` privilege.\n",
        "description": "Sets privileges for a user {uid} in a group {id}.\n\nThis operation requires `group_set_privileges` privilege.\n",
        "responses": {
          "204": {
            "description": "The user privileges have been added."
          },
          "400": {
            "description": "Invalid request.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "401": {
            "description": "Authentication error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "Authorization error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Resource not found.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server Error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Group ID.",
            "type": "string",
            "required": true
          },
          {
            "name": "uid",
            "in": "path",
            "description": "User ID.",
            "type": "string",
            "required": true
          },
          {
            "name": "data",
            "in": "body",
            "description": "User privileges in the group.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/GroupPrivileges"
            }
          }
        ],
        "x-code-samples": [
          {
            "lang": "Shell",
            "source": "echo '{\"privileges\": [\"group_view_data\"]}' | onezone-rest-cli setUserGroupPrivileges id=HwUpk8jrwxKOe45uzLFX2GVC8lKEasj4q253sptVqF8 uid=lb0NvUXIVguzjQ3dBOXAyd1c61fWKB5dKJDQ6YvB7a0 -"
          }
        ]
      }
    },
    "/groups/{id}/effective_users": {
      "get": {
        "operationId": "list_effective_group_users",
        "tags": [
          "Group"
        ],
        "x-onedata-service": "onezone",
        "x-onedata-module": "group",
        "x-onedata-resource": "effective_users",
        "x-onedata-method": "group_logic:get_effective_users",
        "x-onedata-permissions": [
          "group_view_data"
        ],
        "summary": "List effective group users",
        "x-bash-codegen-description": "Returns the list of effective group users, which includes both who directly\nbelong to the group, as well as users who belong to the group indirectly\nthrough its parent groups.\n\nThis operation requires `group_view_data` privilege.\n",
        "description": "Returns the list of effective group users, which includes both who directly\nbelong to the group, as well as users who belong to the group indirectly\nthrough its parent groups.\n\nThis operation requires `group_view_data` privilege.\n\n***Example cURL requests***\n\n**Get effective group users**\n```bash\ncurl -u username:password -X GET \\\nhttps://$HOST:8443/api/v3/onezone/groups/HwUpk8jrwxKOe45uzLFX2GVC8lKEasj4q253sptVqF8/effective_users\n\n\n{\n  \"users\":  [\n    \"lb0NvUXIVguzjQ3dBOXAyd1c11fWKB5dKJDQ6YvB7a0\"\n  ]\n}\n```\n",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "The list of effective user ID's that belong to a specific group",
            "schema": {
              "$ref": "#/definitions/Users"
            }
          },
          "400": {
            "description": "Invalid request.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "401": {
            "description": "Authentication error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "Authorization error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Resource not found.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server Error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Group ID.",
            "type": "string",
            "required": true
          }
        ],
        "x-code-samples": [
          {
            "lang": "Shell",
            "source": "onezone-rest-cli listEffectiveGroupUsers id=HwUpk8jrwxKOe45uzLFX2GVC1lKEasj4q253sptVqF8"
          }
        ]
      }
    },
    "/groups/{id}/effective_users/{uid}": {
      "get": {
        "operationId": "get_effective_group_user",
        "tags": [
          "Group"
        ],
        "x-onedata-service": "onezone",
        "x-onedata-module": "group",
        "x-onedata-resource": "effective_user",
        "x-onedata-method": "group_logic:get_effective_user",
        "x-onedata-permissions": [
          "group_view_data"
        ],
        "summary": "Get effective group user details",
        "x-bash-codegen-description": "Returns information about a specific effective group user.\n\nThis operation requires `group_view_data` privilege.\n",
        "description": "Returns information about a specific effective group user.\n\nThis operation requires `group_view_data` privilege.\n\n***Example cURL requests***\n\n**Get group user details**\n```bash\ncurl -u username:password -X GET \\\nhttps://$HOST:8443/api/v3/onezone/groups/HwUpk8jrwxKOe45uzLFX2GVC1lKEasj4q253sptVqF8/effective_users/lb0NvUXIVguzjQ3dBOXAyd1c61fWKB5dKJDQ6YvB7a0\n\n{\n  \"userId\": \"lb0NvUXIVguzjQ3dBOXAyd1c61fWKB5dKJDQ6YvB7a0\",\n  \"login\": \"admin\",\n  \"name\": \"admin\",\n  \"connectedAccounts\": [],\n  \"alias\": \"\",\n  \"emailList\": []\n}\n```\n",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Returns the information about a group user.",
            "schema": {
              "$ref": "#/definitions/User"
            }
          },
          "400": {
            "description": "Invalid request.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "401": {
            "description": "Authentication error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "Authorization error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Resource not found.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server Error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Group ID.",
            "type": "string",
            "required": true
          },
          {
            "name": "uid",
            "in": "path",
            "description": "User ID.",
            "type": "string",
            "required": true
          }
        ],
        "x-code-samples": [
          {
            "lang": "Shell",
            "source": "onezone-rest-cli getEffectiveGroupUser id=HwUpk8jrwxKOe45uzLFX2GVC1lKEasj4q253sptVqF8 uid=lb0NvUXIVguzjQ3dBOXAyd1c61fWKB5dKJDQ6YvB7a0"
          }
        ]
      }
    },
    "/groups/{id}/effective_users/{uid}/privileges": {
      "get": {
        "operationId": "list_groups_user_privileges",
        "tags": [
          "Group"
        ],
        "x-onedata-service": "onezone",
        "x-onedata-module": "group",
        "x-onedata-resource": "eupriv",
        "x-onedata-method": "group_logic:get_effective_privileges",
        "x-onedata-permissions": [
          "group_view_data"
        ],
        "summary": "List user group privileges",
        "x-bash-codegen-description": "Returns the effective user privileges in a group.\n\nThis operation requires `group_view_data` privilege.\n",
        "description": "Returns the effective user privileges in a group.\n\nThis operation requires `group_view_data` privilege.\n\n***Example cURL requests***\n\n**Get group user details**\n```bash\ncurl -i -u username:password -X GET \\\nhttps://$HOST:8443/api/v3/onezone/groups/HwUpk8jrwxKOe45uzLFX2GVC8lKEasj4q253sptVqF8/effective_users/lb0NvUXIVguzjQ3dBOXAyd1c61fWKB5dKJDQ6YvB7a0/privileges\n\n{\n  \"privileges\": [\n    \"group_change_data\",\n    \"group_create_space\",\n    \"group_create_space_token\",\n    \"group_invite_group\",\n    \"group_invite_user\",\n    \"group_join_group\",\n    \"group_join_space\",\n    \"group_leave_space\",\n    \"group_remove\",\n    \"group_remove_group\",\n    \"group_remove_user\",\n    \"group_set_privileges\",\n    \"group_view_data\"\n  ]\n}\n```\n",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Returns the information about a group user.",
            "schema": {
              "$ref": "#/definitions/GroupPrivileges"
            }
          },
          "400": {
            "description": "Invalid request.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "401": {
            "description": "Authentication error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "Authorization error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Resource not found.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server Error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Group ID.",
            "type": "string",
            "required": true
          },
          {
            "name": "uid",
            "in": "path",
            "description": "User ID.",
            "type": "string",
            "required": true
          }
        ],
        "x-code-samples": [
          {
            "lang": "Shell",
            "source": "onezone-rest-cli listGroupsUserPrivileges id=HwUpk8jrwxKOe45uzLFX2GVC8lKEasj4q253sptVqF8 uid=lb0NvUXIVguzjQ3dBOXAyd1c61fWKB5dKJDQ6YvB7a0"
          }
        ]
      }
    },
    "/groups/{id}/parents": {
      "get": {
        "operationId": "list_parent_groups",
        "tags": [
          "Group"
        ],
        "x-onedata-service": "onezone",
        "x-onedata-module": "group",
        "x-onedata-resource": "parent_groups",
        "x-onedata-method": "group_logic:get_parent_groups",
        "x-onedata-permissions": [
          "group_view_data"
        ],
        "summary": "List parent groups",
        "x-bash-codegen-description": "Returns the parent groups of a specific group.\n\nThis operation requires `group_view_data` privilege.\n",
        "description": "Returns the parent groups of a specific group.\n\nThis operation requires `group_view_data` privilege.\n\n***Example cURL requests***\n\n**Get parent groups**\n```bash\ncurl -u admin:password -X GET \\\nhttps://$HOST:8443/api/v3/onezone/groups/HwUpk8jrwxKOe45uzLFX2GVC8lKEasj4q253sptVqF8/parents\n\n{\n  \"groups\": []\n}\n```\n",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "The list of parent group ID's.",
            "schema": {
              "$ref": "#/definitions/Groups"
            }
          },
          "400": {
            "description": "Invalid request.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "401": {
            "description": "Authentication error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "Authorization error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Resource not found.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server Error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Group ID.",
            "type": "string",
            "required": true
          }
        ],
        "x-code-samples": [
          {
            "lang": "Shell",
            "source": "onezone-rest-cli listParentGroups id=T5x_HhFYOnILOCUf9OqgExw00RwaU2MXT5122oWk_sM"
          }
        ]
      }
    },
    "/groups/{id}/parents/join": {
      "post": {
        "operationId": "join_parent_group",
        "tags": [
          "Group"
        ],
        "x-onedata-service": "onezone",
        "x-onedata-module": "group",
        "x-onedata-resource": "njoin",
        "x-onedata-method": "group_logic:join_parent_group",
        "x-onedata-permissions": [
          "group_join_group"
        ],
        "summary": "Join parent group",
        "x-bash-codegen-description": "Adds given group as a subgroup of a specific group based on provided token.\n\nThe parent group to which the group will be added is identified from the\ntoken (the token is issued in the context of a group).\n\nThis operation requires `group_join_group` privilege.\n",
        "description": "Adds given group as a subgroup of a specific group based on provided token.\n\nThe parent group to which the group will be added is identified from the token\n(the token is issued in the context of a group).\n\nThis operation requires `group_join_group` privilege.\n\n***Example cURL requests***\n\n**Join parent group**\n\n```bash\ncurl  -u admin:password -H \"Content-type: application/json\" -X POST \\\n-d  '{\"token\":\"MDAxNmxvY2F00aW9uIHJlZ2lzdHJ5CjAwM2JpZGVudGlmaW\"}'  \\\nhttps://$HOST:8443/api/v3/onezone/groups/T5x_HhFYOnILOCUf9OqgExw00RwaU2MXT5122o/parents/join\n```\n",
        "responses": {
          "201": {
            "description": "ID of the joined group in the form /groups/{id} is returned in the response `Location` header.\n",
            "headers": {
              "Location": {
                "description": "ID of the joined group.",
                "type": "string"
              }
            }
          },
          "400": {
            "description": "Invalid request.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "401": {
            "description": "Authentication error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "Authorization error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Resource not found.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server Error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Group ID.",
            "type": "string",
            "required": true
          },
          {
            "name": "data",
            "in": "body",
            "description": "Group join token.",
            "schema": {
              "$ref": "#/definitions/GroupInviteToken"
            }
          }
        ],
        "x-code-samples": [
          {
            "lang": "Shell",
            "source": "onezone-rest-cli joinParentGroup id=HwUpk8jrwxKOe45uzLFX2GVC1lKEasj4q253sptVqF8 token==AKLSHJHDKLJASHDJKHASKDHASDKASDGAHSGDHJASDHJJAHGDSJKHG"
          }
        ]
      }
    },
    "/groups/{id}/parents/{pid}": {
      "get": {
        "operationId": "get_parent_group",
        "tags": [
          "Group"
        ],
        "x-onedata-service": "onezone",
        "x-onedata-module": "group",
        "x-onedata-resource": "parent_group",
        "x-onedata-method": "group_logic:get_parent_group",
        "x-onedata-permissions": [
          "group_view_data"
        ],
        "summary": "Get parent group details",
        "x-bash-codegen-description": "Returns details about a specific parent group.\n\nThis operation requires `group_view_data` privilege.\n",
        "description": "Returns details about a specific parent group.\n\nThis operation requires `group_view_data` privilege.\n\n***Example cURL requests***\n\n**Get parent group details**\n```bash\ncurl -u admin:password -X GET \\\nhttps://$HOST:8443/api/v3/onezone/groups/T5x_HhFYOnILOCUf9OqgExw00RwaU2MXT5122oWk_sM/parents/9OqgExw00RwaU2MXT51\n\n{\n  \"name\": \"Group1\",\n  \"type\": \"organization\"\n}\n```\n",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Information about a specific parent group.",
            "schema": {
              "$ref": "#/definitions/Group"
            }
          },
          "400": {
            "description": "Invalid request.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "401": {
            "description": "Authentication error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "Authorization error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Resource not found.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server Error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Group ID.",
            "type": "string",
            "required": true
          },
          {
            "name": "pid",
            "in": "path",
            "description": "Parent group ID.",
            "type": "string",
            "required": true
          }
        ],
        "x-code-samples": [
          {
            "lang": "Shell",
            "source": "onezone-rest-cli getParentGroup id=T5x_HhFYOnILOCUf9OqgExw00RwaU2MXT5122oWk_sM pid=9OqgExw00RwaU2MXT51"
          }
        ]
      }
    },
    "/groups/{id}/effective_parents": {
      "get": {
        "operationId": "list_effective_parent_groups",
        "tags": [
          "Group"
        ],
        "x-onedata-service": "onezone",
        "x-onedata-module": "group",
        "x-onedata-resource": "parent_groups",
        "x-onedata-method": "group_logic:get_parent_groups",
        "x-onedata-permissions": [
          "group_view_data"
        ],
        "summary": "List effective parent groups",
        "x-bash-codegen-description": "Returns the effective parent groups of a specific group.\n\nThis operation requires `group_view_data` privilege.\n",
        "description": "Returns the effective parent groups of a specific group.\n\nThis operation requires `group_view_data` privilege.\n\n***Example cURL requests***\n\n**Get effective parent groups**\n```bash\ncurl -u admin:password -X GET \\\nhttps://$HOST:8443/api/v3/onezone/groups/HwUpk8jrwxKOe45uzLFX2GVC8lKEasj4q253sptVqF8/effective_parents\n\n{\n  \"groups\": []\n}\n```\n",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "The list of effective parent group ID's.",
            "schema": {
              "$ref": "#/definitions/Groups"
            }
          },
          "400": {
            "description": "Invalid request.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "401": {
            "description": "Authentication error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "Authorization error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Resource not found.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server Error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Group ID.",
            "type": "string",
            "required": true
          }
        ],
        "x-code-samples": [
          {
            "lang": "Shell",
            "source": "onezone-rest-cli listEffectiveParentGroups id=T5x_HhFYOnILOCUf9OqgExw00RwaU2MXT5122oWk_sM"
          }
        ]
      }
    },
    "/groups/{id}/effective_parents/{pid}": {
      "get": {
        "operationId": "get_effective_parent_group",
        "tags": [
          "Group"
        ],
        "x-onedata-service": "onezone",
        "x-onedata-module": "group",
        "x-onedata-resource": "parent_group",
        "x-onedata-method": "group_logic:get_parent_effective_group",
        "x-onedata-permissions": [
          "group_view_data"
        ],
        "summary": "Get effective parent group details",
        "x-bash-codegen-description": "Returns details about a specific effective parent group.\n\nThis operation requires `group_view_data` privilege.\n",
        "description": "Returns details about a specific effective parent group.\n\nThis operation requires `group_view_data` privilege.\n\n***Example cURL requests***\n\n**Get effective parent group details**\n```bash\ncurl -u admin:password -X GET \\\nhttps://$HOST:8443/api/v3/onezone/groups/T5x_HhFYOnILOCUf9OqgExw00RwaU2MXT5122oWk_sM/effective_parents/9OqgExw00RwaU2MXT51\n\n{\n  \"name\": \"Group1\",\n  \"type\": \"organization\"\n}\n```\n",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Information about a specific effective parent group.",
            "schema": {
              "$ref": "#/definitions/Group"
            }
          },
          "400": {
            "description": "Invalid request.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "401": {
            "description": "Authentication error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "Authorization error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Resource not found.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server Error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Group ID.",
            "type": "string",
            "required": true
          },
          {
            "name": "pid",
            "in": "path",
            "description": "Effective parent group ID.",
            "type": "string",
            "required": true
          }
        ],
        "x-code-samples": [
          {
            "lang": "Shell",
            "source": "onezone-rest-cli getEffectiveParentGroup id=T5x_HhFYOnILOCUf9OqgExw00RwaU2MXT5122oWk_sM pid=9OqgExw00RwaU2MXT51"
          }
        ]
      }
    },
    "/groups/{id}/children": {
      "get": {
        "operationId": "list_child_groups",
        "tags": [
          "Group"
        ],
        "x-onedata-service": "onezone",
        "x-onedata-module": "group",
        "x-onedata-resource": "children_groups",
        "x-onedata-method": "group_logic:get_children_groups",
        "x-onedata-permissions": [
          "group_view_data"
        ],
        "summary": "Get subgroups",
        "x-bash-codegen-description": "Returns the list of subgroups of a specific group.\n\nThis operation requires `group_view_data` privilege.\nFor administrator who do not need to be members of this group\n`oz_groups_list_groups` privilege is required.\n",
        "description": "Returns the list of subgroups of a specific group.\n\nThis operation requires `group_view_data` privilege.\nFor administrator who do not need to be members of this group\n`oz_groups_list_groups` privilege is required.\n\n***Example cURL requests***\n\n**Get subgroups**\n```bash\ncurl -u admin:password -X GET \\\nhttps://$HOST:8443/api/v3/onezone/groups/HwUpk8jrwxKOe45uzLFX2GVC8lKEasj4q253sptVqF8/children\n\n{\n  \"nested_groups\": []\n}\n```\n",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "The list of subgroup ID's.",
            "schema": {
              "$ref": "#/definitions/ChildGroups"
            }
          },
          "400": {
            "description": "Invalid request.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "401": {
            "description": "Authentication error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "Authorization error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Resource not found.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server Error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Group ID.",
            "type": "string",
            "required": true
          }
        ],
        "x-code-samples": [
          {
            "lang": "Shell",
            "source": "onezone-rest-cli listChildGroups id=HwUpk8jrwxKOe45uzLFX2GVC1lKEasj4q253sptVqF8"
          }
        ]
      }
    },
    "/groups/{id}/children/token": {
      "post": {
        "operationId": "create_child_group_token",
        "tags": [
          "Group"
        ],
        "x-onedata-service": "onezone",
        "x-onedata-module": "group",
        "x-onedata-resource": "ninvite",
        "x-onedata-method": "token_logic:create",
        "x-onedata-permissions": [
          "group_invite_group"
        ],
        "summary": "Create child group invitation token",
        "x-bash-codegen-description": "Creates a token that can be used to add a group as subgroup of group with {id}.\n\nThis operation requires `group_invite_group` privilege.\n",
        "description": "Creates a token that can be used to add a group as subgroup of group with {id}.\n\nThis operation requires `group_invite_group` privilege.\n\n***Example cURL requests***\n\n**Create invitation token for subgroup**\n```bash\ncurl -u username:password -X GET \\\nhttps://$HOST:8443/api/v3/onezone/groups/HwUpk8jrwxKOe45uzLFX2GVC8lKEasj4q253sptVq\n\n{\n  \"token\": \"MDAxNmxvY2F00aW9uIHJlZ2lzdHJ5CjAwM2JpZGVudGlmaWVyIDdrenY00SXM5dEFGYVRNQXFlMUlPSXVGMFBoSkFKWHFieWRUc2l5TUUxX2sKMDAyZGNpZCB00b2tlblR5cGUgPSBncm91cF9pbnZpdGVfZ3JvdXBfdG9rZW4KMDAyZnNpZ25hdHVyZSCJAtwScxZNktP9EIS00vlM5ZB7QsXhjtRtjKWZfwEfs6wo\"\n}\n```\n",
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "The token for joining a specific group.",
            "schema": {
              "$ref": "#/definitions/GroupInviteToken"
            }
          },
          "400": {
            "description": "Invalid request.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "401": {
            "description": "Authentication error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "Authorization error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Resource not found.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server Error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Group ID.",
            "type": "string",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "description": "Group token request.",
            "schema": {
              "$ref": "#/definitions/GroupInviteTokenRequest"
            },
            "required": false
          }
        ],
        "x-code-samples": [
          {
            "lang": "Shell",
            "source": "onezone-rest-cli createChildGroupToken id=HwUpk8jrwxKOe45uzLFX2GVC1lKEasj4q253sptVqF8"
          }
        ]
      }
    },
    "/groups/{id}/children/{cid}": {
      "get": {
        "operationId": "get_child_group",
        "tags": [
          "Group"
        ],
        "x-onedata-service": "onezone",
        "x-onedata-module": "group",
        "x-onedata-resource": "child_group",
        "x-onedata-method": "group_logic:get_child_group",
        "x-onedata-permissions": [
          "group_view_data"
        ],
        "summary": "Get subgroup details",
        "x-bash-codegen-description": "Returns information about a specific child group.\n\nThis operation requires `group_view_data` privilege.\nFor administrator who do not need to be members of this group\n`oz_groups_list_groups` privilege is required.\n",
        "description": "Returns information about a specific child group.\n\nThis operation requires `group_view_data` privilege.\nFor administrator who do not need to be members of this group\n`oz_groups_list_groups` privilege is required.\n\n***Example cURL requests***\n\n**Get child group details**\n```bash\ncurl -u username:password -X GET \\\nhttps://$HOST:8443/api/v3/onezone/groups/HwUpk8jrwxKOe45uzLFX2GVC8lKEasj4q253sptVqF8/children/T5x_HhFYOnILOCUf9OqgExw00RwaU2MXT5122oWk_sM\n\n{\n  \"groupId\": \"T5x_HhFYOnILOCUf9OqgExw00RwaU2MXT5122oWk_sM\",\n  \"name\": \"new_group1\",\n  \"type\": \"role\"\n}\n```\n",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Information about a specific child group.",
            "schema": {
              "$ref": "#/definitions/Group"
            }
          },
          "400": {
            "description": "Invalid request.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "401": {
            "description": "Authentication error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "Authorization error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Resource not found.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server Error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Group ID.",
            "type": "string",
            "required": true
          },
          {
            "name": "cid",
            "in": "path",
            "description": "Child group ID.",
            "type": "string",
            "required": true
          }
        ],
        "x-code-samples": [
          {
            "lang": "Shell",
            "source": "onezone-rest-cli getChildGroup id=HwUpk8jrwxKOe45uzLFX2GVC1lKEasj4q253sptVqF8 cid=AKLSKDHASDKASDGAHSGDHJASDHJJAHGDSJKHG"
          }
        ]
      },
      "put": {
        "operationId": "add_child_group",
        "tags": [
          "Group"
        ],
        "x-onedata-service": "onezone",
        "x-onedata-module": "group",
        "x-onedata-resource": "child_group",
        "x-onedata-method": "group_logic:add_child_group",
        "x-onedata-permissions": [
          "group_change_data"
        ],
        "summary": "Add child group",
        "x-bash-codegen-description": "Adds group {cid} as child group of {id}.\n\nFor administrator who do not need to be members of this group\n`oz_groups_add_members` privilege is required.\n",
        "description": "Adds group {cid} as child group of {id}.\n\nFor administrator who do not need to be members of this group\n`oz_groups_add_members` privilege is required.\n\n***Example cURL requests***\n\n**Add child group**\n```bash\ncurl -u username:password -X PUT \\\nhttps://$HOST:8443/api/v3/onezone/groups/HwUpk8jrwxKOe45uzLFX2GVC8lKEasj4q253sptVqF8/children/T5x_HhFYOnILOCUf9OqgExw00RwaU2MXT5122oWk_sM\n```\n",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Information about a specific child group.",
            "schema": {
              "$ref": "#/definitions/GroupPrivileges"
            }
          },
          "400": {
            "description": "Invalid request.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "401": {
            "description": "Authentication error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "Authorization error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Resource not found.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server Error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Group ID.",
            "type": "string",
            "required": true
          },
          {
            "name": "cid",
            "in": "path",
            "description": "Child group ID.",
            "type": "string",
            "required": true
          }
        ],
        "x-code-samples": [
          {
            "lang": "Shell",
            "source": "onezone-rest-cli addChildGroup id=HwUpk8jrwxKOe45uzLFX2GVC1lKEasj4q253sptVqF8 cid=AKLSKDHASDKASDGAHSGDHJASDHJJAHGDSJKHG"
          }
        ]
      },
      "delete": {
        "operationId": "remove_child_group",
        "tags": [
          "Group"
        ],
        "x-onedata-service": "onezone",
        "x-onedata-module": "group",
        "x-onedata-resource": "child_group",
        "x-onedata-method": "group_logic:remove_child_group",
        "x-onedata-permissions": [
          "group_remove_group"
        ],
        "summary": "Remove subgroup",
        "x-bash-codegen-description": "Removes a specific child with {cid} from parent group with {id}.\n\nThis operation requires `group_remove_group` privilege.\nFor administrator who do not need to be members of this group\n`oz_groups_remove_members` privilege is required.\n",
        "description": "Removes a specific child with {cid} from parent group with {id}.\n\nThis operation requires `group_remove_group` privilege.\nFor administrator who do not need to be members of this group\n`oz_groups_remove_members` privilege is required.\n\n***Example cURL requests***\n\n**Remove child group**\n```bash\ncurl -u username:password -X DELETE \\\nhttps://$HOST:8443/api/v3/onezone/groups/KoiO-QKqmYZRjPVdtR30FrdIEA1JF9f3TznAr9BDjA4/children/Qi4QT2oalnfQu0SzTK1HgXxKuUrlRppb68rr_UhwC50\n```\n",
        "responses": {
          "202": {
            "description": "A subgroup will be removed."
          },
          "400": {
            "description": "Invalid request.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "401": {
            "description": "Authentication error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "Authorization error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Resource not found.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server Error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Group ID.",
            "type": "string",
            "required": true
          },
          {
            "name": "cid",
            "in": "path",
            "description": "Child group ID.",
            "type": "string",
            "required": true
          }
        ],
        "x-code-samples": [
          {
            "lang": "Shell",
            "source": "onezone-rest-cli removeChildGroup id=HwUpk8jrwxKOe45uzLFX2GVC1lKEasj4q253sptVqF8 cid=AKLSKDHASDKASDGAHSGDHJASDHJJAHGDSJKHG"
          }
        ]
      }
    },
    "/groups/{id}/children/{cid}/privileges": {
      "get": {
        "operationId": "list_child_group_privileges",
        "tags": [
          "Group"
        ],
        "x-onedata-service": "onezone",
        "x-onedata-module": "group",
        "x-onedata-resource": "npriv",
        "x-onedata-method": "group_logic:get_child_group_privileges",
        "x-onedata-permissions": [
          "group_view_data"
        ],
        "summary": "List child group privileges",
        "x-bash-codegen-description": "Returns the list of child group privileges in a specific group.\n\nThis operation requires `group_view_data` privilege.\n",
        "description": "Returns the list of child group privileges in a specific group.\n\nThis operation requires `group_view_data` privilege.\n\n***Example cURL requests***\n\n**Get child group privileges in a group**\n```bash\ncurl -u username:password -X GET \\\nhttps://$HOST:8443/api/v3/onezone/groups/HwUpk8jrwxKOe45uzLFX2GVC8lKEasj4q253sptVqF8/children/FX2GVC8lKEasj4q253sptVqF8HwUpk8jrwxKOe45uzL/privileges\n\n{\n  \"privileges\": [\n    \"group_view_data\"\n  ]\n}\n```\n",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "The list of child group privileges in a group.",
            "schema": {
              "$ref": "#/definitions/GroupPrivileges"
            }
          },
          "400": {
            "description": "Invalid request.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "401": {
            "description": "Authentication error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "Authorization error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Resource not found.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server Error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Group ID.",
            "type": "string",
            "required": true
          },
          {
            "name": "cid",
            "in": "path",
            "description": "Child group ID.",
            "type": "string",
            "required": true
          }
        ],
        "x-code-samples": [
          {
            "lang": "Shell",
            "source": "onezone-rest-cli listChildGroupPrivileges id=HwUpk8jrwxKOe45uzLFX2GVC8lKEasj4q253sptVqF8 cid=FX2GVC8lKEasj4q253sptVqF8HwUpk8jrwxKOe45uzL"
          }
        ]
      },
      "patch": {
        "operationId": "set_child_group_privileges",
        "tags": [
          "Group"
        ],
        "x-onedata-service": "onezone",
        "x-onedata-module": "group",
        "x-onedata-resource": "npriv",
        "x-onedata-method": "group_logic:set_child_group_privileges",
        "x-onedata-permissions": [
          "group_set_privileges"
        ],
        "summary": "Set subgroup privileges",
        "x-bash-codegen-description": "Sets privileges for a specific subgroup in a group.\n\nThis operation requires `group_set_privileges` privilege.\n",
        "description": "Sets privileges for a specific subgroup in a group.\n\nThis operation requires `group_set_privileges` privilege.\n\n***Example cURL requests***\n\n**Get subgroup privileges in a group**\n\n```bash\ncurl -u username:password  -H \"Content-type: application/json\" -X PUT \\\n-d '{\"privileges\": [\"group_view_data\"]}' \\\nhttps://$HOST:8443/api/v3/onezone/groups/HwUpk8jrwxKOe45uzLFX2GVC8lKEasj4q253sptVqF8/children/T5x_HhFYOnILOCUf9OqgExw00RwaU2MXT5122oWk_sM/privileges\n```\n",
        "responses": {
          "204": {
            "description": "The group privileges have been added."
          },
          "400": {
            "description": "Invalid request.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "401": {
            "description": "Authentication error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "Authorization error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Resource not found.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server Error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Group ID.",
            "type": "string",
            "required": true
          },
          {
            "name": "cid",
            "in": "path",
            "description": "Child group ID.",
            "type": "string",
            "required": true
          },
          {
            "name": "data",
            "in": "body",
            "description": "Child group privileges.",
            "schema": {
              "$ref": "#/definitions/GroupPrivileges"
            },
            "required": true
          }
        ],
        "x-code-samples": [
          {
            "lang": "Shell",
            "source": "echo '{\"privileges\": [\"group_change_data\", \"group_view_data\"]}' | onezone-rest-cli setChildGroupPrivileges id=HwUpk8jrwxKOe45uzLFX2GVC1lKEasj4q253sptVqF8 cid=AKLSKDHASDKASDGAHSGDHJASDHJJAHGDSJKHG -"
          }
        ]
      }
    },
    "/groups/{id}/effective_children": {
      "get": {
        "operationId": "get_effective_children_groups",
        "tags": [
          "Group"
        ],
        "x-onedata-service": "onezone",
        "x-onedata-module": "group",
        "x-onedata-resource": "children_groups",
        "x-onedata-method": "group_logic:get_effective_children_groups",
        "x-onedata-permissions": [
          "group_view_data"
        ],
        "summary": "Get effective child groups",
        "x-bash-codegen-description": "Returns the list of effective child groups of a specific group.\n\nThis operation requires `group_view_data` privilege.\n",
        "description": "Returns the list of effective child groups of a specific group.\n\nThis operation requires `group_view_data` privilege.\n\n***Example cURL requests***\n\n**Get effective child groups**\n```bash\ncurl -u admin:password -X GET \\\nhttps://$HOST:8443/api/v3/onezone/groups/HwUpk8jrwxKOe45uzLFX2GVC8lKEasj4q253sptVqF8/effective_children\n\n{\n  \"nested_groups\": []\n}\n```\n",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "The list of subgroup ID's.",
            "schema": {
              "$ref": "#/definitions/ChildGroups"
            }
          },
          "400": {
            "description": "Invalid request.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "401": {
            "description": "Authentication error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "Authorization error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Resource not found.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server Error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Group ID.",
            "type": "string",
            "required": true
          }
        ],
        "x-code-samples": [
          {
            "lang": "Shell",
            "source": "onezone-rest-cli getEffectiveChildGroups id=HwUpk8jrwxKOe45uzLFX2GVC1lKEasj4q253sptVqF8"
          }
        ]
      }
    },
    "/groups/{id}/effective_children/{cid}": {
      "get": {
        "operationId": "get_effective_child_group",
        "tags": [
          "Group"
        ],
        "x-onedata-service": "onezone",
        "x-onedata-module": "group",
        "x-onedata-resource": "child_group",
        "x-onedata-method": "group_logic:get_effective_child_group",
        "x-onedata-permissions": [
          "group_view_data"
        ],
        "summary": "Get effective child group details",
        "x-bash-codegen-description": "Returns information about a specific effective child group.\n\nThis operation requires `group_view_data` privilege.\n",
        "description": "Returns information about a specific effective child group.\n\nThis operation requires `group_view_data` privilege.\n\n***Example cURL requests***\n\n**Get effective child details**\n```bash\ncurl -u username:password -X GET \\\nhttps://$HOST:8443/api/v3/onezone/groups/HwUpk8jrwxKOe45uzLFX2GVC8lKEasj4q253sptVqF8/effective_children/T5x_HhFYOnILOCUf9OqgExw00RwaU2MXT5122oWk_sM\n\n{\n  \"groupId\": \"T5x_HhFYOnILOCUf9OqgExw00RwaU2MXT5122oWk_sM\",\n  \"name\": \"new_group1\",\n  \"type\": \"role\"\n}\n```\n",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Information about a specific effective child group.",
            "schema": {
              "$ref": "#/definitions/Group"
            }
          },
          "400": {
            "description": "Invalid request.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "401": {
            "description": "Authentication error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "Authorization error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Resource not found.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server Error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Group ID.",
            "type": "string",
            "required": true
          },
          {
            "name": "cid",
            "in": "path",
            "description": "Effective child group ID.",
            "type": "string",
            "required": true
          }
        ],
        "x-code-samples": [
          {
            "lang": "Shell",
            "source": "onezone-rest-cli getEffectiveChildGroup id=HwUpk8jrwxKOe45uzLFX2GVC1lKEasj4q253sptVqF8 cid=AKLSKDHASDKASDGAHSGDHJASDHJJAHGDSJKHG"
          }
        ]
      }
    },
    "/groups/{id}/effective_children/{cid}/privileges": {
      "get": {
        "operationId": "list_effective_child_group_privileges",
        "tags": [
          "Group"
        ],
        "x-onedata-service": "onezone",
        "x-onedata-module": "group",
        "x-onedata-resource": "npriv",
        "x-onedata-method": "group_logic:get_child_group_privileges",
        "x-onedata-permissions": [
          "group_view_data"
        ],
        "summary": "List effective child group privileges",
        "x-bash-codegen-description": "Returns the list of effective child group privileges in a specific group.\n\nThis operation requires `group_view_data` privilege.\n",
        "description": "Returns the list of effective child group privileges in a specific group.\n\nThis operation requires `group_view_data` privilege.\n\n***Example cURL requests***\n\n**Get child group privileges in a group**\n```bash\ncurl -u username:password -X GET \\\nhttps://$HOST:8443/api/v3/onezone/groups/HwUpk8jrwxKOe45uzLFX2GVC8lKEasj4q253sptVqF8/effective_children/T5x_HhFYOnILOCUf9OqgExw00RwaU2MXT5122oWk_sM/privileges\n\n{\n  \"privileges\": [\n    \"group_view_data\"\n  ]\n}\n```\n",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "The list of effective child group privileges in a group.",
            "schema": {
              "$ref": "#/definitions/GroupPrivileges"
            }
          },
          "400": {
            "description": "Invalid request.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "401": {
            "description": "Authentication error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "Authorization error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Resource not found.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server Error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Group ID.",
            "type": "string",
            "required": true
          },
          {
            "name": "cid",
            "in": "path",
            "description": "Effective child group ID.",
            "type": "string",
            "required": true
          }
        ],
        "x-code-samples": [
          {
            "lang": "Shell",
            "source": "onezone-rest-cli listEffectiveChildGroupPrivileges id=HwUpk8jrwxKOe45uzLFX2GVC1lKEasj4q253sptVqF8 cid=AKLSKDHASDKASDGAHSGDHJASDHJJAHGDSJKHG"
          }
        ]
      },
      "patch": {
        "operationId": "set_effective_child_group_privileges",
        "tags": [
          "Group"
        ],
        "x-onedata-service": "onezone",
        "x-onedata-module": "group",
        "x-onedata-resource": "npriv",
        "x-onedata-method": "group_logic:set_child_group_privileges",
        "x-onedata-permissions": [
          "group_set_privileges"
        ],
        "summary": "Set effective child group privileges",
        "x-bash-codegen-description": "Sets new child group privileges within a group.\n\nThis operation requires `group_set_privileges` privilege.\n",
        "description": "Sets new child group privileges within a group.\n\nThis operation requires `group_set_privileges` privilege.\n\n***Example cURL requests***\n\n**Set child group privileges in a group**\n```bash\ncurl -u username:password -X PATCH -H 'Content-type: application/json' \\\n-d '{\"privileges\": \"group_view_data\"}'\nhttps://$HOST:8443/api/v3/onezone/groups/HwUpk8jrwxKOe45uzLFX2GVC8lKEasj4q253sptVqF8/effective_children/T5x_HhFYOnILOCUf9OqgExw00RwaU2MXT5122oWk_sM/privileges\n```\n",
        "produces": [
          "application/json"
        ],
        "responses": {
          "204": {
            "description": "The child group privileges have been updated successfully."
          },
          "400": {
            "description": "Invalid request.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "401": {
            "description": "Authentication error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "Authorization error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Resource not found.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server Error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Group ID.",
            "type": "string",
            "required": true
          },
          {
            "name": "cid",
            "in": "path",
            "description": "Effective child group ID.",
            "type": "string",
            "required": true
          }
        ],
        "x-code-samples": [
          {
            "lang": "Shell",
            "source": "echo '{\"privileges\": \"group_view_data\"}' | onezone-rest-cli setEffectiveChildGroupPrivileges id=HwUpk8jrwxKOe45uzLFX2GVC1lKEasj4q253sptVqF8 cid=AKLSKDHASDKASDGAHSGDHJASDHJJAHGDSJKHG -"
          }
        ]
      }
    },
    "/groups/{id}/spaces": {
      "get": {
        "operationId": "list_group_spaces",
        "tags": [
          "Group"
        ],
        "x-onedata-service": "onezone",
        "x-onedata-module": "group",
        "x-onedata-resource": "spaces",
        "x-onedata-method": "group_logic:get_spaces",
        "x-onedata-permissions": [
          "group_view_data"
        ],
        "summary": "List group's spaces",
        "x-bash-codegen-description": "Returns the list of spaces to which the group has access.\n\nThis operation requires `group_view_data` privilege.\n",
        "description": "Returns the list of spaces to which the group has access.\n\nThis operation requires `group_view_data` privilege.\n\n***Example cURL requests***\n\n**Get group spaces**\n```bash\ncurl -u username:password -X GET \\\nhttps://$HOST:8443/api/v3/onezone/groups/HwUpk8jrwxKOe45uzLFX2GVC8lKEasj4q253sptVqF8/spaces\n\n{\n  \"spaces\": [\n    \"GVC8lKEasj4q253sptVqF8HwUpk8jrwxKOe45uzLFX2\"\n  ]\n}\n```\n",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "The list of space ID's for which the group has access.",
            "schema": {
              "$ref": "#/definitions/Spaces"
            }
          },
          "400": {
            "description": "Invalid request.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "401": {
            "description": "Authentication error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "Authorization error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Resource not found.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server Error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Group ID.",
            "type": "string",
            "required": true
          }
        ],
        "x-code-samples": [
          {
            "lang": "Shell",
            "source": "onezone-rest-cli listGroupSpaces id=HwUpk8jrwxKOe45uzLFX2GVC8lKEasj4q253sptVqF8"
          }
        ]
      },
      "post": {
        "operationId": "create_space_for_group",
        "tags": [
          "Group"
        ],
        "x-onedata-service": "onezone",
        "x-onedata-module": "group",
        "x-onedata-resource": "spaces",
        "x-onedata-method": "space_logic:create",
        "x-onedata-permissions": [
          "group_create_space"
        ],
        "summary": "Create new space for group",
        "x-bash-codegen-description": "Creates a new space for of a specific group.\n\nThis operation requires `group_create_space` privilege.\n",
        "description": "Creates a new space for of a specific group.\n\nThis operation requires `group_create_space` privilege.\n\n***Example cURL requests***\n\n**Create new space for group**\n```bash\ncurl -u admin:password  -H \"Content-type: application/json\" \\\n-X POST -d '{\"name\": \"new_space\"}' \\\nhttps://$HOST:8443/api/v3/onezone/groups/HwUpk8jrwxKOe45uzLFX2GVC8lKEasj4q253sptVqF8/spaces\n```\n",
        "produces": [
          "application/json"
        ],
        "responses": {
          "204": {
            "description": "ID of the created space in the form /spaces/{id} is returned in the response `Location` header.\n",
            "headers": {
              "Location": {
                "description": "ID of the created space.",
                "type": "string"
              }
            }
          },
          "400": {
            "description": "Invalid request.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "Forbidden request.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Resource not found..",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Group ID.",
            "type": "string",
            "required": true
          },
          {
            "name": "spaceName",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string",
                  "description": "Name of the new space."
                }
              },
              "required": [
                "name"
              ]
            }
          }
        ],
        "x-code-samples": [
          {
            "lang": "Shell",
            "source": "onezone-rest-cli createSpaceForGroup id=HwUpk8jrwxKOe45uzLFX2GVC8lKEasj4q253sptVqF8 name==\"New space name\""
          }
        ]
      }
    },
    "/groups/{id}/spaces/join": {
      "post": {
        "operationId": "group_join_space",
        "tags": [
          "Group"
        ],
        "x-onedata-service": "onezone",
        "x-onedata-module": "group",
        "x-onedata-resource": "sjoin",
        "x-onedata-method": "space_logic:join",
        "x-onedata-permissions": [
          "group_join_space"
        ],
        "summary": "Join space by group",
        "x-bash-codegen-description": "Joins the group to an existing space based on provided space invitation token.\n\nThis operation requires `group_join_space` privilege.\n",
        "description": "Joins the group to an existing space based on provided space invitation token.\n\nThis operation requires `group_join_space` privilege.\n\n***Example cURL requests***\n\n**Join group's space**\n```bash\ncurl -u admin:password -H \"Content-type: application/json\" \\\n-d '{\"token\":\"MDAxNmxvY2F00aW9uIHJlZ2lzdHJ5CjAwM2JpZGVuJ3l02U1JXzstRdK00ZHbso02rRcG8bJLAo\"}' \\\nhttps://$HOST:8443/api/v3/onezone/groups/HwUpk8jrwxKOe45uzLFX2GVC8lKEasj4q253sptVqF8/spaces/join\n```\n",
        "consumes": [
          "application/json"
        ],
        "responses": {
          "201": {
            "description": "ID of the joined space in the form /spaces/{id} is returned in the response `Location` header.\n",
            "headers": {
              "Location": {
                "description": "ID of the joined space.",
                "type": "string"
              }
            }
          },
          "400": {
            "description": "Invalid request.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "401": {
            "description": "Authentication error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "Authorization error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Resource not found.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server Error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Group ID.",
            "type": "string",
            "required": true
          },
          {
            "name": "data",
            "in": "body",
            "description": "Space join token.",
            "schema": {
              "$ref": "#/definitions/SpaceInviteToken"
            }
          }
        ],
        "x-code-samples": [
          {
            "lang": "Shell",
            "source": "onezone-rest-cli groupJoinSpace id=T5x_HhFYOnILOCUf9OqgExw00RwaU2MXT5122oWk_sM token==9ASDKJHAJKyvajsbd675OqgExw00RwaU2MXT51"
          }
        ]
      }
    },
    "/groups/{id}/effective_spaces": {
      "get": {
        "operationId": "list_effective_group_spaces",
        "tags": [
          "Group"
        ],
        "x-onedata-service": "onezone",
        "x-onedata-module": "group",
        "x-onedata-resource": "spaces",
        "x-onedata-method": "group_logic:get_effective_group_spaces",
        "x-onedata-permissions": [
          "group_view_data"
        ],
        "summary": "List effective group's spaces",
        "x-bash-codegen-description": "Returns the effective list of spaces to which the group has access.\n\nThis operation requires `group_view_data` privilege.\n",
        "description": "Returns the effective list of spaces to which the group has access.\n\nThis operation requires `group_view_data` privilege.\n\n***Example cURL requests***\n\n**Get group effective spaces**\n```bash\ncurl -u username:password -X GET \\\nhttps://$HOST:8443/api/v3/onezone/groups/HwUpk8jrwxKOe45uzLFX2GVC8lKEasj4q253sptVqF8/effective_spaces\n```\n",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "The effective list of space ID's for which the group has access.",
            "schema": {
              "$ref": "#/definitions/Spaces"
            }
          },
          "400": {
            "description": "Invalid request.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "401": {
            "description": "Authentication error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "Authorization error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Resource not found.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server Error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Group ID.",
            "type": "string",
            "required": true
          }
        ],
        "x-code-samples": [
          {
            "lang": "Shell",
            "source": "onezone-rest-cli listEffectiveGroupSpaces id=HwUpk8jrwxKOe45uzLFX2GVC8lKEasj4q253sptVqF8"
          }
        ]
      }
    },
    "/groups/{id}/effective_spaces/{sid}": {
      "get": {
        "operationId": "get_effective_group_space",
        "tags": [
          "Group"
        ],
        "x-onedata-service": "onezone",
        "x-onedata-module": "group",
        "x-onedata-resource": "space",
        "x-onedata-method": "space_logic:get_data",
        "x-onedata-permissions": [
          "group_view_data"
        ],
        "summary": "Get effective group space details",
        "x-bash-codegen-description": "Returns information about a specific effective space to which the group belongs.\n\nThis operation requires `group_view_data` privilege.\n",
        "description": "Returns information about a specific effective space to which the group belongs.\n\nThis operation requires `group_view_data` privilege.\n\n***Example cURL requests***\n\n**Get group's space details**\n```bash\ncurl -u username:password -X GET \\\nhttps://$HOST:8443/api/v3/onezone/groups/HwUpk8jrwxKOe45uzLFX2GVC8lKEasj4q253sptVqF8/effective_spaces/Xnp1JVpWfL8_stHJgct76AFALjRsI0W3rNs1nfMwqnY\n\n{\n   \"providersSupports\" : {\n      \"hxfMCWmquqAIjG1GeG2eZY8qvs8iRIn09HzjCJilnSE\" : 5368709120\n   },\n   \"spaceId\" : \"Xnp1JVpWfL8_stHJgct76AFALjRsI0W3rNs1nfMwqnY\",\n   \"name\" : \"Test\"\n}\n```\n",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Information about a specific space in a group.",
            "schema": {
              "$ref": "#/definitions/Space"
            }
          },
          "400": {
            "description": "Invalid request.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "401": {
            "description": "Authentication error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "Authorization error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Resource not found.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server Error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Group ID.",
            "type": "string",
            "required": true
          },
          {
            "name": "sid",
            "in": "path",
            "description": "Effective space ID.",
            "type": "string",
            "required": true
          }
        ],
        "x-code-samples": [
          {
            "lang": "Shell",
            "source": "onezone-rest-cli getEffectiveGroupSpace id=HwUpk8jrwxKOe45uzLFX2GVC8lKEasj4q253sptVqF8 sid=HUUPOMNGzikwiLXHaFYcE8"
          }
        ]
      }
    },
    "/groups/{id}/effective_providers": {
      "get": {
        "operationId": "list_effective_group_providers",
        "tags": [
          "Group"
        ],
        "x-onedata-service": "onezone",
        "x-onedata-module": "group",
        "x-onedata-resource": "providers",
        "x-onedata-method": "group_logic:get_effective_group_providers",
        "x-onedata-permissions": [
          "group_view_data"
        ],
        "summary": "List effective group's providers",
        "x-bash-codegen-description": "Returns the effective list of providers supporting group spaces.\n\nThis operation requires `group_view_data` privilege.\n",
        "description": "Returns the effective list of providers supporting group spaces.\n\nThis operation requires `group_view_data` privilege.\n\n***Example cURL requests***\n\n**Get group effective providers**\n```bash\ncurl -u username:password -X GET \\\nhttps://$HOST:8443/api/v3/onezone/groups/HwUpk8jrwxKOe45uzLFX2GVC8lKEasj4q253sptVqF8/effective_providers\n```\n",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "The effective list of providers supporting group spaces.",
            "schema": {
              "$ref": "#/definitions/Providers"
            }
          },
          "400": {
            "description": "Invalid request.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "401": {
            "description": "Authentication error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "Authorization error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Resource not found.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server Error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Group ID.",
            "type": "string",
            "required": true
          }
        ],
        "x-code-samples": [
          {
            "lang": "Shell",
            "source": "onezone-rest-cli listEffectiveGroupProviders id=HwUpk8jrwxKOe45uzLFX2GVC8lKEasj4q253sptVqF8"
          }
        ]
      }
    },
    "/groups/{id}/effective_providers/{pid}": {
      "get": {
        "operationId": "get_effective_group_provider",
        "tags": [
          "Group"
        ],
        "x-onedata-service": "onezone",
        "x-onedata-module": "group",
        "x-onedata-resource": "provider",
        "x-onedata-method": "space_logic:get_data",
        "x-onedata-permissions": [
          "group_view_data"
        ],
        "summary": "Get effective group's provider details",
        "x-bash-codegen-description": "Returns information about a specific effective provider supporting groups spaces.\n\nThis operation requires `group_view_data` privilege.\n",
        "description": "Returns information about a specific effective provider supporting groups spaces.\n\nThis operation requires `group_view_data` privilege.\n\n***Example cURL requests***\n\n**Get group's effective provider details**\n```bash\ncurl -u username:password -X GET \\\nhttps://$HOST:8443/api/v3/onezone/groups/HwUpk8jrwxKOe45uzLFX2GVC8lKEasj4q253sptVqF8/effective_providers/HUUPOMNGzikwiLXHaFYcE8-qxDtKmt1Gb3v5OnF9UNE\n\n{\n  \"providerId\": \"HUUPOMNGzikwiLXHaFYcE8-qxDtKmt1Gb3v5OnF9UNE\",\n  \"redirectionPoint\": \"http://beta.onedata.org/provider2\",\n  \"latitude\": 50.0647,\n  \"longitude\": 19.9450\n}\n```\n",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Information about a specific providing groups spaces.",
            "schema": {
              "$ref": "#/definitions/ProviderDetails"
            }
          },
          "400": {
            "description": "Invalid request.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "401": {
            "description": "Authentication error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "Authorization error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Resource not found.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server Error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Group ID.",
            "type": "string",
            "required": true
          },
          {
            "name": "pid",
            "in": "path",
            "description": "Effective space ID.",
            "type": "string",
            "required": true
          }
        ],
        "x-code-samples": [
          {
            "lang": "Shell",
            "source": "onezone-rest-cli getEffectiveGroupProvider id=HwUpk8jrwxKOe45uzLFX2GVC8lKEasj4q253sptVqF8 pid=HUUPOMNGzikwiLXHaFYcE8"
          }
        ]
      }
    },
    "/groups/{id}/handle_services": {
      "get": {
        "operationId": "list_group_handle_services",
        "tags": [
          "Group"
        ],
        "x-onedata-service": "onezone",
        "x-onedata-module": "handle_service",
        "x-onedata-resource": "handle_service",
        "x-onedata-method": "handle_logic:get_group_handle_services",
        "x-onedata-permissions": [
          "list_handle_services"
        ],
        "summary": "List group handle services",
        "x-bash-codegen-description": "Returns the list of registered group handle services.\n\nThis operation requires `group_view_data` privilege.\n",
        "description": "Returns the list of registered group handle services.\n\nThis operation requires `group_view_data` privilege.\n\n***Example cURL requests***\n\n**Get group handle services**\n```bash\ncurl -u username:password -X GET https://$HOST:8443/api/v3/group/ASLKDJHAKLJSDHJKASD/handle_services\n\n{\n  \"handle_services\": [\n    \"SADHLKJhlkASHDLAKSHDLKJHJjLH\",\n    \"LAKSHDLKJHJjLHSADHLKJhlkASHD\"\n  ]\n}\n```\n",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "The list of identifiers of registered handle services.",
            "schema": {
              "$ref": "#/definitions/HandleServices"
            }
          },
          "400": {
            "description": "Invalid request.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "401": {
            "description": "Authentication error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "Authorization error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Resource not found.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server Error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Group ID.",
            "type": "string",
            "required": true
          }
        ],
        "x-code-samples": [
          {
            "lang": "Shell",
            "source": "onezone-rest-cli listGroupHandleServices id=ASLKDJHAKLJSDHJKASD"
          }
        ]
      },
      "post": {
        "operationId": "add_group_handle_service",
        "tags": [
          "Group"
        ],
        "x-onedata-service": "onezone",
        "x-onedata-module": "handle_service",
        "x-onedata-resource": "handle_service",
        "x-onedata-method": "handle_logic:add_handle_service",
        "x-onedata-permissions": [
          "add_handle_services"
        ],
        "summary": "Add group handle service",
        "x-bash-codegen-description": "Allows to register a new handle service for group.\n\nFor administrator who do not need to be members of this group\n`oz_handle_services_create` privilege is required.\n",
        "description": "Allows to register a new handle service for group.\n\nFor administrator who do not need to be members of this group\n`oz_handle_services_create` privilege is required.\n\n\n***Example cURL requests***\n\n**Add group handle services**\n```bash\ncurl -u username:password -X POST  -H \"Content-type: application/json\" \\\n-d '{ ... }' https://$HOST:8443/api/v3/groups/ASASDLKALKSD/handle_services\n```\n",
        "consumes": [
          "application/json"
        ],
        "responses": {
          "204": {
            "description": "Request successful.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The endpoint of the new handle service resource including the generated GUID.\n"
              }
            }
          },
          "400": {
            "description": "Invalid request.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "401": {
            "description": "Authentication error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "Authorization error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Resource not found.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server Error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "parameters": [
          {
            "name": "handleService",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/HandleService"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "Group ID.",
            "type": "string",
            "required": true
          }
        ],
        "x-code-samples": [
          {
            "lang": "Shell",
            "source": "cat hndl_service.json | onezone-rest-cli addGroupHandleService id=ASASDLKALKSD -"
          }
        ]
      }
    },
    "/groups/{id}/handle_services/{hsid}": {
      "get": {
        "operationId": "get_group_handle_service",
        "tags": [
          "Group"
        ],
        "x-onedata-service": "onezone",
        "x-onedata-module": "handle",
        "x-onedata-method": "handle_logic:get_data",
        "summary": "Get group handle service details",
        "x-bash-codegen-description": "Returns the details of a specific handle service.\n",
        "description": "Returns the details of a specific handle service.\n\n***Example cURL requests***\n\n**Get handle service details**\n```bash\ncurl -u username:password -X GET \\\nhttps://$HOST:8443/api/v3/onezone/groups/ALASDLKJALKSDJKLASD/handle_services/oOVF-KrO1P6rpA0LFgNVI8NxuhxyQMUnrYzjAnKiyAY\n\n{\n    \"name\": \"MyCommunity Handle service\",\n    \"proxyEndpoint\": \"https://localhost:17000/handle_proxy\",\n    \"serviceProperties\": {\n        \"allowTemplateOverride\": false,\n        \"doiEndpoint\": \"/doi\",\n        \"host\": \"https://mds.test.datacite.org\",\n        \"identifierTemplate\": \"{{space.name}}-{{space.guid}}\",\n        \"mediaEndpoint\": \"/media\",\n        \"metadataEndpoint\": \"/metadata\",\n        \"password\": \"pa$$word\",\n        \"prefix\": 10.5072,\n        \"type\": \"DOI\",\n        \"username\": \"alice\"\n    }\n}\n```\n",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Returns the details of a specific handle service.",
            "schema": {
              "$ref": "#/definitions/HandleService"
            }
          },
          "400": {
            "description": "Invalid request.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "401": {
            "description": "Authentication error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "Authorization error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Resource not found.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server Error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Group ID.",
            "type": "string",
            "required": true
          },
          {
            "name": "hsid",
            "in": "path",
            "description": "Handle service ID.",
            "type": "string",
            "required": true
          }
        ],
        "x-code-samples": [
          {
            "lang": "Shell",
            "source": "onezone-rest-cli getGroupHandleService id=ALASDLKJALKSDJKLASD hsid=oOVF-KrO1P6rpA0LFgNVI8NxuhxyQMUnrYzjAnKiyAY"
          }
        ]
      },
      "delete": {
        "operationId": "remove_group_handle_service",
        "tags": [
          "Group"
        ],
        "x-onedata-service": "onezone",
        "x-onedata-module": "handle",
        "x-onedata-method": "handle_logic:remove_group",
        "summary": "Remove group handle service",
        "x-bash-codegen-description": "Removes the group ownership or membership in a specific handle service.\n",
        "description": "Removes the group ownership or membership in a specific handle service.\n\n***Example cURL requests***\n\n**Delete user handle service**\n```bash\ncurl -u username:password -X DELETE \\\nhttps://$HOST:8443/api/v3/onezone/groups/AJKLASHJKDHKAJSHD/handle_services/oOVF-KrO1P6rpA0LFgNVI8NxuhxyQMUnrYzjAnKiyAY\n```\n",
        "produces": [
          "application/json"
        ],
        "responses": {
          "202": {
            "description": "The handle service will be deleted."
          },
          "400": {
            "description": "Invalid request.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "401": {
            "description": "Authentication error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "Authorization error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Resource not found.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server Error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Group ID.",
            "type": "string",
            "required": true
          },
          {
            "name": "hsid",
            "in": "path",
            "description": "Handle service Id.",
            "type": "string",
            "required": true
          }
        ],
        "x-code-samples": [
          {
            "lang": "Shell",
            "source": "onezone-rest-cli removeUserHandleService hsid=oOVF-KrO1P6rpA0LFgNVI8NxuhxyQMUnrYzjAnKiyAY"
          }
        ]
      }
    },
    "/groups/{id}/effective_handle_services": {
      "get": {
        "operationId": "list_effective_group_handle_services",
        "tags": [
          "Group"
        ],
        "x-onedata-service": "onezone",
        "x-onedata-module": "handle_service",
        "x-onedata-resource": "handle_service",
        "x-onedata-method": "handle_logic:get_group_handle_services",
        "x-onedata-permissions": [
          "list_handle_services"
        ],
        "summary": "List effective group handle services",
        "x-bash-codegen-description": "Returns the list of registered group effective handle services.\n\nThis operation requires `group_view_data` privilege.\n",
        "description": "Returns the list of registered group effective handle services.\n\nThis operation requires `group_view_data` privilege.\n\n***Example cURL requests***\n\n**Get group effective handle services**\n```bash\ncurl -u username:password -X GET https://$HOST:8443/api/v3/group/ASLKDJHAKLJSDHJKASD/effective_handle_services\n\n{\n  \"handle_services\": [\n    \"oOVF-KrO1P6rpA0LFgNVI8NxuhxyQMUnrYzjAnKiyAY\",\n    \"NxuhxyQMUnrYzjAnKiyAYoOVFPKrO1P6rpA0LFgNVI8\"\n  ]\n}\n```\n",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "The list of identifiers of effective handle services.",
            "schema": {
              "$ref": "#/definitions/HandleServices"
            }
          },
          "400": {
            "description": "Invalid request.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "401": {
            "description": "Authentication error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "Authorization error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Resource not found.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server Error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Group ID.",
            "type": "string",
            "required": true
          }
        ],
        "x-code-samples": [
          {
            "lang": "Shell",
            "source": "onezone-rest-cli listGroupEffectiveHandleServices"
          }
        ]
      }
    },
    "/groups/{id}/effective_handle_services/{hsid}": {
      "get": {
        "operationId": "get_group_effective_handle_service",
        "tags": [
          "Group"
        ],
        "x-onedata-service": "onezone",
        "x-onedata-module": "space",
        "x-onedata-method": "space_logic:get_data",
        "summary": "Get effective group handle service details",
        "x-bash-codegen-description": "Returns the details of a specific effective  handle service.\n\nThis operation requires `group_view_data` privilege.\n",
        "description": "Returns the details of a specific effective handle service.\n\nThis operation requires `group_view_data` privilege.\n\n***Example cURL requests***\n\n**Get effective handle service details**\n```bash\ncurl -u username:password -X GET \\\nhttps://$HOST:8443/api/v3/onezone/groups/ALASDLKJALKSDJKLASD/effective_handle_services/SADHLKJhlkASHDLAKSHDLKJHJjLH\n\n{\n    \"handleServiceId\": \"SADHLKJhlkASHDLAKSHDLKJHJjLH\",\n    \"name\": \"MyCommunity Handle service\",\n    \"proxyEndpoint\": \"https://localhost:17000/handle_proxy\",\n    \"serviceProperties\": {\n        \"allowTemplateOverride\": false,\n        \"doiEndpoint\": \"/doi\",\n        \"host\": \"https://mds.test.datacite.org\",\n        \"identifierTemplate\": \"{{space.name}}-{{space.guid}}\",\n        \"mediaEndpoint\": \"/media\",\n        \"metadataEndpoint\": \"/metadata\",\n        \"password\": \"pa$$word\",\n        \"prefix\": 10.5072,\n        \"type\": \"DOI\",\n        \"username\": \"alice\"\n    }\n}\n```\n",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "The handle service details have been returned successfully.",
            "schema": {
              "$ref": "#/definitions/HandleService"
            }
          },
          "400": {
            "description": "Invalid request.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "401": {
            "description": "Authentication error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "Authorization error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Resource not found.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server Error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Group ID.",
            "type": "string",
            "required": true
          },
          {
            "name": "hsid",
            "in": "path",
            "description": "Handle service ID.",
            "type": "string",
            "required": true
          }
        ],
        "x-code-samples": [
          {
            "lang": "Shell",
            "source": "onezone-rest-cli getEffectiveGroupHandleService id=ALASDLKJALKSDJKLASD hsid=SADHLKJhlkASHDLAKSHDLKJHJjLH"
          }
        ]
      }
    },
    "/groups/{id}/handles": {
      "get": {
        "operationId": "list_group_handles",
        "tags": [
          "Group"
        ],
        "x-onedata-service": "onezone",
        "x-onedata-module": "group",
        "x-onedata-method": "group_logic:get_handles",
        "summary": "List group handles",
        "x-bash-codegen-description": "Returns the list of groups handles.\n\nThis operation requires `group_view_data` privilege.\n",
        "description": "Returns the list of groups handles.\n\nThis operation requires `group_view_data` privilege.\n\n***Example cURL requests***\n\n**Get group handles**\n```bash\ncurl -u username:password -X GET \\\nhttps://$HOST:8443/api/v3/onezone/groups/LKJAHGSDLKJHALSDkjashdasdk/handles\n\n{\n  \"handles\": [\n    \"IkHB2CCoAFm5FCswhAJynbFU4fj26yiE1lhpK3p-0Y8\"\n  ]\n}\n```\n",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Returns the list of group handles.\n",
            "schema": {
              "$ref": "#/definitions/Handles"
            }
          },
          "400": {
            "description": "Invalid request.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "401": {
            "description": "Authentication error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "Authorization error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Resource not found.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server Error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Group ID.",
            "type": "string",
            "required": true
          }
        ],
        "x-code-samples": [
          {
            "lang": "Shell",
            "source": "onezone-rest-cli listGroupHandles id=LKJAHGSDLKJHALSDkjashdasdk"
          }
        ]
      },
      "post": {
        "operationId": "create_group_handle",
        "tags": [
          "Group"
        ],
        "x-onedata-service": "onezone",
        "x-onedata-module": "handle",
        "x-onedata-method": "handle_logic:create",
        "summary": "Create new group handle",
        "x-bash-codegen-description": "Creates a new handle on behalf of a group.\n\nThis operation requires `register_handle` privilege, for the handle service\nspecified in the `handleServiceId` field.\n",
        "description": "Creates a new handle on behalf of a group.\n\nThis operation requires `register_handle` privilege, for the handle service\nspecified in the `handleServiceId` field.\n\n\n***Example cURL requests***\n\n**Create new group handle**\n```bash\ncurl -u admin:password  -H \"Content-type: application/json\" -X POST \\\n-d '{ \"handleServiceId\": \"LKJAHSDKJLHASD\", \"resourceType\": \"Share\", \"resourceId\": \"ASDasd7asdASDASD76\", \"metadata\": \"<?xml version=\\'1.0\\'?>...\" }'\nhttps://$HOST:8443/api/v3/onezone/groups/LKJAHGSDLKJHALSDkjashdasdk/handles\n```\n",
        "consumes": [
          "application/json"
        ],
        "responses": {
          "201": {
            "description": "ID of the created space in the form /groups/{id}/spaces/{sid} is returned in the response `Location` header.\n",
            "headers": {
              "Location": {
                "description": "ID of the created handle.",
                "type": "string"
              }
            }
          },
          "400": {
            "description": "Invalid request.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "401": {
            "description": "Authentication error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "Authorization error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Resource not found.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server Error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "parameters": [
          {
            "name": "handle",
            "in": "body",
            "description": "New handle parameters.",
            "schema": {
              "$ref": "#/definitions/Handle"
            },
            "required": true
          },
          {
            "name": "id",
            "in": "path",
            "description": "Group ID.",
            "type": "string",
            "required": true
          }
        ],
        "x-code-samples": [
          {
            "lang": "Shell",
            "source": "cat handle.json | onezone-rest-cli createGroupHandle id=LKJAHGSDLKJHALSDkjashdasdk"
          }
        ]
      }
    },
    "/groups/{id}/handles/{hid}": {
      "get": {
        "operationId": "get_group_handle",
        "tags": [
          "Group"
        ],
        "x-onedata-service": "onezone",
        "x-onedata-module": "handle",
        "x-onedata-method": "handle_logic:get_data",
        "summary": "Get group handle details",
        "x-bash-codegen-description": "Returns the details of a specific handle.\n\nThis operation requires `group_view_data` privilege.\n",
        "description": "Returns the details of a specific handle.\n\nThis operation requires `group_view_data` privilege.\n\n***Example cURL requests***\n\n**Get handle details**\n```bash\ncurl -u username:password -X GET \\\nhttps://$HOST:8443/api/v3/onezone/groups/KLAJSHDjhkahsdkasjdKLHSALD/handles/oOVF-KrO1P6rpA0LFgNVI8NxuhxyQMUnrYzjAnKiyAY\n\n{\n  \"handleId\": \"oOVF-KrO1P6rpA0LFgNVI8NxuhxyQMUnrYzjAnKiyAY\",\n  \"handleServiceId\": \"ASKDGHKAJSHDukjhasdlkjalksjd76876asdkb\",\n  \"resourceType\": \"Share\",\n  \"resourceId\": \"dlkjalkADKDGHKAJSHDukjhassjd76876asdkb\",\n  \"metadata\": \"<?xml version=\\\"1.0\\\"?>\n      <!DOCTYPE rdf:RDF SYSTEM \\\\\"http://dublincore.org/2000/12/01-dcmes-xml-dtd.dtd\\\">\n      <rdf:RDF xmlns:rdf=\\\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\\\"\n               xmlns:dc=\\\"http://purl.org/dc/elements/1.1/\\\">\n        <rdf:Description rdf:about=\\\"http://example.com/resouces/1\\\">\n          <dc:title>Example Resource</dc:title>\n          <dc:creator>John Doe</dc:creator>\n          <dc:publisher>MIT</dc:publisher>\n          <dc:date>2000-06-06</dc:date>\n        </rdf:Description>\n      </rdf:RDF>\",\n  \"timestamp\": \"1997-07-16T19:20\"\n}\n```\n",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Returns the details of a specific handle.",
            "schema": {
              "$ref": "#/definitions/Handle"
            }
          },
          "400": {
            "description": "Invalid request.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "401": {
            "description": "Authentication error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "Authorization error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Resource not found.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server Error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Group ID.",
            "type": "string",
            "required": true
          },
          {
            "name": "hid",
            "in": "path",
            "description": "Handle ID.",
            "type": "string",
            "required": true
          }
        ],
        "x-code-samples": [
          {
            "lang": "Shell",
            "source": "onezone-rest-cli getGroupHandle id=KLAJSHDjhkahsdkasjdKLHSALD hid=oOVF-KrO1P6rpA0LFgNVI8NxuhxyQMUnrYzjAnKiyAY"
          }
        ]
      },
      "delete": {
        "operationId": "remove_group_handle",
        "tags": [
          "Group"
        ],
        "x-onedata-service": "onezone",
        "x-onedata-module": "handle",
        "x-onedata-method": "handle_logic:remove_group",
        "summary": "Remove group handle",
        "x-bash-codegen-description": "Removes the groups ownership or membership in a specific space.\n\nThis operation requires `group_change_data` privilege.\n",
        "description": "Removes the groups ownership or membership in a specific space.\n\nThis operation requires `group_change_data` privilege.\n\n***Example cURL requests***\n\n**Delete user space**\n```bash\ncurl -u username:password -X DELETE \\\nhttps://$HOST:8443/api/v3/onezone/groups/AKSDKJLHASDJKjhjaksdLKJASD/spaces/oOVF-KrO1P6rpA0LFgNVI8NxuhxyQMUnrYzjAnKiyAY\n```\n",
        "produces": [
          "application/json"
        ],
        "responses": {
          "202": {
            "description": "The handle will be removed from group."
          },
          "400": {
            "description": "Invalid request.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "401": {
            "description": "Authentication error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "Authorization error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Resource not found.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server Error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Group ID.",
            "type": "string",
            "required": true
          },
          {
            "name": "hid",
            "in": "path",
            "description": "Handle Id.",
            "type": "string",
            "required": true
          }
        ],
        "x-code-samples": [
          {
            "lang": "Shell",
            "source": "onezone-rest-cli removeGroupHandle id=KLAJSHDjhkahsdkasjdKLHSALD hid=oOVF-KrO1P6rpA0LFgNVI8NxuhxyQMUnrYzjAnKiyAY"
          }
        ]
      }
    },
    "/groups/{id}/effective_handles": {
      "get": {
        "operationId": "list_effective_group_handles",
        "tags": [
          "Group"
        ],
        "x-onedata-service": "onezone",
        "x-onedata-module": "group",
        "x-onedata-method": "group_logic:get_effective_handles",
        "summary": "List effective group handles",
        "x-bash-codegen-description": "Returns the list of effective groups' handles.\n\nThis operation requires `group_view_data` privilege.\n",
        "description": "Returns the list of effective groups' handles.\n\nThis operation requires `group_view_data` privilege.\n\n***Example cURL requests***\n\n**List effective group handles**\n```bash\ncurl -u username:password -X GET \\\nhttps://$HOST:8443/api/v3/onezone/groups/LKJAHGSDLKJHALSDkjashdasdk/effective_handles\n\n{\n  \"handles\": [\n    \"IkHB2CCoAFm5FCswhAJynbFU4fj26yiE1lhpK3p-0Y8\"\n  ]\n}\n```\n",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Returns the list of group handles.",
            "schema": {
              "$ref": "#/definitions/Handles"
            }
          },
          "400": {
            "description": "Invalid request.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "401": {
            "description": "Authentication error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "Authorization error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Resource not found.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server Error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Group ID.",
            "type": "string",
            "required": true
          }
        ],
        "x-code-samples": [
          {
            "lang": "Shell",
            "source": "onezone-rest-cli listEffectiveGroupHandles id=LKJAHGSDLKJHALSDkjashdasdk"
          }
        ]
      }
    },
    "/groups/{id}/effective_handles/{hid}": {
      "get": {
        "operationId": "get_effective_group_handle",
        "tags": [
          "Group"
        ],
        "x-onedata-service": "onezone",
        "x-onedata-module": "handle",
        "x-onedata-method": "handle_logic:get_data",
        "summary": "Get effective group handle details",
        "x-bash-codegen-description": "Returns the details of a specific effective handle.\n",
        "description": "Returns the details of a specific effective handle.\n\n***Example cURL requests***\n\n**Get effective handle details**\n```bash\ncurl -u username:password -X GET \\\nhttps://$HOST:8443/api/v3/onezone/groups/KLAJSHDjhkahsdkasjdKLHSALD/effective_handles/oOVF-KrO1P6rpA0LFgNVI8NxuhxyQMUnrYzjAnKiyAY\n\n{\n  \"handleId\": \"oOVF-KrO1P6rpA0LFgNVI8NxuhxyQMUnrYzjAnKiyAY\",\n  \"handleServiceId\": \"ASKDGHKAJSHDukjhasdlkjalksjd76876asdkb\",\n  \"resourceType\": \"Share\",\n  \"resourceId\": \"dlkjalkADKDGHKAJSHDukjhassjd76876asdkb\",\n  \"metadata\": \"<?xml version=\\\"1.0\\\"?>\n      <!DOCTYPE rdf:RDF SYSTEM \\\\\"http://dublincore.org/2000/12/01-dcmes-xml-dtd.dtd\\\">\n      <rdf:RDF xmlns:rdf=\\\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\\\"\n               xmlns:dc=\\\"http://purl.org/dc/elements/1.1/\\\">\n        <rdf:Description rdf:about=\\\"http://example.com/resouces/1\\\">\n          <dc:title>Example Resource</dc:title>\n          <dc:creator>John Doe</dc:creator>\n          <dc:publisher>MIT</dc:publisher>\n          <dc:date>2000-06-06</dc:date>\n        </rdf:Description>\n      </rdf:RDF>\",\n  \"timestamp\": \"1997-07-16T19:20\"\n}\n```\n",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Returns the details of a specific effective handle.",
            "schema": {
              "$ref": "#/definitions/Handle"
            }
          },
          "400": {
            "description": "Invalid request.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "401": {
            "description": "Authentication error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "Authorization error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Resource not found.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server Error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Group ID.",
            "type": "string",
            "required": true
          },
          {
            "name": "hid",
            "in": "path",
            "description": "Handle ID.",
            "type": "string",
            "required": true
          }
        ],
        "x-code-samples": [
          {
            "lang": "Shell",
            "source": "onezone-rest-cli getEffectiveGroupHandle id=KLAJSHDjhkahsdkasjdKLHSALD hid=oOVF-KrO1P6rpA0LFgNVI8NxuhxyQMUnrYzjAnKiyAY"
          }
        ]
      }
    },
    "/spaces": {
      "get": {
        "operationId": "list_spaces",
        "tags": [
          "Space"
        ],
        "x-onedata-service": "onezone",
        "x-onedata-module": "space",
        "x-onedata-resource": "spaces",
        "x-onedata-method": "space_logic:list_spaces",
        "summary": "List all spaces",
        "x-bash-codegen-description": "Returns the list of all spaces managed by the Onezone service.\n\nThis operation requires `list_spaces` privilege.\n",
        "description": "Returns the list of all spaces managed by the Onezone service.\n\nThis operation requires `list_spaces` privilege.\n\n***Example cURL requests***\n\n**List all spaces**\n```bash\ncurl -u admin:password -X GET \\\nhttps://$HOST:8443/api/v3/onezone/spaces\n\n{\n  \"spaces\": [\n    \"S0Y9FSe9TFJFFzzLtBEs8\",\n    \"IkHBv8CoAFmbFU4fj26\"\n  ]\n}\n```\n",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "List of spaces Id's.",
            "schema": {
              "$ref": "#/definitions/Spaces"
            }
          },
          "400": {
            "description": "Invalid request.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "401": {
            "description": "Authentication error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "Authorization error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Resource not found.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server Error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "x-code-samples": [
          {
            "lang": "Shell",
            "source": "onezone-rest-cli listSpaces"
          }
        ]
      },
      "post": {
        "operationId": "create_space",
        "tags": [
          "Space"
        ],
        "x-onedata-service": "onezone",
        "x-onedata-module": "spaces",
        "x-onedata-resource": "spaces",
        "x-onedata-method": "space_logic:create",
        "summary": "Create new space",
        "x-bash-codegen-description": "When called by a regular user, creates a new space and sets the current\nuser as its owner.\n\nThis operation does not require any specific privileges.\n",
        "description": "When called by a regular user, creates a new space and sets the current\nuser as its owner.\n\nThis operation does not require any specific privileges.\n\n***Example cURL requests***\n\n**Create new space**\n```bash\ncurl -u username:password  -H \"Content-type: application/json\" \\\n-X POST -d '{ \"name\" : \"new_space\" }' \\\nhttps://$HOST:8443/api/v3/onezone/spaces\n```\n",
        "consumes": [
          "application/json"
        ],
        "responses": {
          "201": {
            "description": "ID of the created space in the form /spaces/{id} is returned in the response `Location` header.\n",
            "headers": {
              "Location": {
                "description": "ID of the created space.",
                "type": "string"
              }
            }
          },
          "400": {
            "description": "Invalid request.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "401": {
            "description": "Authentication error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "Authorization error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Resource not found.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server Error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "parameters": [
          {
            "name": "name",
            "in": "body",
            "description": "Space name.",
            "schema": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string",
                  "description": "The name of the new space."
                }
              }
            }
          }
        ],
        "x-code-samples": [
          {
            "lang": "Shell",
            "source": "onezone-rest-cli createSpace name==\"Space 1\""
          }
        ]
      }
    },
    "/spaces/{id}": {
      "get": {
        "operationId": "get_space",
        "tags": [
          "Space"
        ],
        "x-onedata-service": "onezone",
        "x-onedata-module": "spaces",
        "x-onedata-resource": "space",
        "x-onedata-method": "space_logic:get_data",
        "summary": "Get space details",
        "x-bash-codegen-description": "Returns the details about a specific space.\n\nIf called by user who is not member of the space, requires `list_spaces`\nprivilege.\n",
        "description": "Returns the details about a specific space.\n\nIf called by user who is not member of the space, requires `list_spaces`\nprivilege.\n\n***Example cURL requests***\n\n**Get space details**\n```bash\ncurl -u admin:password -X GET \\\nhttps://$HOST:8443/api/v3/onezone/spaces/803ZirkUfdiWDd4W3bI4QaPBog_0kCdUddUIsgAxi5I\n\n{\n  \"spaceId\": \"803ZirkUfdiWDd4W3bI4QaPBog_0kCdUddUIsgAxi5I\",\n  \"name\": \"new_space1\",\n  \"providersSupports\": {\n    \"hxfMCWmquqAIjG1GeG2eZY8qvs8iRIn09HzjCJilnSE\" : 5368709120\n  }\n}\n```\n",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Information about a space.",
            "schema": {
              "$ref": "#/definitions/Space"
            }
          },
          "400": {
            "description": "Invalid request.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "401": {
            "description": "Authentication error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "Authorization error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Resource not found.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server Error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Space ID.",
            "type": "string",
            "required": true
          }
        ],
        "x-code-samples": [
          {
            "lang": "Shell",
            "source": "onezone-rest-cli getSpace id=bI4QaPBog_0kCdUddUIsgAxi5I803ZirkUfdiWDd4W3"
          }
        ]
      },
      "patch": {
        "operationId": "modify_space",
        "tags": [
          "Space"
        ],
        "x-onedata-service": "onezone",
        "x-onedata-module": "spaces",
        "x-onedata-resource": "space",
        "x-onedata-method": "space_logic:modify",
        "summary": "Modify space details",
        "x-bash-codegen-description": "Updates the details about a space.\n\nIf called by user who is not member of the space, requires `space_change_data`\nprivilege.\n",
        "description": "Updates the details about a space.\n\nIf called by user who is not member of the space, requires `space_change_data`\nprivilege.\n\n***Example cURL requests***\n\n**Change space name**\n```bash\ncurl -u username:password -H \"Content-type: application/json\" \\\n-X PATCH -d '{\"name\": \"new_space12\"}' \\\nhttps://$HOST:8443/api/v3/onezone/spaces/56ID6lRxcbz4OEbrr7vPI52UA7E6WwkqQ6bJCtW5PLE\n```\n",
        "consumes": [
          "application/json"
        ],
        "responses": {
          "204": {
            "description": "Space has been updated successfully."
          },
          "400": {
            "description": "Invalid request.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "401": {
            "description": "Authentication error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "Authorization error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Resource not found.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server Error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Space ID.",
            "type": "string",
            "required": true
          },
          {
            "name": "data",
            "in": "body",
            "description": "Space parameters",
            "schema": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string",
                  "description": "The name of the new space."
                }
              }
            },
            "required": true
          }
        ],
        "x-code-samples": [
          {
            "lang": "Shell",
            "source": "onezone-rest-cli modifySpace id=bI4QaPBog_0kCdUddUIsgAxi5I803ZirkUfdiWDd4W3 name==\"New Space Name\""
          }
        ]
      },
      "delete": {
        "operationId": "remove_space",
        "tags": [
          "Space"
        ],
        "x-onedata-service": "onezone",
        "x-onedata-module": "spaces",
        "x-onedata-resource": "space",
        "x-onedata-method": "space_logic:remove_space",
        "summary": "Remove space",
        "x-bash-codegen-description": "Removes a specific space.\n\nIf called by user who is not member of the space, requires `space_remove`\nprivilege.\n",
        "description": "Removes a specific space.\n\nIf called by user who is not member of the space, requires `space_remove`\nprivilege.\n\n***Example cURL requests***\n\n**Remove space**\n```bash\ncurl -u admin:password -X DELETE \\\nhttps://$HOST:8443/api/v3/onezone/spaces/803ZirkUfdiWDd4W3bI4QaPBog_0kCdUddUIsgAxi5I\n```\n",
        "responses": {
          "202": {
            "description": "The space will be removed."
          },
          "400": {
            "description": "Invalid request.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "401": {
            "description": "Authentication error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "Authorization error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Resource not found.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server Error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Space ID.",
            "type": "string",
            "required": true
          }
        ],
        "x-code-samples": [
          {
            "lang": "Shell",
            "source": "onezone-rest-cli removeSpace id=bI4QaPBog_0kCdUddUIsgAxi5I803ZirkUfdiWDd4W3"
          }
        ]
      }
    },
    "/spaces/{id}/users": {
      "get": {
        "operationId": "list_space_users",
        "tags": [
          "Space"
        ],
        "x-onedata-service": "onezone",
        "x-onedata-module": "spaces",
        "x-onedata-resource": "users",
        "x-onedata-method": "space_logic:get_users",
        "summary": "List space users",
        "x-bash-codegen-description": "Returns the list of users belonging to a specific space.\n\nThis operation requires `space_view_data` privilege.\nFor administrators who do not have to be members of this space,\n`oz_spaces_list_users` privilege is required.\n",
        "description": "Returns the list of users belonging to a specific space.\n\nThis operation requires `space_view_data` privilege.\nFor administrators who do not have to be members of this space,\n`oz_spaces_list_users` privilege is required.\n\n***Example cURL requests***\n\n**Get space provider details**\n```bash\ncurl -u username:password -X GET \\\nhttps://$HOST:8443/api/v3/onezone/spaces/9ueUeoZA6KXxNgzlvqmmrbzqE_BQiaHEEDC21sY1Kuc/users\n\n{\n  \"users\": [\n    \"lb0NvUXIVguzjQ3dBOXAyd1c61fWKB5dKJDQ6YvB7a0\"\n  ]\n}\n```\n",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "The list of all user ID's that belong to a specific space",
            "schema": {
              "$ref": "#/definitions/Users"
            }
          },
          "400": {
            "description": "Invalid request.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "401": {
            "description": "Authentication error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "Authorization error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Resource not found.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server Error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Space ID.",
            "type": "string",
            "required": true
          }
        ],
        "x-code-samples": [
          {
            "lang": "Shell",
            "source": "onezone-rest-cli listSpaceUsers id=bI4QaPBog_0kCdUddUIsgAxi5I803ZirkUfdiWDd4W3"
          }
        ]
      }
    },
    "/spaces/{id}/users/token": {
      "post": {
        "operationId": "create_space_user_invite_token",
        "tags": [
          "Space"
        ],
        "x-onedata-service": "onezone",
        "x-onedata-module": "spaces",
        "x-onedata-resource": "uinvite",
        "x-onedata-method": "token_logic:create",
        "summary": "Create space user invite token",
        "x-bash-codegen-description": "Creates a token allowing new user to join a space.\n\nThis operation requires `space_invite_user` privilege.\n",
        "description": "Creates a token allowing new user to join a space.\n\nThis operation requires `space_invite_user` privilege.\n\n***Example cURL requests***\n\n**Create space user invite token**\n```bash\ncurl -u username:password -X POST \\\nhttps://$HOST:8443/api/v3/onezone/spaces/9ueUeoZA6KXxNgzlvqmmrbzqE_BQiaHEEDC21sY1Kuc/users/token\n\n{\n  \"token\": \"MDAxNmxvY2F00aW9uIHJlZ2lzdHJ5CjAwM2JpZGVudGlmaWVyIG00zcEJ2UDVuOHhkQUNhdk9hbTlyNnIwNldPSzVhc\"\n}\n```\n",
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "The token for joining a specific group.",
            "schema": {
              "$ref": "#/definitions/SpaceInviteToken"
            }
          },
          "400": {
            "description": "Invalid request.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "401": {
            "description": "Authentication error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "Authorization error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Resource not found.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server Error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Space ID.",
            "type": "string",
            "required": true
          },
          {
            "name": "options",
            "description": "Optional token parameters.",
            "in": "body",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "x-code-samples": [
          {
            "lang": "Shell",
            "source": "onezone-rest-cli createSpaceUserInviteToken id=bI4QaPBog_0kCdUddUIsgAxi5I803ZirkUfdiWDd4W3"
          }
        ]
      }
    },
    "/spaces/{id}/users/{uid}": {
      "get": {
        "operationId": "get_space_user",
        "tags": [
          "Space"
        ],
        "x-onedata-service": "onezone",
        "x-onedata-module": "spaces",
        "x-onedata-resource": "user",
        "x-onedata-method": "space_logic:get_user",
        "summary": "Get space user details",
        "x-bash-codegen-description": "Returns the public information about a specific user in a space.\n\nThis operation requires `space_view_data` privilege.\nFor administrators who do not have to be members of this space,\n`oz_spaces_list_users` privilege is required.\n",
        "description": "Returns the public information about a specific user in a space.\n\nThis operation requires `space_view_data` privilege.\nFor administrators who do not have to be members of this space,\n`oz_spaces_list_users` privilege is required.\n\n***Example cURL requests***\n\n**Get space user data**\n```bash\ncurl -u username:password -X GET \\\nhttps://$HOST:8443/api/v3/onezone/spaces/9ueUeoZA6KXxNgzlvqmmrbzqE_BQiaHEEDC21sY1Kuc/users/njOzyvXybAYvki10HXRCeJd_IlLHS4XEklgghmJjDpo\n\n{\n   \"name\" : \"John Doe\",\n   \"alias\" : \"\",\n   \"login\" : \"username\",\n   \"connectedAccounts\" : [],\n   \"userId\" : \"njOzyvXybAYvki10HXRCeJd_IlLHS4XEklgghmJjDpo\",\n   \"emailList\" : []\n}\n```\n",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Information about a space user.",
            "schema": {
              "$ref": "#/definitions/User"
            }
          },
          "400": {
            "description": "Invalid request.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "401": {
            "description": "Authentication error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "Authorization error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Resource not found.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server Error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Space ID.",
            "type": "string",
            "required": true
          },
          {
            "name": "uid",
            "in": "path",
            "description": "User ID.",
            "type": "string",
            "required": true
          }
        ],
        "x-code-samples": [
          {
            "lang": "Shell",
            "source": "onezone-rest-cli getSpaceUser id=bI4QaPBog_0kCdUddUIsgAxi5I803ZirkUfdiWDd4W3 uid=lb0NvUXIVguzjQ3dBOXAyd1c61fWKB5dKJDQ6YvB7a0"
          }
        ]
      },
      "put": {
        "operationId": "add_user_to_space",
        "tags": [
          "Space"
        ],
        "x-onedata-service": "onezone",
        "x-onedata-module": "spaces",
        "x-onedata-resource": "users",
        "x-onedata-method": "space_logic:add_user",
        "summary": "Add user to space",
        "x-bash-codegen-description": "Allows to add a user to any space.\n\nThis operation can be invoked by system administrators only\nand requires `add_member_to_space` privilege.\n",
        "description": "Allows to add a user to any space. Optional privileges\ncan be passed in the request body, otherwise default\nprivileges will be set for user in this space.\n\nThis operation can be invoked by system administrators only\nand requires `add_member_to_space` privilege.\n\n***Example cURL requests***\n\n**Add user to space**\n```bash\ncurl -u username:password  -H \"Content-type: application/json\" -X PUT \\\nhttps://$HOST:8443/api/v3/onezone/spaces/9ueUeoZA6KXxNgzlvqmmrbzqE_BQiaHEEDC21sY1Kuc/users/lb0NvUXIVguzjQ3dBOXAyd1c61fWKB5dKJDQ6YvB7a0\n```\n",
        "consumes": [
          "application/json"
        ],
        "responses": {
          "204": {
            "description": "The user was added to the space."
          },
          "400": {
            "description": "Invalid request.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "401": {
            "description": "Authentication error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "Authorization error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Resource not found.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server Error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Space ID.",
            "type": "string",
            "required": true
          },
          {
            "name": "uid",
            "in": "path",
            "description": "User ID.",
            "type": "string",
            "required": true
          },
          {
            "name": "privileges",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/SpacePrivileges"
            },
            "required": false
          }
        ],
        "x-code-samples": [
          {
            "lang": "Shell",
            "source": "onezone-rest-cli addUserToSpace id=bI4QaPBog_0kCdUddUIsgAxi5I803ZirkUfdiWDd4W3 uid=lb0NvUXIVguzjQ3dBOXAyd1c61fWKB5dKJDQ6YvB7a0"
          }
        ]
      },
      "delete": {
        "operationId": "remove_space_user",
        "tags": [
          "Space"
        ],
        "x-onedata-service": "onezone",
        "x-onedata-module": "spaces",
        "x-onedata-resource": "user",
        "x-onedata-method": "space_logic:remove_user",
        "summary": "Remove user from space",
        "x-bash-codegen-description": "Removes user from specific space.\n\nThis operation requires `space_remove_user` or\n`remove_member_from_space` privilege.\n",
        "description": "Removes user from specific space.\n\nThis operation requires `space_remove_user` or\n`remove_member_from_space` privilege.\n\n***Example cURL requests***\n\n**Get space user data**\n```bash\ncurl  -u admin:password -X DELETE \\\nhttps://$HOST:8443/api/v3/onezone/spaces/p-mts_OBjwXss-E9kBxzp-ux12KNW2CBSaXlkDowDEk/users/ivMnRLb2WYNApEmP-j3SF0NsqBgdHG7iel89FHY802w\n```\n",
        "consumes": [
          "application/json"
        ],
        "responses": {
          "202": {
            "description": "User will be removed from space."
          },
          "400": {
            "description": "Invalid request.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "401": {
            "description": "Authentication error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "Authorization error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Resource not found.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server Error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Space ID.",
            "type": "string",
            "required": true
          },
          {
            "name": "uid",
            "in": "path",
            "description": "User ID.",
            "type": "string",
            "required": true
          }
        ],
        "x-code-samples": [
          {
            "lang": "Shell",
            "source": "onezone-rest-cli removeSpaceUser id=bI4QaPBog_0kCdUddUIsgAxi5I803ZirkUfdiWDd4W3 uid=lb0NvUXIVguzjQ3dBOXAyd1c61fWKB5dKJDQ6YvB7a0"
          }
        ]
      }
    },
    "/spaces/{id}/users/{uid}/privileges": {
      "get": {
        "operationId": "list_space_user_privileges",
        "tags": [
          "Space"
        ],
        "x-onedata-service": "onezone",
        "x-onedata-module": "spaces",
        "x-onedata-resource": "upriv",
        "x-onedata-method": "space_logic:get_privileges",
        "summary": "List user privileges to space",
        "x-bash-codegen-description": "Returns privileges of a user to a specific space.\n\nThis operation requires `space_view_data` privilege.\n",
        "description": "Returns privileges of a user to a specific space.\n\nThis operation requires `space_view_data` privilege.\n\n***Example cURL requests***\n\n**Get user privileges to space**\n```bash\ncurl -u username:password -X GET \\\nhttps://$HOST:8443/api/v3/onezone/spaces/9ueUeoZA6KXxNgzlvqmmrbzqE_BQiaHEEDC21sY1Kuc/users/lb0NvUXIVguzjQ3dBOXAyd1c61fWKB5dKJDQ6YvB7a0/privileges\n\n{\n  \"privileges\": [\n    \"space_add_provider\",\n    \"space_change_data\",\n    \"space_invite_group\"\n    ]\n}\n```\n",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "The list of user privileges in a space.",
            "schema": {
              "$ref": "#/definitions/SpacePrivileges"
            }
          },
          "400": {
            "description": "Invalid request.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "401": {
            "description": "Authentication error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "Authorization error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Resource not found.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server Error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Space ID.",
            "type": "string",
            "required": true
          },
          {
            "name": "uid",
            "in": "path",
            "description": "User ID.",
            "type": "string",
            "required": true
          }
        ],
        "x-code-samples": [
          {
            "lang": "Shell",
            "source": "onezone-rest-cli listSpaceUserPrivileges id=bI4QaPBog_0kCdUddUIsgAxi5I803ZirkUfdiWDd4W3 uid=lb0NvUXIVguzjQ3dBOXAyd1c61fWKB5dKJDQ6YvB7a0"
          }
        ]
      },
      "patch": {
        "operationId": "set_space_user_privileges",
        "tags": [
          "Space"
        ],
        "x-onedata-service": "onezone",
        "x-onedata-module": "spaces",
        "x-onedata-resource": "upriv",
        "x-onedata-method": "space_logic:set_privileges",
        "summary": "Set user privileges to space",
        "x-bash-codegen-description": "Sets privileges for a user to a space.\n\nThis operation requires `space_set_privileges` privilege.\n",
        "description": "Sets privileges for a user to a space.\n\nThis operation requires `space_set_privileges` privilege.\n\n***Example cURL requests***\n\n**Set user privileges to space**\n```bash\ncurl -i -k -u admin:password -X PUT \\\n-d '{\"privileges\":[\"space_add_provider\",\"space_change_data\"]}' \\\nhttps://$HOST:8443/api/v3/onezone/spaces/9ueUeoZA6KXxNgzlvqmmrbzqE_BQiaHEEDC21sY1Kuc/users/lb0NvUXIVguzjQ3dBOXAyd1c61fWKB5dKJDQ6YvB7a0/privileges\n```\n",
        "responses": {
          "204": {
            "description": "The user privileges have been updated."
          },
          "400": {
            "description": "Invalid request.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "401": {
            "description": "Authentication error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "Authorization error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Resource not found.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server Error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Space ID.",
            "type": "string",
            "required": true
          },
          {
            "name": "uid",
            "in": "path",
            "description": "User ID.",
            "type": "string",
            "required": true
          },
          {
            "name": "data",
            "in": "body",
            "description": "User privileges.",
            "schema": {
              "$ref": "#/definitions/SpacePrivileges"
            },
            "required": true
          }
        ],
        "x-code-samples": [
          {
            "lang": "Shell",
            "source": "echo '[\"space_view_data\"]' | onezone-rest-cli setSpaceUserPrivileges id=bI4QaPBog_0kCdUddUIsgAxi5I803ZirkUfdiWDd4W3 uid=lb0NvUXIVguzjQ3dBOXAyd1c61fWKB5dKJDQ6YvB7a0 -"
          }
        ]
      }
    },
    "/spaces/{id}/effective_users": {
      "get": {
        "operationId": "list_effective_space_users",
        "tags": [
          "Space"
        ],
        "x-onedata-service": "onezone",
        "x-onedata-module": "spaces",
        "x-onedata-resource": "users",
        "x-onedata-method": "space_logic:get_users",
        "summary": "List effective space users",
        "x-bash-codegen-description": "Returns the effective list of users belonging to a specific space.\n",
        "description": "Returns the effective list of users belonging to a specific space.\n\n***Example cURL requests***\n\n**Get space effective users**\n```bash\ncurl -u username:password -X GET \\\nhttps://$HOST:8443/api/v3/onezone/spaces/56ID6lRxcbz4OEbrr7vPI52UA7E6WwkqQ6bJCtW5PLE/effective_users\n\n{\n  \"users\": [\n    \"T5x_HhFYOnILOCUf9OqgExw00RwaU2MXT5122oWk_sM\",\n    \"e3piG9yg9877lagR7aHayk73te9gAMXxQvjBycwvnaow\"\n  ]\n}\n```\n",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "The list of effective user ID's that belong to a specific space.",
            "schema": {
              "$ref": "#/definitions/Users"
            }
          },
          "400": {
            "description": "Invalid request.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "401": {
            "description": "Authentication error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "Authorization error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Resource not found.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server Error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Space ID.",
            "type": "string",
            "required": true
          }
        ],
        "x-code-samples": [
          {
            "lang": "Shell",
            "source": "onezone-rest-cli listEffectiveSpaceUsers id=bI4QaPBog_0kCdUddUIsgAxi5I803ZirkUfdiWDd4W3"
          }
        ]
      }
    },
    "/spaces/{id}/effective_users/{uid}": {
      "get": {
        "operationId": "get_effective_space_user",
        "tags": [
          "Space"
        ],
        "x-onedata-service": "onezone",
        "x-onedata-module": "spaces",
        "x-onedata-resource": "user",
        "x-onedata-method": "space_logic:get_user",
        "summary": "Get effective space user details",
        "x-bash-codegen-description": "Returns details about a specific effective user in a space.\n\nThis operation requires `space_view_data` privilege.\n",
        "description": "Returns details about a specific effective user in a space.\n\nThis operation requires `space_view_data` privilege.\n\n***Example cURL requests***\n\n**Get effective space user details**\n```bash\ncurl -u username:password -X GET \\\nhttps://$HOST:8443/api/v3/onezone/spaces/9ueUeoZA6KXxNgzlvqmmrbzqE_BQiaHEEDC21sY1Kuc/effective_users/T5x_HhFYOnILOCUf9OqgExw00RwaU2MXT5122oWk_sM\n\n{\n  \"userId\": \"T5x_HhFYOnILOCUf9OqgExw00RwaU2MXT5122oWk_sM\",\n  \"login\": \"username\",\n  \"name\": \"John Doe\",\n  \"connectedAccounts\": [],\n  \"alias\": \"\",\n  \"emailList\": []\n}\n```\n",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Details of a specific user in a space.",
            "schema": {
              "$ref": "#/definitions/User"
            }
          },
          "400": {
            "description": "Invalid request.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "401": {
            "description": "Authentication error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "Authorization error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Resource not found.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server Error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Space ID.",
            "type": "string",
            "required": true
          },
          {
            "name": "uid",
            "in": "path",
            "description": "User ID.",
            "type": "string",
            "required": true
          }
        ],
        "x-code-samples": [
          {
            "lang": "Shell",
            "source": "onezone-rest-cli getEffectiveSpaceUser id=bI4QaPBog_0kCdUddUIsgAxi5I803ZirkUfdiWDd4W3 uid=T5x_HhFYOnILOCUf9OqgExw00RwaU2MXT5122oWk_sM"
          }
        ]
      }
    },
    "/spaces/{id}/effective_users/{uid}/privileges": {
      "get": {
        "operationId": "list_effective_space_user_privileges",
        "tags": [
          "Space"
        ],
        "x-onedata-service": "onezone",
        "x-onedata-module": "spaces",
        "x-onedata-resource": "gpriv",
        "x-onedata-method": "space_logic:get_privileges",
        "summary": "List effective user privileges to space",
        "x-bash-codegen-description": "Returns privileges for an effective user to a specific space.\n\nThis operation requires `space_view_data` privilege.\n",
        "description": "Returns privileges for an effective user to a specific space.\n\nThis operation requires `space_view_data` privilege.\n\n***Example cURL requests***\n\n**Get effective space user privileges**\n```bash\ncurl -u admin:password -X GET \\\nhttps://$HOST:8443/api/v3/onezone/spaces/9ueUeoZA6KXxNgzlvqmmrbzqE_BQiaHEEDC21sY1Kuc/effective_users/T5x_HhFYOnILOCUf9OqgExw00RwaU2MXT5122oWk_sM/privileges\n\n{\n  \"privileges\": [\n    \"space_view_data\"\n  ]\n}\n```\n",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "The list of user privileges in a space.",
            "schema": {
              "$ref": "#/definitions/SpacePrivileges"
            }
          },
          "400": {
            "description": "Invalid request.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "401": {
            "description": "Authentication error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "Authorization error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Resource not found.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server Error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Space ID.",
            "type": "string",
            "required": true
          },
          {
            "name": "uid",
            "in": "path",
            "description": "User ID.",
            "type": "string",
            "required": true
          }
        ],
        "x-code-samples": [
          {
            "lang": "Shell",
            "source": "onezone-rest-cli listEffectiveSpaceUserPrivileges id=bI4QaPBog_0kCdUddUIsgAxi5I803ZirkUfdiWDd4W3"
          }
        ]
      }
    },
    "/spaces/{id}/groups": {
      "get": {
        "operationId": "list_space_groups",
        "tags": [
          "Space"
        ],
        "x-onedata-service": "onezone",
        "x-onedata-module": "spaces",
        "x-onedata-resource": "groups",
        "x-onedata-method": "space_logic:get_groups",
        "summary": "List space groups",
        "x-bash-codegen-description": "Returns the list of groups belonging to a specific space.\n\nIf called by user who is not member of the space, requires `space_view_data`\nprivilege.\n",
        "description": "Returns the list of groups belonging to a specific space.\n\nIf called by user who is not member of the space, requires `space_view_data`\nprivilege.\n\n***Example cURL requests***\n\n**Get space groups**\n```bash\ncurl -u username:password -X GET \\\nhttps://$HOST:8443/api/v3/onezone/spaces/56ID6lRxcbz4OEbrr7vPI52UA7E6WwkqQ6bJCtW5PLE/groups\n\n{\n  \"groups\": [\n    \"T5x_HhFYOnILOCUf9OqgExw00RwaU2MXT5122oWk_sM\",\n    \"e3piG9yg9877lagR7aHayk73te9gAMXxQvjBycwvnaow\"\n  ]\n}\n```\n",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "The list of all group ID's that belong to a specific space",
            "schema": {
              "$ref": "#/definitions/Groups"
            }
          },
          "400": {
            "description": "Invalid request.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "401": {
            "description": "Authentication error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "Authorization error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Resource not found.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server Error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Space ID.",
            "type": "string",
            "required": true
          }
        ],
        "x-code-samples": [
          {
            "lang": "Shell",
            "source": "onezone-rest-cli listSpaceGroups id=bI4QaPBog_0kCdUddUIsgAxi5I803ZirkUfdiWDd4W3"
          }
        ]
      }
    },
    "/spaces/{id}/groups/token": {
      "post": {
        "operationId": "create_space_group_token",
        "tags": [
          "Space"
        ],
        "x-onedata-service": "onezone",
        "x-onedata-module": "spaces",
        "x-onedata-resource": "ginvite",
        "x-onedata-method": "token_logic:create",
        "summary": "Create space invite token for group",
        "x-bash-codegen-description": "Creates a token allowing to add a group to a specific space.\n\nThis operation requires `space_invite_group` privilege.\n",
        "description": "Creates a token allowing to add a group to a specific space.\n\nThis operation requires `space_invite_group` privilege.\n\n***Example cURL requests***\n\n**Create space invitation token for group**\n```bash\ncurl -u username:password -X GET \\\nhttps://$HOST:8443/api/v3/onezone/spaces/56ID6lRxcbz4OEbrr7vPI52UA7E6WwkqQ6bJCtW5PLE/groups/token\n\n{\n  \"token\": \"MDAxNmxvY0cGUgKWsjcpnrLE00RtOd2F00cGUgKWsjcpnrLE00RtOdhmnQycSICwMsugo\"\n}\n```\n",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "The token for joining a specific group.",
            "schema": {
              "$ref": "#/definitions/SpaceInviteToken"
            }
          },
          "400": {
            "description": "Invalid request.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "401": {
            "description": "Authentication error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "Authorization error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Resource not found.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server Error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Space ID.",
            "type": "string",
            "required": true
          }
        ],
        "x-code-samples": [
          {
            "lang": "Shell",
            "source": "onezone-rest-cli createSpaceGroupToken id=bI4QaPBog_0kCdUddUIsgAxi5I803ZirkUfdiWDd4W3"
          }
        ]
      }
    },
    "/spaces/{id}/groups/{gid}": {
      "get": {
        "operationId": "get_space_group",
        "tags": [
          "Space"
        ],
        "x-onedata-service": "onezone",
        "x-onedata-module": "spaces",
        "x-onedata-resource": "group",
        "x-onedata-method": "space_logic:get_group",
        "summary": "Get group details",
        "x-bash-codegen-description": "Returns details about a specific group in a space.\n\nThis operation requires `space_view_data` privilege.\nFor administrators who do not have to be members of this space,\n`oz_spaces_list_groups` privilege is required.\n",
        "description": "Returns details about a specific group in a space.\n\nThis operation requires `space_view_data` privilege.\nFor administrators who do not have to be members of this space,\n`oz_spaces_list_groups` privilege is required.\n\n***Example cURL requests***\n\n**Get space group details**\n```bash\ncurl -u username:password -X GET \\\nhttps://$HOST:8443/api/v3/onezone/spaces/9ueUeoZA6KXxNgzlvqmmrbzqE_BQiaHEEDC21sY1Kuc/groups/T5x_HhFYOnILOCUf9OqgExw00RwaU2MXT5122oWk_sM\n\n{\n  \"groupId\": \"T5x_HhFYOnILOCUf9OqgExw00RwaU2MXT5122oWk_sM\",\n  \"name\": \"new_groupX\",\n  \"type\": \"role\"\n}\n```\n",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Details of a specific group in a space.",
            "schema": {
              "$ref": "#/definitions/Group"
            }
          },
          "400": {
            "description": "Invalid request.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "401": {
            "description": "Authentication error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "Authorization error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Resource not found.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server Error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Space ID.",
            "type": "string",
            "required": true
          },
          {
            "name": "gid",
            "in": "path",
            "description": "Group ID.",
            "type": "string",
            "required": true
          }
        ],
        "x-code-samples": [
          {
            "lang": "Shell",
            "source": "onezone-rest-cli getSpaceGroup id=bI4QaPBog_0kCdUddUIsgAxi5I803ZirkUfdiWDd4W3 gid=T5x_HhFYOnILOCUf9OqgExw00RwaU2MXT5122oWk_sM"
          }
        ]
      },
      "put": {
        "operationId": "add_group_to_space",
        "tags": [
          "Space"
        ],
        "x-onedata-service": "onezone",
        "x-onedata-module": "spaces",
        "x-onedata-resource": "groups",
        "x-onedata-method": "space_logic:add_group",
        "summary": "Add group to space",
        "x-bash-codegen-description": "Allows to add a group to any space.\n\nThis operation can be invoked by system administrators only\nand requires `add_member_to_space` privilege.\n",
        "description": "Allows to add a group to any space. Optional privileges\ncan be passed in the request body, otherwise default\nprivileges will be set for group in this space.\n\nThis operation can be invoked by system administrators only\nand requires `add_member_to_space` privilege.\n\n***Example cURL requests***\n\n**Add group to space**\n```bash\ncurl -u username:password  -H \"Content-type: application/json\" -X PUT \\\n https://$HOST:8443/api/v3/onezone/spaces/9ueUeoZA6KXxNgzlvqmmrbzqE_BQiaHEEDC21sY1Kuc/groups/qE_BQiaHEEDC21sY1Kuc9ueUeoZA6KXxNgzlvqmmrbz\n```\n",
        "consumes": [
          "application/json"
        ],
        "responses": {
          "204": {
            "description": "The group was added to the space."
          },
          "400": {
            "description": "Invalid request.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "401": {
            "description": "Authentication error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "Authorization error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Resource not found.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server Error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Space ID.",
            "type": "string",
            "required": true
          },
          {
            "name": "gid",
            "in": "path",
            "description": "Group ID.",
            "type": "string",
            "required": true
          },
          {
            "name": "groupId",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/SpacePrivileges"
            },
            "required": false
          }
        ],
        "x-code-samples": [
          {
            "lang": "Shell",
            "source": "onezone-rest-cli addGroupToSpace id=bI4QaPBog_0kCdUddUIsgAxi5I803ZirkUfdiWDd4W3 gid=T5x_HhFYOnILOCUf9OqgExw00RwaU2MXT5122oWk_sM"
          }
        ]
      },
      "delete": {
        "operationId": "remove_space_group",
        "tags": [
          "Space"
        ],
        "x-onedata-service": "onezone",
        "x-onedata-module": "spaces",
        "x-onedata-resource": "group",
        "x-onedata-method": "space_logic:remove_group",
        "summary": "Remove group from space",
        "x-bash-codegen-description": "Removes a specific group from space.\n\nFor regular users, who belong to this space it requires\n`space_remove_group` privilege to remove a group from this space.\n\nFor administrators, who are not members of this space,\n`remove_member_from_space` privilege is required.\n\nThis operation requires `space_remove_group` privilege or\n`remove_member_from_space` privilege.\n",
        "description": "Removes a specific group from space.\n\nFor regular users, who belong to this space it requires\n`space_remove_group` privilege to remove a group from this space.\n\nFor administrators, who are not members of this space,\n`remove_member_from_space` privilege is required.\n\n***Example cURL requests***\n\n**Get space group details**\n```bash\ncurl -u username:password -X DELETE \\\nhttps://$HOST:8443/api/v3/onezone/spaces/HUUPOMNGzikwiLXHaFYcE8-qxDtKmt1Gb3v5OnF9UNE/groups/HwUpk8jrwxKOe45uzLFX2GVC8lKEasj4q253sptVqF8\n```\n",
        "responses": {
          "202": {
            "description": "A group will be removed from space."
          },
          "400": {
            "description": "Invalid request.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "401": {
            "description": "Authentication error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "Authorization error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Resource not found.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server Error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Space ID.",
            "type": "string",
            "required": true
          },
          {
            "name": "gid",
            "in": "path",
            "description": "Group ID.",
            "type": "string",
            "required": true
          }
        ],
        "x-code-samples": [
          {
            "lang": "Shell",
            "source": "onezone-rest-cli removeSpaceGroup id=bI4QaPBog_0kCdUddUIsgAxi5I803ZirkUfdiWDd4W3 gid=T5x_HhFYOnILOCUf9OqgExw00RwaU2MXT5122oWk_sM"
          }
        ]
      }
    },
    "/spaces/{id}/groups/{gid}/privileges": {
      "get": {
        "operationId": "list_space_group_privileges",
        "tags": [
          "Space"
        ],
        "x-onedata-service": "onezone",
        "x-onedata-module": "spaces",
        "x-onedata-resource": "gpriv",
        "x-onedata-method": "space_logic:get_privileges",
        "summary": "List group privileges to space",
        "x-bash-codegen-description": "Returns privileges for a group to a specific space.\n\nThis operation requires `space_view_data` privilege.\n",
        "description": "Returns privileges for a group to a specific space.\n\nThis operation requires `space_view_data` privilege.\n\n***Example cURL requests***\n\n**Get space group privileges**\n```bash\ncurl -u admin:password -X GET \\\nhttps://$HOST:8443/api/v3/onezone/spaces/9ueUeoZA6KXxNgzlvqmmrbzqE_BQiaHEEDC21sY1Kuc/groups/T5x_HhFYOnILOCUf9OqgExw00RwaU2MXT5122oWk_sM/privileges\n\n{\n  \"privileges\": [\n    \"space_view_data\"\n  ]\n}\n```\n",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "The list of group privileges in a space.",
            "schema": {
              "$ref": "#/definitions/SpacePrivileges"
            }
          },
          "400": {
            "description": "Invalid request.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "401": {
            "description": "Authentication error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "Authorization error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Resource not found.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server Error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Space ID.",
            "type": "string",
            "required": true
          },
          {
            "name": "gid",
            "in": "path",
            "description": "Group ID.",
            "type": "string",
            "required": true
          }
        ],
        "x-code-samples": [
          {
            "lang": "Shell",
            "source": "onezone-rest-cli listSpaceGroupPrivileges id=bI4QaPBog_0kCdUddUIsgAxi5I803ZirkUfdiWDd4W3"
          }
        ]
      },
      "patch": {
        "operationId": "set_space_group_privileges",
        "tags": [
          "Space"
        ],
        "x-onedata-service": "onezone",
        "x-onedata-module": "spaces",
        "x-onedata-resource": "upriv",
        "x-onedata-method": "space_logic:set_privileges",
        "summary": "Set group privileges to space",
        "x-bash-codegen-description": "Sets new privileges for a group to a specific space.\n\nThis operation requires `space_set_privileges` privilege.\n",
        "description": "Sets new privileges for a group to a specific space.\n\nThis operation requires `space_set_privileges` privilege.\n\n***Example cURL requests***\n\n**Set space group privileges**\n```bash\ncurl -u username:password  -H \"Content-type: application/json\" \\\n-X PATCH -d '{\"privileges\": [\"space_change_data\"]}' \\\nhttps://$HOST:8443/api/v3/onezone/spaces/9ueUeoZA6KXxNgzlvqmmrbzqE_BQiaHEEDC21sY1Kuc/groups/T5x_HhFYOnILOCUf9OqgExw00RwaU2MXT5122oWk_sM/privileges\n```\n",
        "responses": {
          "204": {
            "description": "The group privileges have been updated."
          },
          "400": {
            "description": "Invalid request.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "401": {
            "description": "Authentication error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "Authorization error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Resource not found.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server Error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Space ID.",
            "type": "string",
            "required": true
          },
          {
            "name": "gid",
            "in": "path",
            "description": "Group ID.",
            "type": "string",
            "required": true
          },
          {
            "name": "data",
            "in": "body",
            "description": "Space privileges.",
            "schema": {
              "$ref": "#/definitions/SpacePrivileges"
            }
          }
        ],
        "x-code-samples": [
          {
            "lang": "Shell",
            "source": "echo '{\"privileges\": [\"space_change_data\"]}' | onezone-rest-cli setSpaceGroupPrivileges id=SPACE_ID gid=GROUP_ID -"
          }
        ]
      }
    },
    "/spaces/{id}/effective_groups": {
      "get": {
        "operationId": "list_effective_space_groups",
        "tags": [
          "Space"
        ],
        "x-onedata-service": "onezone",
        "x-onedata-module": "spaces",
        "x-onedata-resource": "groups",
        "x-onedata-method": "space_logic:get_groups",
        "summary": "List effective space groups",
        "x-bash-codegen-description": "Returns the effective list of groups belonging to a specific space.\n\nIf called by user who is not member of the space, requires `space_view_data`\nprivilege.\n",
        "description": "Returns the effective list of groups belonging to a specific space.\n\nIf called by user who is not member of the space, requires `space_view_data`\nprivilege.\n\n***Example cURL requests***\n\n**Get space effective groups**\n```bash\ncurl -u username:password -X GET \\\nhttps://$HOST:8443/api/v3/onezone/spaces/56ID6lRxcbz4OEbrr7vPI52UA7E6WwkqQ6bJCtW5PLE/effective_groups\n\n{\n  \"groups\": [\n    \"T5x_HhFYOnILOCUf9OqgExw00RwaU2MXT5122oWk_sM\",\n    \"e3piG9yg9877lagR7aHayk73te9gAMXxQvjBycwvnaow\"\n  ]\n}\n```\n",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "The list of effective group ID's that belong to a specific space.",
            "schema": {
              "$ref": "#/definitions/Groups"
            }
          },
          "400": {
            "description": "Invalid request.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "401": {
            "description": "Authentication error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "Authorization error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Resource not found.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server Error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Space ID.",
            "type": "string",
            "required": true
          }
        ],
        "x-code-samples": [
          {
            "lang": "Shell",
            "source": "onezone-rest-cli listEffectiveSpaceGroups id=bI4QaPBog_0kCdUddUIsgAxi5I803ZirkUfdiWDd4W3"
          }
        ]
      }
    },
    "/spaces/{id}/effective_groups/{gid}": {
      "get": {
        "operationId": "get_effective_space_group",
        "tags": [
          "Space"
        ],
        "x-onedata-service": "onezone",
        "x-onedata-module": "spaces",
        "x-onedata-resource": "group",
        "x-onedata-method": "space_logic:get_group",
        "summary": "Get effective space group details",
        "x-bash-codegen-description": "Returns details about a specific effective group in a space.\n\nThis operation requires `space_view_data` privilege.\n",
        "description": "Returns details about a specific effective group in a space.\n\nThis operation requires `space_view_data` privilege.\n\n***Example cURL requests***\n\n**Get effective space group details**\n```bash\ncurl -u username:password -X GET \\\nhttps://$HOST:8443/api/v3/onezone/spaces/9ueUeoZA6KXxNgzlvqmmrbzqE_BQiaHEEDC21sY1Kuc/effective_groups/T5x_HhFYOnILOCUf9OqgExw00RwaU2MXT5122oWk_sM\n\n{\n  \"groupId\": \"T5x_HhFYOnILOCUf9OqgExw00RwaU2MXT5122oWk_sM\",\n  \"name\": \"new_groupX\",\n  \"type\": \"role\"\n}\n```\n",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Details of a specific group in a space.",
            "schema": {
              "$ref": "#/definitions/Group"
            }
          },
          "400": {
            "description": "Invalid request.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "401": {
            "description": "Authentication error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "Authorization error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Resource not found.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server Error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Space ID.",
            "type": "string",
            "required": true
          },
          {
            "name": "gid",
            "in": "path",
            "description": "Group ID.",
            "type": "string",
            "required": true
          }
        ],
        "x-code-samples": [
          {
            "lang": "Shell",
            "source": "onezone-rest-cli getEffectiveSpaceGroup id=bI4QaPBog_0kCdUddUIsgAxi5I803ZirkUfdiWDd4W3 gid=T5x_HhFYOnILOCUf9OqgExw00RwaU2MXT5122oWk_sM"
          }
        ]
      }
    },
    "/spaces/{id}/effective_groups/{gid}/privileges": {
      "get": {
        "operationId": "list_effective_space_group_privileges",
        "tags": [
          "Space"
        ],
        "x-onedata-service": "onezone",
        "x-onedata-module": "spaces",
        "x-onedata-resource": "gpriv",
        "x-onedata-method": "space_logic:get_privileges",
        "summary": "List effective group privileges to space",
        "x-bash-codegen-description": "Returns privileges for an effective group to a specific space.\n\nThis operation requires `space_view_data` privilege.\n",
        "description": "Returns privileges for an effective group to a specific space.\n\nThis operation requires `space_view_data` privilege.\n\n***Example cURL requests***\n\n**Get effective space group privileges**\n```bash\ncurl -u admin:password -X GET \\\nhttps://$HOST:8443/api/v3/onezone/spaces/9ueUeoZA6KXxNgzlvqmmrbzqE_BQiaHEEDC21sY1Kuc/effective_groups/T5x_HhFYOnILOCUf9OqgExw00RwaU2MXT5122oWk_sM/privileges\n\n{\n  \"privileges\": [\n    \"space_view_data\"\n  ]\n}\n```\n",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "The list of group privileges in a space.",
            "schema": {
              "$ref": "#/definitions/SpacePrivileges"
            }
          },
          "400": {
            "description": "Invalid request.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "401": {
            "description": "Authentication error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "Authorization error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Resource not found.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server Error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Space ID.",
            "type": "string",
            "required": true
          },
          {
            "name": "gid",
            "in": "path",
            "description": "Group ID.",
            "type": "string",
            "required": true
          }
        ],
        "x-code-samples": [
          {
            "lang": "Shell",
            "source": "onezone-rest-cli listEffectiveSpaceGroupPrivileges id=bI4QaPBog_0kCdUddUIsgAxi5I803ZirkUfdiWDd4W3"
          }
        ]
      }
    },
    "/spaces/{id}/shares": {
      "get": {
        "operationId": "list_space_shares",
        "tags": [
          "Space"
        ],
        "x-onedata-service": "onezone",
        "x-onedata-module": "spaces",
        "x-onedata-resource": "shares",
        "x-onedata-method": "space_logic:get_shares",
        "summary": "List space shares",
        "x-bash-codegen-description": "Returns the list of shares from specific space.\n",
        "description": "Returns the list of shares from specific space.\n\n***Example cURL requests***\n\n**List space shares**\n```bash\ncurl -u admin:password -X GET \\\nhttps://$HOST:8443/api/v3/onezone/spaces/9ueUeoZA6KXxNgzlvqmmrbzqE_BQiaHEEDC21sY1Kuc/shares\n\n{\n  \"shares\": [\n    \"MDAxNmxvYZjUGlIcGkweGZta1ZOdEp00eUNINVNvR2001Wl\"\n  ]\n}\n```\n",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "The list of all share ID's that have been created in specific space.",
            "schema": {
              "$ref": "#/definitions/Shares"
            }
          },
          "400": {
            "description": "Invalid request.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "401": {
            "description": "Authentication error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "Authorization error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Resource not found.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server Error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Space ID.",
            "type": "string",
            "required": true
          }
        ],
        "x-code-samples": [
          {
            "lang": "Shell",
            "source": "onezone-rest-cli listSpaceShares id=bI4QaPBog_0kCdUddUIsgAxi5I803ZirkUfdiWDd4W3"
          }
        ]
      }
    },
    "/spaces/{id}/shares/{sid}": {
      "get": {
        "operationId": "get_space_share",
        "tags": [
          "Space"
        ],
        "x-onedata-service": "onezone",
        "x-onedata-module": "spaces",
        "x-onedata-resource": "shares",
        "x-onedata-method": "space_logic:create_share",
        "summary": "Get space share",
        "x-bash-codegen-description": "Get share from specific space.\n\nThe `rootFileId` is not an actual file or folder ID, but\nhas to be generated by Oneprovider first as a file share Id.\n",
        "description": "Get share from specific space.\n\nThe `rootFileId` is not an actual file or folder ID, but\nhas to be generated by Oneprovider first as a file share Id.\n\n***Example cURL requests***\n\n**Add group to space**\n```bash\ncurl -u username:password -H \"Content-type: application/json\" -X GET \\\nhttps://$HOST:8443/api/v3/onezone/spaces/9ueUeoZA6KXxNgzlvqmmrbzqE_BQiaHEEDC21sY1Kuc/shares/A6KXxNgzlvqmmrbzqE_BQiammrbzqE_BQiaHEE\n\n{\n  \"shareId\": \"8asd89asdlbKJSBD79a8sdkLKJH8asdkjasd8989\",\n  \"name\": \"MyNewShare\",\n  \"publicUrl\": \"https://onedata.org/shares/ASDLKJH8asdkjasd89898asd89asdlbKJSBDikjab89-asdmASD\",\n  \"rootFileId\": \"ASDkjlkkasdjoiwnafldnacbaasd8879a8sdkjb\",\n  \"spaceId\": \"9ueUeoZA6KXxNgzlvqmmrbzqE_BQiaHEEDC21sY1Kuc\"\n}\n```\n",
        "consumes": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "The shares was successfully created.",
            "schema": {
              "$ref": "#/definitions/Share"
            }
          },
          "400": {
            "description": "Invalid request.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "401": {
            "description": "Authentication error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "Authorization error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Resource not found.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server Error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Space ID.",
            "type": "string",
            "required": true
          },
          {
            "name": "sid",
            "in": "path",
            "description": "Share ID.",
            "type": "string",
            "required": true
          }
        ],
        "x-code-samples": [
          {
            "lang": "Shell",
            "source": "onezone-rest-cli getSpaceShare id=bI4QaPBog_0kCdUddUIsgAxi5I803ZirkUfdiWDd4W3 sid=9ueUeoZA6KXxNgzlvqmmrbzqE_BQiaHEEDC21sY1Kuc"
          }
        ]
      }
    },
    "/spaces/{id}/providers": {
      "get": {
        "operationId": "list_space_providers",
        "tags": [
          "Space"
        ],
        "x-onedata-service": "onezone",
        "x-onedata-module": "spaces",
        "x-onedata-resource": "providers",
        "x-onedata-method": "space_logic:get_providers",
        "summary": "List space providers",
        "x-bash-codegen-description": "Returns the list of providers supporting specific space.\n\nFor users who are members of space it requires `space_view_data`.\n\nFor administrators who do not have to be members of this space,\n`list_providers_of_space` privilege is required.\n\nThis operation requires `list_providers_of_space` privilege.\n",
        "description": "Returns the list of providers supporting specific space.\n\nFor users who are members of space it requires `space_view_data`.\n\nFor administrators who do not have to be members of this space,\n`list_providers_of_space` privilege is required.\n\n***Example cURL requests***\n\n**Get space support token**\n```bash\ncurl -u admin:password -X GET \\\nhttps://$HOST:8443/api/v3/onezone/spaces/9ueUeoZA6KXxNgzlvqmmrbzqE_BQiaHEEDC21sY1Kuc/providers\n\n{\n  \"providers\": [\n    \"MDAxNmxvYZjUGlIcGkweGZta1ZOdEp00eUNINVNvR2001Wl\"\n  ]\n}\n```\n",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "The list of all provider ID's that support a specific space.",
            "schema": {
              "$ref": "#/definitions/Providers"
            }
          },
          "400": {
            "description": "Invalid request.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "401": {
            "description": "Authentication error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "Authorization error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Resource not found.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server Error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Space ID.",
            "type": "string",
            "required": true
          }
        ],
        "x-code-samples": [
          {
            "lang": "Shell",
            "source": "onezone-rest-cli listSpaceProviders id=bI4QaPBog_0kCdUddUIsgAxi5I803ZirkUfdiWDd4W3"
          }
        ]
      }
    },
    "/spaces/{id}/providers/token": {
      "post": {
        "operationId": "create_space_support_token",
        "tags": [
          "Space"
        ],
        "x-onedata-service": "onezone",
        "x-onedata-module": "spaces",
        "x-onedata-resource": "pinvite",
        "x-onedata-method": "token_logic:create",
        "summary": "Create space support token",
        "x-bash-codegen-description": "Creates a token which can be submitted to a selected provider in order to\nadd storage support for the space.\n\nThis operation requires `space_add_provider` privilege.\n",
        "description": "Creates a token which can be submitted to a selected provider in order to\nadd storage support for the space.\n\nThis operation requires `space_add_provider` privilege.\n\n***Example cURL requests***\n\n**Create space support token**\n```bash\ncurl -u admin:password -X POST \\\nhttps://$HOST:8443/api/v3/onezone/spaces/9ueUeoZA6KXxNgzlvqmmrbzqE_BQiaHEEDC21sY1Kuc/providers/token\n\n{\n  \"token\": \"MDAxNmxvY2F00aW9uIHJlZ2lzdHJ5CjAwM2JpZGVudGlmaWVyIHZjUGlIcGkweGZta1ZOdEp00eUNINVNvR2001Wl\"\n}\n```\n",
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "The token for getting space storage support from a provider.",
            "schema": {
              "$ref": "#/definitions/SpaceSupportToken"
            }
          },
          "400": {
            "description": "Invalid request.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "401": {
            "description": "Authentication error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "Authorization error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Resource not found.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server Error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Space ID.",
            "type": "string",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "description": "Token parameters.",
            "schema": {
              "type": "string"
            },
            "required": false
          }
        ],
        "x-code-samples": [
          {
            "lang": "Shell",
            "source": "onezone-rest-cli createSpaceSupportToken id=bI4QaPBog_0kCdUddUIsgAxi5I803ZirkUfdiWDd4W3"
          }
        ]
      }
    },
    "/spaces/{id}/providers/{pid}": {
      "get": {
        "operationId": "get_space_provider",
        "tags": [
          "Space"
        ],
        "x-onedata-service": "onezone",
        "x-onedata-module": "spaces",
        "x-onedata-resource": "provider",
        "x-onedata-method": "space_logic:get_provider",
        "summary": "Get space provider details",
        "x-bash-codegen-description": "Returns details about a specific provider supporting the space.\n\nFor users who are members of space it requires `space_view_data`.\nFor administrators who do not have to be members of this space,\n`list_providers_of_space` privilege is required.\n\nThis operation requires `list_providers_of_space` privilege.\n",
        "description": "Returns details about a specific provider supporting the space.\n\nFor users who are members of space it requires `space_view_data`.\nFor administrators who do not have to be members of this space,\n`list_providers_of_space` privilege is required.\n\n***Example cURL requests***\n\n**Get space provider details**\n```bash\ncurl -u username:password -X GET \\\nhttps://$HOST:8443/api/v3/onezone/spaces/IkHBv8CoAFm5FCswhAJynbFU4fj26yiE1lhpK3p-0Y8/providers/H8ez0CwDZ7JMYRWn1ipmBpgJHPXzIXj0-upGkf9tk\n\n{\n  \"providerId\": \"H8ez0CwDZ7JMYRWn1ipmBpgJHPXzIXj0-upGkf9tk\",\n  \"name\": \"example\",\n  \"urls\": [\n    \"195.216.97.151\"\n  ],\n  \"redirectionPoint\": \"https://195.216.97.151\",\n  \"latitude\": 50.068968,\n  \"longitude\": 19.909444\n}\n```\n",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Details about a specific provider supporting a space.",
            "schema": {
              "$ref": "#/definitions/ProviderDetails"
            }
          },
          "400": {
            "description": "Invalid request.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "401": {
            "description": "Authentication error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "Authorization error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Resource not found.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server Error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Space ID.",
            "type": "string",
            "required": true
          },
          {
            "name": "pid",
            "in": "path",
            "description": "Provider ID.",
            "type": "string",
            "required": true
          }
        ],
        "x-code-samples": [
          {
            "lang": "Shell",
            "source": "onezone-rest-cli getSpaceProvider id=bI4QaPBog_0kCdUddUIsgAxi5I803ZirkUfdiWDd4W3 pid=T5x_HhFYOnILOCUf9OqgExw00RwaU2MXT5122oWk_sM"
          }
        ]
      },
      "delete": {
        "operationId": "remove_provider_supporting_space",
        "tags": [
          "Space"
        ],
        "x-onedata-service": "onezone",
        "x-onedata-module": "spaces",
        "x-onedata-resource": "provider",
        "x-onedata-method": "space_logic:remove_provider",
        "summary": "Remove space support",
        "x-bash-codegen-description": "Removes support from provider for a specific space.\n\nThis operation requires `space_remove_provider` privilege.\n",
        "description": "Removes support from provider for a specific space.\n\nThis operation requires `space_remove_provider` privilege.\n\n***Example cURL requests***\n\n**Remove space support**\n```bash\ncurl -u username:password -X DELETE \\\nhttps://$HOST:8443/api/v3/onezone/spaces/IkHBv8CoAFm5FCswhAJynbFU4fj26yiE1lhpK3p-0Y8/providers/H8ez0CwDZ7JMYRWn1ipmBpgJHPXzIXj0-upGkf9tk\n```\n",
        "responses": {
          "202": {
            "description": "A space is no longer supported by this provider."
          },
          "400": {
            "description": "Invalid request.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "401": {
            "description": "Authentication error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "Authorization error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Resource not found.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server Error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Space ID.",
            "type": "string",
            "required": true
          },
          {
            "name": "pid",
            "in": "path",
            "description": "Provider ID.",
            "type": "string",
            "required": true
          }
        ],
        "x-code-samples": [
          {
            "lang": "Shell",
            "source": "onezone-rest-cli removeProviderSupportingSpace id=bI4QaPBog_0kCdUddUIsgAxi5I803ZirkUfdiWDd4W3 pid=T5x_HhFYOnILOCUf9OqgExw00RwaU2MXT5122oWk_sM"
          }
        ]
      }
    },
    "/shares": {
      "get": {
        "operationId": "list_shares",
        "tags": [
          "Space"
        ],
        "x-onedata-service": "onezone",
        "x-onedata-module": "spaces",
        "x-onedata-resource": "share",
        "x-onedata-method": "space_logic:list_shares",
        "summary": "List all shares",
        "x-bash-codegen-description": "Returns the list of shares.\n\nThis operation requires administrator privilege `oz_shares_list`.\n",
        "description": "Returns the list of shares.\n\nThis operation requires administrator privilege `oz_shares_list`.\n\n***Example cURL requests***\n\n**Get shares**\n```bash\ncurl -u admin:password -X GET https://$HOST:8443/api/v3/onezone/shares\n\n{\n  \"shares: [\n    \"KLAJSHDKLJAHASJKDHAJKSDH\",\n    \"LKJASHDKJASDHLKJAHSDAKLS\",\n  ]\n}\n```\n",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "The list of shares.",
            "schema": {
              "$ref": "#/definitions/Shares"
            }
          },
          "400": {
            "description": "Invalid request.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "401": {
            "description": "Authentication error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "Authorization error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Resource not found.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server Error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "x-code-samples": [
          {
            "lang": "Shell",
            "source": "onezone-rest-cli listShares"
          }
        ]
      },
      "post": {
        "operationId": "create_share",
        "tags": [
          "Space"
        ],
        "x-onedata-service": "onezone",
        "x-onedata-module": "shares",
        "x-onedata-resource": "share",
        "x-onedata-method": "sharelogic:create",
        "summary": "Create share",
        "x-bash-codegen-description": "Creates a new share.\n\nThis operation requires privilege `space_manage_shares` in space\nin which the share is created.\n",
        "description": "Creates a new share.\n\nThis operation requires privilege `space_manage_shares` in space\nin which the share is created.\n\n***Example cURL requests***\n\n**Create share**\n```bash\ncurl -u username:password -H \"Content-type: application/json\" -X POST -d \\\n'{\"shareId\": \"LKJASD2123saa3\", \"name\": \"NewShare\", \"spaceId\": \"LKJASHDKLJHASDKJHASD876asd\", \"rootFileId\": \"LKAHSDJHuuasDASDasdjjasdAS\"}' \\\nhttps://$HOST:8443/api/v3/onezone/shares\n```\n",
        "consumes": [
          "application/json"
        ],
        "responses": {
          "204": {
            "description": "Share has been updated successfully."
          },
          "400": {
            "description": "Invalid request.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "401": {
            "description": "Authentication error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "Authorization error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Resource not found.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server Error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "description": "Share parameters",
            "schema": {
              "$ref": "#/definitions/ShareUpdateRequest"
            },
            "required": true
          }
        ],
        "x-code-samples": [
          {
            "lang": "Shell",
            "source": "onezone-rest-cli createShare id=bI4QaPBog_0kCdUddUIsgAxi5I803ZirkUfdiWDd4W3 name==Share20 spaceId==ASKJLDHAJKSDH767ASDHJK"
          }
        ]
      }
    },
    "/shares/{id}": {
      "get": {
        "operationId": "get_share",
        "tags": [
          "Space"
        ],
        "x-onedata-service": "onezone",
        "x-onedata-module": "spaces",
        "x-onedata-resource": "share",
        "x-onedata-method": "space_logic:get_share",
        "summary": "Get share details",
        "x-bash-codegen-description": "Returns the details about a specific share.\n",
        "description": "Returns the details about a specific share.\n\n***Example cURL requests***\n\n**Get space details**\n```bash\ncurl -u admin:password -X GET \\\nhttps://$HOST:8443/api/v3/onezone/shares/bI4QaPBog_0kCdUddUIsgAxi5I803ZirkUfdiWDd4W3\n\n{\n  \"shareId\": \"bI4QaPBog_0kCdUddUIsgAxi5I803ZirkUfdiWDd4W3\",\n  \"name\": \"MyShare\",\n  \"publicUrl\": \"http://onedata.org/shares/bI4QaPBog_0kCdUddUIsgAxi5I803ZirkUfdiWDd4W3\",\n  \"rootFileId\": \"I4QaPBog0kCdUPBog0kCdUdd\",\n  \"spaceId\": \"UIsgAxi5I803ZirkUfdiWDd4W3bI4QaPBog_0kCdUdd\",\n  \"handleId\": \"doi:10.15911/MyShares.726855\"\n}\n```\n",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Information about a share.",
            "schema": {
              "$ref": "#/definitions/Share"
            }
          },
          "400": {
            "description": "Invalid request.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "401": {
            "description": "Authentication error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "Authorization error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Resource not found.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server Error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Share ID.",
            "type": "string",
            "required": true
          }
        ],
        "x-code-samples": [
          {
            "lang": "Shell",
            "source": "onezone-rest-cli getShare id=bI4QaPBog_0kCdUddUIsgAxi5I803ZirkUfdiWDd4W3"
          }
        ]
      },
      "patch": {
        "operationId": "modify_share",
        "tags": [
          "Space"
        ],
        "x-onedata-service": "onezone",
        "x-onedata-module": "shares",
        "x-onedata-resource": "share",
        "x-onedata-method": "sharelogic:modify",
        "summary": "Modify share details",
        "x-bash-codegen-description": "Updates the details about a share.\n\nCurrently this operation allows only to change the name of the share.\n\nThis operation requires privilege `space_manage_shares` in space\nin which the share was created.\n",
        "description": "Updates the details about a share.\n\nCurrently this operation allows only to change the name of the share.\n\nThis operation requires privilege `space_manage_shares` in space\nin which the share was created.\n\n***Example cURL requests***\n\n**Change share name**\n```bash\ncurl -u username:password -H \"Content-type: application/json\" \\\n-X PATCH -d '{\"name\": \"NewShareName\"}' \\\nhttps://$HOST:8443/api/v3/onezone/shares/56ID6lRxcbz4OEbrr7vPI52UA7E6WwkqQ6bJCtW5PLE\n```\n",
        "consumes": [
          "application/json"
        ],
        "responses": {
          "204": {
            "description": "Share will be updated."
          },
          "400": {
            "description": "Invalid request.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "401": {
            "description": "Authentication error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "Authorization error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Resource not found.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server Error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Space ID.",
            "type": "string",
            "required": true
          },
          {
            "name": "data",
            "in": "body",
            "description": "Share parameters",
            "schema": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string",
                  "description": "The name of the share."
                }
              }
            },
            "required": true
          }
        ],
        "x-code-samples": [
          {
            "lang": "Shell",
            "source": "onezone-rest-cli modifyShare id=bI4QaPBog_0kCdUddUIsgAxi5I803ZirkUfdiWDd4W3 name==Share20"
          }
        ]
      },
      "delete": {
        "operationId": "remove_share",
        "tags": [
          "Space"
        ],
        "x-onedata-service": "onezone",
        "x-onedata-module": "spaces",
        "x-onedata-resource": "share",
        "x-onedata-method": "space_logic:remove_share",
        "summary": "Remove share",
        "x-bash-codegen-description": "Removes a specific share.\n\nThis operation requires privilege `space_manage_shares` in space\nin which the share was created.\n",
        "description": "Removes a specific share.\n\nThis operation requires privilege `space_manage_shares` in space\nin which the share was created.\n\n***Example cURL requests***\n\n**Remove space**\n```bash\ncurl -u admin:password -X DELETE \\\nhttps://$HOST:8443/api/v3/onezone/shares/803ZirkUfdiWDd4W3bI4QaPBog_0kCdUddUIsgAxi5I\n```\n",
        "responses": {
          "202": {
            "description": "The share will been removed."
          },
          "400": {
            "description": "Invalid request.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "401": {
            "description": "Authentication error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "Authorization error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Resource not found.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server Error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Share ID.",
            "type": "string",
            "required": true
          }
        ],
        "x-code-samples": [
          {
            "lang": "Shell",
            "source": "onezone-rest-cli removeShare id=803ZirkUfdiWDd4W3bI4QaPBog_0kCdUddUIsgAxi5I"
          }
        ]
      }
    },
    "/providers": {
      "get": {
        "operationId": "list_providers",
        "tags": [
          "Provider"
        ],
        "x-onedata-service": "onezone",
        "x-onedata-module": "provider",
        "x-onedata-resource": "providers",
        "x-onedata-method": "provider_logic:get_providers",
        "summary": "List providers",
        "x-bash-codegen-description": "Returns the list of providers registered in the Onezone service.\n\nThis operation requires `list_providers` privilege.\n",
        "description": "Returns the list of providers registered in the Onezone service.\n\nThis operation requires `list_providers` privilege.\n\n***Example cURL requests***\n\n**Get list of providers**\n```bash\ncurl -Ssk -u username:password -X GET  \\\nhttps://$HOST:8443/api/v3/onezone/providers\n\n{\n  \"providers\": [\n    \"WEavnRE7c49EU2sjF0Rz7l_kpiA1IBrwbDxNfH87Plc\"\n  ]\n}\n```\n",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "List of providers Id's.",
            "schema": {
              "$ref": "#/definitions/Providers"
            }
          },
          "400": {
            "description": "Invalid request.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "401": {
            "description": "Authentication error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "Authorization error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Resource not found.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server Error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "x-code-samples": [
          {
            "lang": "Shell",
            "source": "onezone-rest-cli listProviders"
          }
        ]
      }
    },
    "/providers/{pid}": {
      "get": {
        "operationId": "get_provider_details",
        "tags": [
          "Provider"
        ],
        "x-onedata-service": "onezone",
        "x-onedata-module": "provider",
        "x-onedata-resource": "nprovider",
        "x-onedata-method": "provider_logic:get_data",
        "summary": "Get provider details",
        "x-bash-codegen-description": "Returns the information about a specific Oneprovider service, which is\nconnected to the onezone.\n\nIf called by other provider doesn't require any special privileges.\n\nWhen called by a regular user, requires 'list_providers' privilege.\n\nThis operation requires `list_providers` privilege.\n",
        "description": "Returns the information about a specific Oneprovider service, which is\nconnected to the onezone.\n\nIf called by other provider doesn't require any special privileges.\n\nWhen called by a regular user, requires 'list_providers' privilege.\n\nThis operation requires `list_providers` privilege.\n\n***Example cURL requests***\n\n**Get specific provider details**\n```bash\ncurl --cert ozp_cert.pem --key ozp_key.pem -X GET  \\\nhttps://$HOST:8443/api/v3/onezone/providers/WEavnRE7c49EU2sjF0Rz7l_kpiA1IBrwbDxNfH87Plc\n```\n",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Information about a provider.",
            "schema": {
              "$ref": "#/definitions/ProviderDetails"
            }
          },
          "400": {
            "description": "Invalid request.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "401": {
            "description": "Authentication error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "Authorization error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Resource not found.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server Error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "parameters": [
          {
            "name": "pid",
            "in": "path",
            "description": "Provider ID.",
            "type": "string",
            "required": true
          }
        ],
        "x-code-samples": [
          {
            "lang": "Shell",
            "source": "onezone-rest-cli --cert ozp_cert.pem --key ozp_key.pem getProviderDetails pid=WEavnRE7c49EU2sjF0Rz7l_kpiA1IBrwbDxNfH87Plc"
          }
        ]
      },
      "delete": {
        "operationId": "remove_provider",
        "tags": [
          "Provider"
        ],
        "x-onedata-service": "onezone",
        "x-onedata-module": "provider",
        "x-onedata-resource": "nprovider",
        "x-onedata-method": "provider_logic:get_data",
        "summary": "Remove provider",
        "x-bash-codegen-description": "Removes specific Oneprovider from this zone.\n\nIf called by other provider doesn't require any special privileges.\n\nThis operation requires `remove_provider` administrator privilege.\n",
        "description": "Removes specific Oneprovider from this zone.\n\nIf called by other provider doesn't require any special privileges.\n\nThis operation requires `remove_provider` administrator privilege.\n\n***Example cURL requests***\n\n**Get specific provider details**\n```bash\ncurl --cert ozp_cert.pem --key ozp_key.pem -X DELETE  \\\nhttps://$HOST:8443/api/v3/onezone/providers/WEavnRE7c49EU2sjF0Rz7l_kpiA1IBrwbDxNfH87Plc\n```\n",
        "produces": [
          "application/json"
        ],
        "responses": {
          "202": {
            "description": "Provider will be unregistered."
          },
          "400": {
            "description": "Invalid request.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "401": {
            "description": "Authentication error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "Authorization error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Resource not found.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server Error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "parameters": [
          {
            "name": "pid",
            "in": "path",
            "description": "Provider ID.",
            "type": "string",
            "required": true
          }
        ],
        "x-code-samples": [
          {
            "lang": "Shell",
            "source": "onezone-rest-cli --cert ozp_cert.pem --key ozp_key.pem removeProvider pid=WEavnRE7c49EU2sjF0Rz7l_kpiA1IBrwbDxNfH87Plc"
          }
        ]
      }
    },
    "/providers/{pid}/effective_users": {
      "get": {
        "operationId": "list_effective_provider_users",
        "tags": [
          "Provider"
        ],
        "x-onedata-service": "onezone",
        "x-onedata-module": "providers",
        "x-onedata-resource": "users",
        "x-onedata-method": "provider_logic:get_users",
        "summary": "List effective users of provider",
        "x-bash-codegen-description": "Returns the list of effective users of a specific provider.\n\nThis operation requires `list_users_of_provider` privilege.\n",
        "description": "Returns the list of effective users of a specific provider.\n\nThis operation requires `list_users_of_provider` privilege.\n\n***Example cURL requests***\n\n**List effective users of a provider**\n```bash\ncurl -u username:password -X GET  \\\nhttps://$HOST:8443/api/v3/onezone/providers/ASDJKHASDASD5465asdvASDasd/users\n\n{\n  \"users\": [\n    \"ASDKJHKLAJSDHKjhAsdkjh68asdASDlk\",\n    \"JKLAHSDLKHASJKLDH76786ASDHBKJHMa\"\n  ]\n}\n```\n",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "The list of effective user ID's.",
            "schema": {
              "$ref": "#/definitions/Users"
            }
          },
          "400": {
            "description": "Invalid request.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "401": {
            "description": "Authentication error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "Authorization error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Resource not found.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server Error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "parameters": [
          {
            "name": "pid",
            "description": "Provider ID.",
            "type": "string",
            "in": "path",
            "required": true
          }
        ],
        "x-code-samples": [
          {
            "lang": "Shell",
            "source": "onezone-rest-cli listEffectiveProviderUsers pid=AKLSJDHALKJSHD89asdASD12"
          }
        ]
      }
    },
    "/providers/{pid}/effective_users/{uid}": {
      "get": {
        "operationId": "get_effective_provider_user",
        "tags": [
          "Provider"
        ],
        "x-onedata-service": "onezone",
        "x-onedata-module": "providers",
        "x-onedata-resource": "users",
        "x-onedata-method": "provider_logic:get_user",
        "summary": "Get effective user of provider",
        "x-bash-codegen-description": "Returns the details of an effective user of a specific provider.\n\nThis operation requires `list_users_of_provider` privilege.\n",
        "description": "Returns the details of an effective user of a specific provider.\n\nThis operation requires `list_users_of_provider` privilege.\n\n***Example cURL requests***\n\n**Get effective user of a provider**\n```bash\ncurl -u username:password -X GET  \\\nhttps://$HOST:8443/api/v3/onezone/providers/ASDJKHASDASD5465asdvASDasd/effective_users/njOzyvXybAYvki10HXRCeJd_IlLHS4XEklgghmJjDpo\n\n{\n   \"name\" : \"John Doe\",\n   \"alias\" : \"\",\n   \"login\" : \"username\",\n   \"connectedAccounts\" : [],\n   \"userId\" : \"njOzyvXybAYvki10HXRCeJd_IlLHS4XEklgghmJjDpo\",\n   \"emailList\" : []\n}\n```\n",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "The effective user details.",
            "schema": {
              "$ref": "#/definitions/User"
            }
          },
          "400": {
            "description": "Invalid request.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "401": {
            "description": "Authentication error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "Authorization error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Resource not found.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server Error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "parameters": [
          {
            "name": "pid",
            "description": "Provider ID.",
            "type": "string",
            "in": "path",
            "required": true
          },
          {
            "name": "uid",
            "description": "User ID.",
            "type": "string",
            "in": "path",
            "required": true
          }
        ],
        "x-code-samples": [
          {
            "lang": "Shell",
            "source": "onezone-rest-cli getEffectiveProviderUser pid=ASDJKHASDASD5465asdvASDasd uid=KJHAGSDJKHGASJKHDGAKJHSDGKHJASD"
          }
        ]
      }
    },
    "/providers/{pid}/effective_groups": {
      "get": {
        "operationId": "list_effective_provider_groups",
        "tags": [
          "Provider"
        ],
        "x-onedata-service": "onezone",
        "x-onedata-module": "providers",
        "x-onedata-resource": "groups",
        "x-onedata-method": "provider_logic:get_groups",
        "summary": "List effective groups of provider",
        "x-bash-codegen-description": "Returns the effective list of groups of a specific provider.\n\nThis operation requires `list_groups_of_provider` privilege.\n",
        "description": "Returns the effective list of groups of a specific provider.\n\nThis operation requires `list_groups_of_provider` privilege.\n\n***Example cURL requests***\n\n**List groups of a provider**\n```bash\ncurl -u username:password -X GET  \\\nhttps://$HOST:8443/api/v3/onezone/providers/ASDJKHASDASD5465asdvASDasd/groups\n\n{\n  \"groups\": [\n    \"ASDKJHKLAJSDHKjhAsdkjh68asdASDlk\",\n    \"JKLAHSDLKHASJKLDH76786ASDHBKJHMa\"\n  ]\n}\n```\n",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "The list of group ID's.",
            "schema": {
              "$ref": "#/definitions/Groups"
            }
          },
          "400": {
            "description": "Invalid request.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "401": {
            "description": "Authentication error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "Authorization error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Resource not found.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server Error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "parameters": [
          {
            "name": "pid",
            "description": "Provider ID.",
            "type": "string",
            "in": "path",
            "required": true
          }
        ],
        "x-code-samples": [
          {
            "lang": "Shell",
            "source": "onezone-rest-cli listEffectiveProviderGroups pid=ASKLJDHLAKJSHDASHD76ASDJKL1"
          }
        ]
      }
    },
    "/providers/{pid}/effective_groups/{gid}": {
      "get": {
        "operationId": "get_effective_provider_group",
        "tags": [
          "Provider"
        ],
        "x-onedata-service": "onezone",
        "x-onedata-module": "providers",
        "x-onedata-resource": "users",
        "x-onedata-method": "provider_logic:get_user",
        "summary": "Get group of provider",
        "x-bash-codegen-description": "Returns the details of an effective group of a specific provider.\n\nThis operation requires `list_groups_of_provider` privilege.\n",
        "description": "Returns the details of an effective group of a specific provider.\n\nThis operation requires `list_groups_of_provider` privilege.\n\n***Example cURL requests***\n\n**Get group of a provider**\n```bash\ncurl -u username:password -X GET  \\\nhttps://$HOST:8443/api/v3/onezone/providers/ASDJKHASDASD5465asdvASDasd/groups/KJHAGSDJKHGASJKHDGAKJHSDGKHJASD\n\n{\n  \"groupId\":\"KJHAGSDJKHGASJKHDGAKJHSDGKHJASD\",\n  \"name\":\"new_group\",\n  \"type\":\"role\"\n}\n```\n",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "The group ID.",
            "schema": {
              "$ref": "#/definitions/Group"
            }
          },
          "400": {
            "description": "Invalid request.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "401": {
            "description": "Authentication error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "Authorization error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Resource not found.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server Error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "parameters": [
          {
            "name": "pid",
            "description": "Provider ID.",
            "type": "string",
            "in": "path",
            "required": true
          },
          {
            "name": "gid",
            "description": "Group ID.",
            "type": "string",
            "in": "path",
            "required": true
          }
        ],
        "x-code-samples": [
          {
            "lang": "Shell",
            "source": "onezone-rest-cli getEffectiveProviderGroup pid=ASDJKHASDASD5465asdvASDasd gid=KJHAGSDJKHGASJKHDGAKJHSDGKHJASD"
          }
        ]
      }
    },
    "/providers/{pid}/spaces": {
      "get": {
        "operationId": "list_provider_spaces",
        "tags": [
          "Provider"
        ],
        "x-onedata-service": "onezone",
        "x-onedata-module": "providers",
        "x-onedata-resource": "spaces",
        "x-onedata-method": "provider_logic:get_spaces",
        "summary": "List spaces supported by provider",
        "x-bash-codegen-description": "Returns the list of spaces supported by specific provider.\n\nThis operation requires `list_spaces_of_provider` privilege.\n",
        "description": "Returns the list of spaces supported by specific provider.\n\nThis operation requires `list_spaces_of_provider` privilege.\n\n***Example cURL requests***\n\n**List spaces supported by provider**\n```bash\ncurlsS -u username:password -X GET  \\\nhttps://$HOST:8443/api/v3/onezone/providers/ASDJKHASDASD5465asdvASDasd/spaces\n\n{\n  \"spaces\": [\n    \"ASDKJHKLAJSDHKjhAsdkjh68asdASDlk\",\n    \"JKLAHSDLKHASJKLDH76786ASDHBKJHMa\"\n  ]\n}\n```\n",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "The list of space ID's.",
            "schema": {
              "$ref": "#/definitions/Spaces"
            }
          },
          "400": {
            "description": "Invalid request.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "401": {
            "description": "Authentication error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "Authorization error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Resource not found.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server Error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "parameters": [
          {
            "name": "pid",
            "description": "Provider ID.",
            "type": "string",
            "in": "path",
            "required": true
          }
        ],
        "x-code-samples": [
          {
            "lang": "Shell",
            "source": "onezone-rest-cli listProviderSpaces pid=ASKLDJKAJHSD765-asdAA"
          }
        ]
      }
    },
    "/providers/{pid}/spaces/{sid}": {
      "get": {
        "operationId": "get_provider_space",
        "tags": [
          "Provider"
        ],
        "x-onedata-service": "onezone",
        "x-onedata-module": "providers",
        "x-onedata-resource": "spaces",
        "x-onedata-method": "provider_logic:get_space",
        "summary": "Get space supported by provider",
        "x-bash-codegen-description": "Returns the details of space supported by a specific provider.\n\nThis operation requires `list_spaces_of_provider` privilege.\n",
        "description": "Returns the details of space supported by a specific provider.\n\nThis operation requires `list_spaces_of_provider` privilege.\n\n***Example cURL requests***\n\n**Get space supported by provider**\n```bash\ncurl -u username:password -X GET  \\\nhttps://$HOST:8443/api/v3/onezone/providers/ASDJKHASDASD5465asdvASDasd/spaces/Xnp1JVpWfL8_stHJgct76AFALjRsI0W3rNs1nfMwqnY\n\n{\n   \"providersSupports\" : {\n      \"hxfMCWmquqAIjG1GeG2eZY8qvs8iRIn09HzjCJilnSE\" : 5368709120\n   },\n   \"spaceId\" : \"Xnp1JVpWfL8_stHJgct76AFALjRsI0W3rNs1nfMwqnY\",\n   \"name\" : \"Test\"\n}\n```\n",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "The space details.",
            "schema": {
              "$ref": "#/definitions/Space"
            }
          },
          "400": {
            "description": "Invalid request.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "401": {
            "description": "Authentication error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "Authorization error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Resource not found.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server Error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "parameters": [
          {
            "name": "pid",
            "description": "Provider ID.",
            "type": "string",
            "in": "path",
            "required": true
          },
          {
            "name": "sid",
            "description": "Space ID.",
            "type": "string",
            "in": "path",
            "required": true
          }
        ],
        "x-code-samples": [
          {
            "lang": "Shell",
            "source": "onezone-rest-cli getProviderSpace pid=ASDJKHASDASD5465asdvASDasd sid=KJHAGSDJKHGASJKHDGAKJHSDGKHJASD"
          }
        ]
      }
    },
    "/provider": {
      "get": {
        "operationId": "get_current_provider_details",
        "tags": [
          "Provider"
        ],
        "x-onedata-service": "onezone",
        "x-onedata-module": "provider",
        "x-onedata-resource": "provider",
        "x-onedata-method": "provider_logic:get_data",
        "summary": "Get provider details",
        "x-bash-codegen-description": "Returns information about the Oneprovider that performed the request\n(based on provided Peer Certificate authentication).\n\nThis operation requires peer certificate authentication.\n",
        "description": "Returns information about the Oneprovider that performed the request\n(based on provided Peer Certificate authentication).\n\nThis operation requires peer certificate authentication.\n\n***Example cURL requests***\n\n**Get information about provider**\n```bash\ncurl --cert ozp_cert.pem --key ozp_key.pem \\\nhttps://$HOST:8443/api/v3/onezone/provider\n\n{\n  \"name\": \"example\",\n  \"providerId\": \"H8ez0CwDZ7JMYRWn1ipmBpgJHPXzIXj0123upGkf9tk\",\n  \"urls\": [\n    \"195.216.97.151\"\n  ],\n  \"redirectionPoint\": \"https://195.216.97.151\",\n  \"latitude\": 50.068968,\n  \"longitude\": 19.909444\n}\n```\n",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Returns the information about Oneprovider.",
            "schema": {
              "$ref": "#/definitions/ProviderDetails"
            }
          },
          "400": {
            "description": "Invalid request.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "401": {
            "description": "Authentication error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "Authorization error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Resource not found.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server Error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "x-code-samples": [
          {
            "lang": "Shell",
            "source": "onezone-rest-cli --cert ozp_cert.pem --key ozp_key.pem getCurrentProviderDetails"
          }
        ]
      },
      "post": {
        "operationId": "register_provider",
        "tags": [
          "Provider"
        ],
        "x-onedata-service": "onezone",
        "x-onedata-module": "provider",
        "x-onedata-resource": "provider",
        "x-onedata-method": "provider_logic:create",
        "summary": "Register provider",
        "x-bash-codegen-description": "Registers a Oneprovider in Onezone service.\n\nRequires a valid CSR in the bodyand returns signed certificate that will\nmust used by the Oneprovider for authorization (SSL Peer Certificate).\n\nThis operation has public access.\n",
        "description": "Registers a Oneprovider in Onezone service.\n\nRequires a valid CSR in the body and returns signed certificate that will\nmust used by the Oneprovider for authorization (SSL Peer Certificate).\n\nThis operation has public access.\n",
        "consumes": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Provider registered successfully.",
            "schema": {
              "$ref": "#/definitions/ProviderRegistrationResponse"
            }
          },
          "400": {
            "description": "Invalid request.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "401": {
            "description": "Authentication error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "Authorization error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Resource not found.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server Error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "description": "Provider reqistration request including CSR.",
            "schema": {
              "$ref": "#/definitions/ProviderRegistrationRequest"
            },
            "required": true
          }
        ],
        "x-code-samples": [
          {
            "lang": "Shell",
            "source": "cat registration_request.json | onezone-rest-cli registerProvider -"
          }
        ]
      },
      "patch": {
        "operationId": "modify_provider",
        "tags": [
          "Provider"
        ],
        "x-onedata-service": "onezone",
        "x-onedata-module": "provider",
        "x-onedata-resource": "provider",
        "x-onedata-method": "provider_logic:modify",
        "summary": "Modify provider details",
        "x-bash-codegen-description": "Updates information about the Oneprovider identified by the\npeer certificate used for the request.\n",
        "description": "Updates information about the Oneprovider identified by the\npeer certificate used for the request.\n\n***Example cURL requests***\n\n**Update provider geo location**\n```bash\ncurl --cert ozp_cert.pem --key ozp_key.pem -X PATCH \\\n-d '{\"latitude\": 50.068968,\"longitude\": 20.909444}'  \\\nhttps://$HOST:8443/api/v3/onezone/provider\n```\n",
        "consumes": [
          "application/json"
        ],
        "responses": {
          "204": {
            "description": "Provider details updated successfully."
          },
          "400": {
            "description": "Invalid request.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "401": {
            "description": "Authentication error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "Authorization error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Resource not found.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server Error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "description": "Provider data.",
            "schema": {
              "$ref": "#/definitions/ProviderDetails"
            },
            "required": true
          }
        ],
        "x-code-samples": [
          {
            "lang": "Shell",
            "source": "cat provider_details.json | onezone-rest-cli modifyProvider -"
          }
        ]
      },
      "delete": {
        "operationId": "unregister_provider",
        "tags": [
          "Provider"
        ],
        "x-onedata-service": "onezone",
        "x-onedata-module": "provider",
        "x-onedata-resource": "provider",
        "x-onedata-method": "provider_logic:remove",
        "summary": "Unregister provider",
        "x-bash-codegen-description": "Allows Oneprovider service to unregister from Onezone.\n\nThis operation allows a Oneprovider to unregister from a this Onezone, i.e.\nit can only be invoked by Oneprovider which wants to unregister. It does't\nrequire any parameters, as the provider is identified by the peer\ncertificate used for this connection.\n",
        "description": "Allows Oneprovider service to unregister from Onezone.\n\nThis operation allows a Oneprovider to unregister from a this Onezone, i.e.\nit can only be invoked by Oneprovider which wants to unregister. It does't\nrequire any parameters, as the provider is identified by the peer\ncertificate used for this connection.\n\n***Example cURL requests***\n\n**Unregister provider from Onezone**\n```bash\ncurl --cert ozp_cert.pem --key ozp_key.pem -X DELETE  \\\nhttps://$HOST:8443/api/v3/onezone/provider\n```\n",
        "consumes": [
          "application/json"
        ],
        "responses": {
          "202": {
            "description": "Provider will be unregistered."
          },
          "400": {
            "description": "Invalid request.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "401": {
            "description": "Authentication error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "Authorization error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Resource not found.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server Error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "x-code-samples": [
          {
            "lang": "Shell",
            "source": "onezone-rest-cli unregisterProvider"
          }
        ]
      }
    },
    "/provider/spaces": {
      "get": {
        "operationId": "list_supported_spaces",
        "tags": [
          "Provider"
        ],
        "x-onedata-service": "onezone",
        "x-onedata-module": "provider",
        "x-onedata-resource": "spaces",
        "x-onedata-method": "provider_logic:get_spaces",
        "summary": "List spaces at provider",
        "x-bash-codegen-description": "Returns the list of spaces managed by the Oneprovider that performed the\nrequest.\n\nThis operation requires peer certificate authentication.\n",
        "description": "Returns the list of spaces managed by the Oneprovider that performed the\nrequest.\n\nThis operation requires peer certificate authentication.\n\n***Example cURL requests***\n\n**Get spaces supported by provider**\n```bash\ncurl --key ./certs/ozp_key.pem --cert ./certs/ozp_cert.pem -X GET  \\\nhttps://$HOST:8443/api/v3/onezone/provider/spaces\n\n{\n  \"spaces\": [\n    \"ASDKJHKLAJSDHKjhAsdkjh68asdASDlk\"\n  ]\n}\n```\n",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "The list of space ID's.",
            "schema": {
              "$ref": "#/definitions/Spaces"
            }
          },
          "400": {
            "description": "Invalid request.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "401": {
            "description": "Authentication error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "Authorization error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Resource not found.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server Error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "x-code-samples": [
          {
            "lang": "Shell",
            "source": "onezone-rest-cli listSupportedSpaces"
          }
        ]
      }
    },
    "/provider/spaces/support": {
      "post": {
        "operationId": "provider_space_support",
        "tags": [
          "Provider"
        ],
        "x-onedata-service": "onezone",
        "x-onedata-module": "provider",
        "x-onedata-resource": "ssupport",
        "x-onedata-method": "space_logic:support",
        "summary": "Add space storage support",
        "x-bash-codegen-description": "Adds support for specific space on behalf of the Oneprovider that\nperformed the request. Space support token is required.\n\nThis operation requires peer certificate authentication.\n",
        "description": "Adds support for specific space on behalf of the Oneprovider that\nperformed the request. Space support token is required.\n\nThis operation requires peer certificate authentication.\n\n***Example cURL requests***\n\n**Add support for specific space**\n```bash\ncurl --key ./certs/ozp_key.pem --cert ./certs/ozp_cert.pem -X POST \\\n-d '{\"size\": 1024000, \"token\": \"Ko1SDKLJASHDkjjkjashdkjahsdkk655a8sdkgkasdASD\"}' \\\nhttps://$HOST:8443/api/v3/onezone/provider/spaces/803ZirkUfdiWDd4W3bI4QaPBog_0kCdUddUIsgAxi5I\n```\n",
        "produces": [
          "application/json"
        ],
        "responses": {
          "201": {
            "description": "ID of the supported space in the form /spaces/{id} is returned in the response `Location` header.\n",
            "headers": {
              "Location": {
                "description": "ID of the supported space.",
                "type": "string"
              }
            }
          },
          "400": {
            "description": "Invalid request.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "401": {
            "description": "Authentication error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "Authorization error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Resource not found.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server Error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "parameters": [
          {
            "name": "token",
            "in": "body",
            "description": "The space support token.",
            "schema": {
              "$ref": "#/definitions/SpaceSupportRequest"
            }
          }
        ],
        "x-code-samples": [
          {
            "lang": "Shell",
            "source": "onezone-rest-cli providerSpaceSupport token==WEavnRE7c49EU2sjF0Rz7l_kpiA1IBrwbDxNfH87Plc"
          }
        ]
      }
    },
    "/provider/spaces/{sid}": {
      "get": {
        "operationId": "get_supported_space",
        "tags": [
          "Provider"
        ],
        "x-onedata-service": "onezone",
        "x-onedata-module": "provider",
        "x-onedata-method": "space_logic:get_data",
        "summary": "Get space details by provider",
        "x-bash-codegen-description": "Returns information about a specific space supported by the Oneprovider that\nperformed the request.\n\nThis operation requires peer certificate authentication.\n",
        "description": "Returns information about a specific space supported by the Oneprovider that\nperformed the request.\n\nThis operation requires peer certificate authentication.\n\n***Example cURL requests***\n\n**Get space details**\n```bash\ncurl --key ./certs/ozp_key.pem --cert ./certs/ozp_cert.pem -X GET \\\nhttps://$HOST:8443/api/v3/onezone/provider/spaces/803ZirkUfdiWDd4W3bI4QaPBog_0kCdUddUIsgAxi5I\n\n{\n  \"spaceId\": \"803ZirkUfdiWDd4W3bI4QaPBog_0kCdUddUIsgAxi5I\",\n  \"name\": \"new_space1\",\n  \"providersSupports\": {\n    \"hxfMCWmquqAIjG1GeG2eZY8qvs8iRIn09HzjCJilnSE\" : 5368709120\n  }\n}\n```\n",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Returns the information about a specific space.",
            "schema": {
              "$ref": "#/definitions/Space"
            }
          },
          "400": {
            "description": "Invalid request.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "401": {
            "description": "Authentication error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "Authorization error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Resource not found.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server Error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "parameters": [
          {
            "name": "sid",
            "in": "path",
            "description": "Space ID.",
            "type": "string",
            "required": true
          }
        ],
        "x-code-samples": [
          {
            "lang": "Shell",
            "source": "onezone-rest-cli getSupportedSpace sid=WEavnRE7c49EU2sjF0Rz7l_kpiA1IBrwbDxNfH87Plc"
          }
        ]
      },
      "patch": {
        "operationId": "modify_supported_space",
        "tags": [
          "Provider"
        ],
        "x-onedata-service": "onezone",
        "x-onedata-module": "provider",
        "x-onedata-method": "space_logic:get_data",
        "summary": "Modify supported space",
        "x-bash-codegen-description": "Modifies supported space parameters.\n\nThis operation requires peer certificate authentication.\n",
        "description": "Modifies supported space parameters.\n\nThis operation requires peer certificate authentication.\n\n***Example cURL requests***\n\n**Change supported size**\n```bash\ncurl --key ./certs/ozp_key.pem --cert ./certs/ozp_cert.pem -X PATCH \\\n-d '{\"size\": 1024000}' \\\nhttps://$HOST:8443/api/v3/onezone/provider/spaces/803ZirkUfdiWDd4W3bI4QaPBog_0kCdUddUIsgAxi5I\n```\n",
        "produces": [
          "application/json"
        ],
        "responses": {
          "204": {
            "description": "Space modified successfully."
          },
          "400": {
            "description": "Invalid request.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "401": {
            "description": "Authentication error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "Authorization error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Resource not found.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server Error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "parameters": [
          {
            "name": "sid",
            "in": "path",
            "description": "Space ID.",
            "type": "string",
            "required": true
          }
        ],
        "x-code-samples": [
          {
            "lang": "Shell",
            "source": "onezone-rest-cli modifySupportedSpace sid=WEavnRE7c49EU2sjF0Rz7l_kpiA1IBrwbDxNfH87Plc name==\"New space name\""
          }
        ]
      },
      "delete": {
        "operationId": "remove_space_support",
        "tags": [
          "Provider"
        ],
        "x-onedata-service": "onezone",
        "x-onedata-module": "provider",
        "x-onedata-method": "space_logic:remove_provider",
        "summary": "Remove space support",
        "x-bash-codegen-description": "Removes support for space from the Oneprovider that performed the request.\n\nThis operation requires peer certificate authentication.\n",
        "description": "Removes support for space from the Oneprovider that performed the request.\n\nThis operation requires peer certificate authentication.\n\n***Example cURL requests***\n\n**Revoke space support**\n```bash\ncurl --key ./certs/ozp_key.pem --cert ./certs/ozp_cert.pem -X DELETE \\\nhttps://$HOST:8443/api/v3/onezone/provider/spaces/803ZirkUfdiWDd4W3bI4QaPBog_0kCdUddUIsgAxi5I\n```\n",
        "produces": [
          "application/json"
        ],
        "responses": {
          "202": {
            "description": "Support for space will be revoked."
          },
          "400": {
            "description": "Invalid request.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "401": {
            "description": "Authentication error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "Authorization error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Resource not found.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server Error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "parameters": [
          {
            "name": "sid",
            "in": "path",
            "description": "Space ID.",
            "type": "string",
            "required": true
          }
        ],
        "x-code-samples": [
          {
            "lang": "Shell",
            "source": "onezone-rest-cli removeSpaceSupport sid=WEavnRE7c49EU2sjF0Rz7l_kpiA1IBrwbDxNfH87Plc"
          }
        ]
      }
    },
    "/provider/test/check_my_ip": {
      "get": {
        "operationId": "check_my_ip",
        "tags": [
          "Provider"
        ],
        "x-onedata-service": "onezone",
        "x-onedata-module": "provider",
        "x-onedata-resource": "ip",
        "x-onedata-method": "cowboy_req:peer",
        "summary": "Show client IP address",
        "x-bash-codegen-description": "Returns the IP of the request peer. Will return the external IP (as seen\nby the Onezone).\n\nThis operation has public access.\n",
        "description": "Returns the IP of the request peer. Will return the external IP (as seen\nby the Onezone).\n\nThis operation has public access.\n\n***Example cURL requests***\n\n**Check provider IP**\n```bash\ncurl --tlsv1.2 -X GET https://beta.onedata.org:8443/api/v3/onezone/provider/test/check_my_ip\n```\n",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "The IP of the requesting peer.",
            "schema": {
              "type": "string"
            }
          },
          "400": {
            "description": "Invalid request.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "401": {
            "description": "Authentication error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "Authorization error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Resource not found.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server Error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "x-code-samples": [
          {
            "lang": "Shell",
            "source": "onezone-rest-cli checkMyIp"
          }
        ]
      }
    },
    "/provider/test/check_my_ports": {
      "post": {
        "operationId": "check_my_ports",
        "tags": [
          "Provider"
        ],
        "x-onedata-service": "onezone",
        "x-onedata-module": "provider",
        "x-onedata-resource": "ip",
        "x-onedata-method": "provider_logic:test_connection",
        "summary": "Check ports availability",
        "x-bash-codegen-description": "Checks if all given ports are reachable from Onezone.\n\nThis operation has public access.\n",
        "description": "Checks if all given ports are reachable from Onezone.\n\nThis operation has public access.\n\n***Example cURL requests***\n\n**Check provider ports**\n```bash\ncurl -i --tlsv1.2 -X POST -H 'Content-type: application/json' \\\n-d '[ \"https://provider1.com:80\", \"https://provider1.com:443\" ]' https://$HOST:8443/api/v3/onezone/provider/test/check_my_ports\n```\n",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Returns the list of ports (with URLs) and their status.",
            "schema": {
              "type": "array",
              "items": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "example": [
                [
                  "https://provider1.com:80",
                  "ok"
                ],
                [
                  "https://provider1.com:443",
                  "error"
                ]
              ]
            }
          },
          "400": {
            "description": "Invalid request.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "401": {
            "description": "Authentication error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "Authorization error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Resource not found.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server Error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "parameters": [
          {
            "name": "ports",
            "in": "body",
            "description": "List of ports to check.",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "example": [
                "https://provider1.com:80",
                "https://provider1.com:443"
              ]
            }
          }
        ],
        "x-code-samples": [
          {
            "lang": "Shell",
            "source": "echo '[\"https://provider1.com:80\", \"https://provider1.com:443\"]' | onezone-rest-cli checkMyPorts -"
          }
        ]
      }
    },
    "/handle_services": {
      "get": {
        "operationId": "list_handle_services",
        "tags": [
          "Handle"
        ],
        "x-onedata-service": "onezone",
        "x-onedata-module": "handle_service",
        "x-onedata-resource": "handle_service",
        "x-onedata-method": "handle_logic:get_handle_services",
        "x-onedata-permissions": [
          "list_handle_services"
        ],
        "summary": "List handle services",
        "x-bash-codegen-description": "Returns the list of registered handle services.\n\nThis operation requires `oz_handle_services_list` administrator privilege.\n",
        "description": "Returns the list of registered handle services.\n\nThis operation requires `oz_handle_services_list` administrator privilege.\n\n\n***Example cURL requests***\n\n**Get handle services**\n```bash\ncurl -u username:password -X GET https://$HOST:8443/api/v3/handle_services\n\n{\n  \"handle_services\": [\n    \"SADHLKJhlkASHDLAKSHDLKJHJjLH\",\n    \"LAKSHDLKJHJjLHSADHLKJhlkASHD\"\n  ]\n}\n```\n",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "The list of identifiers of registered handle services.",
            "schema": {
              "$ref": "#/definitions/HandleServices"
            }
          },
          "400": {
            "description": "Invalid request.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "401": {
            "description": "Authentication error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "Authorization error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Resource not found.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server Error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "x-code-samples": [
          {
            "lang": "Shell",
            "source": "onezone-rest-cli getHandleServices"
          }
        ]
      },
      "post": {
        "operationId": "add_handle_service",
        "tags": [
          "Handle"
        ],
        "x-onedata-service": "onezone",
        "x-onedata-module": "handle_service",
        "x-onedata-resource": "handle_service",
        "x-onedata-method": "handle_logic:add_handle_service",
        "x-onedata-permissions": [
          "add_handle_services"
        ],
        "summary": "Add handle service",
        "x-bash-codegen-description": "Allows to register a new handle service.\n\nThis operation requires `oz_handle_services_create` administrator privilege.\n",
        "description": "Allows to register a new handle service.\n\nThis operation requires `oz_handle_services_create` administrator privilege.\n\n***Example cURL requests***\n\n**Add handle services**\n```bash\ncurl -u username:password -X POST  -H \"Content-type: application/json\" \\\n-d '{ ... }' https://$HOST:8443/api/v3/handle_services\n```\n",
        "consumes": [
          "application/json"
        ],
        "responses": {
          "204": {
            "description": "Request successful.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The endpoint of the new handle service resource including the generated GUID.\n"
              }
            }
          },
          "400": {
            "description": "Invalid request.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "401": {
            "description": "Authentication error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "Authorization error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Resource not found.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server Error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "parameters": [
          {
            "name": "handleService",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/HandleService"
            }
          }
        ],
        "x-code-samples": [
          {
            "lang": "Shell",
            "source": "cat hndl_service.json | onezone-rest-cli addHandleService -"
          }
        ]
      }
    },
    "/handle_services/{id}": {
      "get": {
        "operationId": "get_handle_service",
        "tags": [
          "Handle"
        ],
        "x-onedata-service": "onezone",
        "x-onedata-module": "handle_service",
        "x-onedata-resource": "handle_service",
        "x-onedata-method": "handle_logic:get_handle_service",
        "x-onedata-permissions": [
          "view_handle_service"
        ],
        "summary": "Get handle service",
        "x-bash-codegen-description": "Returns the properties of a specific handle service.\n\nThis operation requires `oz_handle_services_list` administrator privilege.\n",
        "description": "Returns the properties of a specific handle service.\n\nThis operation requires `oz_handle_services_list` administrator privilege.\n\n***Example cURL requests***\n\n**Get handle services**\n```bash\ncurl -u username:password -X GET \\\nhttps://$HOST:8443/api/v3/handle_services/SADHLKJhlkASHDLAKSHDLKJHJjLH\n\n{\n    \"handleServiceId\": \"SADHLKJhlkASHDLAKSHDLKJHJjLH\",\n    \"name\": \"MyCommunity Handle service\",\n    \"proxyEndpoint\": \"https://localhost:17000/handle_proxy\",\n    \"serviceProperties\": {\n        \"allowTemplateOverride\": false,\n        \"doiEndpoint\": \"/doi\",\n        \"host\": \"https://mds.test.datacite.org\",\n        \"identifierTemplate\": \"{{space.name}}-{{space.guid}}\",\n        \"mediaEndpoint\": \"/media\",\n        \"metadataEndpoint\": \"/metadata\",\n        \"password\": \"pa$$word\",\n        \"prefix\": 10.5072,\n        \"type\": \"DOI\",\n        \"username\": \"alice\"\n    }\n}\n```\n",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "The details of specific handle service.",
            "schema": {
              "$ref": "#/definitions/HandleService"
            }
          },
          "400": {
            "description": "Invalid request.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "401": {
            "description": "Authentication error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "Authorization error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Resource not found.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server Error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "x-code-samples": [
          {
            "lang": "Shell",
            "source": "onezone-rest-cli getHandleService id=HwUpk8jrwxKOe45uzLFX2GVC8lKEasj4q253sptVqF8"
          }
        ]
      },
      "patch": {
        "operationId": "modify_handle_service",
        "tags": [
          "Handle"
        ],
        "x-onedata-service": "onezone",
        "x-onedata-module": "handle_service",
        "x-onedata-resource": "handle_service",
        "x-onedata-method": "handle_logic:modify_handle_services",
        "x-onedata-permissions": [
          "modify_handle_service"
        ],
        "summary": "Modify handle service",
        "x-bash-codegen-description": "Allows to update a registered handle service.\n\nThis operation requires `modify_handle_service` privilege.\n",
        "description": "Allows to update a registered handle service.\n\nThis operation requires `modify_handle_service` privilege.\n\n***Example cURL requests***\n\n**Modify handle service password**\n```bash\ncurl -u username:password -X PATCH  -H \"Content-type: application/json\" \\\n-d '{\"name\": \"New handle service name\"}' \\\nhttps://$HOST:8443/api/v3/handle_services/LKHASDkkjhASDLHU70ASDn\n```\n",
        "consumes": [
          "application/json"
        ],
        "responses": {
          "204": {
            "description": "Update was successful."
          },
          "400": {
            "description": "Invalid request.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "401": {
            "description": "Authentication error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "Authorization error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Resource not found.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server Error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "handleService",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/HandleServiceUpdate"
            }
          }
        ],
        "x-code-samples": [
          {
            "lang": "Shell",
            "source": "onezone-rest-cli modifyHandleService id=HwUpk8jrwxKOe45uzLFX2GVC8lKEasj4q253sptVqF8 password==\"new_password\" -"
          }
        ]
      },
      "delete": {
        "operationId": "remove_handle_service",
        "tags": [
          "Handle"
        ],
        "x-onedata-service": "onezone",
        "x-onedata-module": "handle_service",
        "x-onedata-resource": "handle_service",
        "x-onedata-method": "handle_logic:delete_handle_services",
        "x-onedata-permissions": [
          "delete_handle_service"
        ],
        "summary": "Unregister handle service",
        "x-bash-codegen-description": "Allows to unregister a registeed handle service.\n\nThis operation requires `delete_handle_service` privilege.\n",
        "description": "Allows to unregister a registeed handle service.\n\nThis operation requires `delete_handle_service` privilege.\n\n***Example cURL requests***\n\n**Unregister handle service**\n```bash\ncurl -u username:password -X DELETE \\\nhttps://$HOST:8443/api/v3/handle_services/LKHASDkkjhASDLHU70ASDn\n```\n",
        "responses": {
          "202": {
            "description": "Handle service will be unregistered."
          },
          "400": {
            "description": "Invalid request.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "401": {
            "description": "Authentication error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "Authorization error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Resource not found.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server Error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "x-code-samples": [
          {
            "lang": "Shell",
            "source": "onezone-rest-cli removeHandleService id=HwUpk8jrwxKOe45uzLFX2GVC8lKEasj4q253sptVqF8"
          }
        ]
      }
    },
    "/handle_services/{id}/users": {
      "get": {
        "operationId": "list_handle_service_users",
        "tags": [
          "Handle"
        ],
        "x-onedata-service": "onezone",
        "x-onedata-module": "handle_service",
        "x-onedata-resource": "handle_service",
        "x-onedata-method": "handle_logic:get_handle_service_users",
        "x-onedata-permissions": [
          "view_handle_service"
        ],
        "summary": "Get handle service users",
        "x-bash-codegen-description": "Returns all users with access to a handle service instance\n\nThis operation requires `view_handle_service` privilege.\n",
        "description": "Returns all users with access to a handle service instance\n\nThis operation requires `view_handle_service` privilege.\n\n***Example cURL requests***\n\n**Get handle service users**\n```bash\ncurl -u username:password -X GET \\\nhttps://$HOST:8443/api/v3/handle_services/SADHLKJhlkASHDLAKSHDLKJHJjLH/users\n\n{\n  \"users\": [\n    \"LKJhlkASHDLAKSHDLKJHJjL\",\n    \"LAKSHDLKJHJjLLKJhlkASHD\"\n  ]\n}\n```\n",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "The list of identifiers of users with access to specific handle service.",
            "schema": {
              "$ref": "#/definitions/Users"
            }
          },
          "400": {
            "description": "Invalid request.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "401": {
            "description": "Authentication error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "Authorization error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Resource not found.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server Error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the handle service.",
            "required": true,
            "type": "string"
          }
        ],
        "x-code-samples": [
          {
            "lang": "Shell",
            "source": "onezone-rest-cli listHandleServiceUsers id=HwUpk8jrwxKOe45uzLFX2GVC8lKEasj4q253sptVqF8"
          }
        ]
      }
    },
    "/handle_services/{id}/users/{uid}": {
      "get": {
        "operationId": "get_handle_service_user",
        "tags": [
          "Handle"
        ],
        "x-onedata-service": "onezone",
        "x-onedata-module": "handle_service",
        "x-onedata-resource": "handle_service",
        "x-onedata-method": "handle_logic:add_handle_service_user",
        "x-onedata-permissions": [
          "get_handle_service"
        ],
        "summary": "Get handle service user",
        "x-bash-codegen-description": "Allows to get a user to a handle service.\n\nThis operation requires `modify_handle_service` privilege.\n",
        "description": "Allows to get a user to a handle service.\n\nThis operation requires `modify_handle_service` privilege.\n\n***Example cURL requests***\n\n**Add handle service user**\n```bash\ncurl -u username:password -X GET \\\nhttps://$HOST:8443/api/v3/handle_services/SADHLKJhlkASHDLAKSHDLKJHJjLH/users/njOzyvXybAYvki10HXRCeJd_IlLHS4XEklgghmJjDpo\n\n{\n   \"name\" : \"John Doe\",\n   \"alias\" : \"\",\n   \"login\" : \"username\",\n   \"connectedAccounts\" : [],\n   \"userId\" : \"njOzyvXybAYvki10HXRCeJd_IlLHS4XEklgghmJjDpo\",\n   \"emailList\" : []\n}\n```\n",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "User added successfully.",
            "schema": {
              "$ref": "#/definitions/User"
            }
          },
          "400": {
            "description": "Invalid request.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "401": {
            "description": "Authentication error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "Authorization error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Resource not found.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server Error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the handle service.",
            "required": true,
            "type": "string"
          },
          {
            "name": "uid",
            "in": "path",
            "description": "The ID of the user to add to handle service.",
            "required": true,
            "type": "string"
          }
        ],
        "x-code-samples": [
          {
            "lang": "Shell",
            "source": "onezone-rest-cli getHandleServiceUser id=HwUpk8jrwxKOe45uzLFX2GVC8lKEasj4q253sptVqF8 uid=hlkASHDLAKSHDLKJHJjLHSADHLKJhlk"
          }
        ]
      },
      "put": {
        "operationId": "add_handle_service_user",
        "tags": [
          "Handle"
        ],
        "x-onedata-service": "onezone",
        "x-onedata-module": "handle_service",
        "x-onedata-resource": "handle_service",
        "x-onedata-method": "handle_logic:add_handle_service_user",
        "x-onedata-permissions": [
          "modify_handle_service"
        ],
        "summary": "Add handle service user",
        "x-bash-codegen-description": "Allows to add a user to a handle service.\n\nThis operation requires `modify_handle_service` privilege.\n",
        "description": "Allows to add a user to a handle service.\n\nThis operation requires `modify_handle_service` privilege.\n\n***Example cURL requests***\n\n**Add handle service user**\n```bash\ncurl -u username:password -X PUT \\\nhttps://$HOST:8443/api/v3/handle_services/SADHLKJhlkASHDLAKSHDLKJHJjLH/users/DLAKSHDLKJHJjLHADHLKJh\n```\n",
        "produces": [
          "application/json"
        ],
        "responses": {
          "204": {
            "description": "User added successfully."
          },
          "400": {
            "description": "Invalid request.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "401": {
            "description": "Authentication error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "Authorization error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Resource not found.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server Error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the handle service.",
            "required": true,
            "type": "string"
          },
          {
            "name": "uid",
            "in": "path",
            "description": "The ID of the user to add to handle service.",
            "required": true,
            "type": "string"
          }
        ],
        "x-code-samples": [
          {
            "lang": "Shell",
            "source": "onezone-rest-cli addHandleServiceUser id=HwUpk8jrwxKOe45uzLFX2GVC8lKEasj4q253sptVqF8 uid=hlkASHDLAKSHDLKJHJjLHSADHLKJhlk"
          }
        ]
      },
      "delete": {
        "operationId": "remove_handle_service_user",
        "tags": [
          "Handle"
        ],
        "x-onedata-service": "onezone",
        "x-onedata-module": "handle_service",
        "x-onedata-resource": "handle_service",
        "x-onedata-method": "handle_logic:remove_handle_service_user",
        "x-onedata-permissions": [
          "modify_handle_service"
        ],
        "summary": "Remove handle service user",
        "x-bash-codegen-description": "Allows to remove a user from access to a handle service.\n\nThis operation requires `modify_handle_service` privilege.\n",
        "description": "Allows to remove a user from access to a handle service.\n\nThis operation requires `modify_handle_service` privilege.\n\n***Example cURL requests***\n\n**Remove handle service user**\n```bash\ncurl -u username:password -X DELETE \\\nhttps://$HOST:8443/api/v3/handle_services/SADHLKJhlkASHDLAKSHDLKJHJjLH/users/DLAKSHDLKJHJjLHADHLKJh\n```\n",
        "responses": {
          "202": {
            "description": "User will be removed from handle service."
          },
          "400": {
            "description": "Invalid request.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "401": {
            "description": "Authentication error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "Authorization error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Resource not found.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server Error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the handle service.",
            "required": true,
            "type": "string"
          },
          {
            "name": "uid",
            "in": "path",
            "description": "The ID of the user to remove from handle service.",
            "required": true,
            "type": "string"
          }
        ],
        "x-code-samples": [
          {
            "lang": "Shell",
            "source": "onezone-rest-cli removeHandleServiceUser id=HwUpk8jrwxKOe45uzLFX2GVC8lKEasj4q253sptVqF8 uid=hlkASHDLAKSHDLKJHJjLHSADHLKJhlk"
          }
        ]
      }
    },
    "/handle_services/{id}/users/{uid}/privileges": {
      "get": {
        "operationId": "get_handle_service_user_privileges",
        "tags": [
          "Handle"
        ],
        "x-onedata-service": "onezone",
        "x-onedata-module": "handle_service",
        "x-onedata-resource": "handle_service",
        "x-onedata-method": "handle_logic:get_handle_service_users",
        "x-onedata-permissions": [
          "view_handle_service"
        ],
        "summary": "List handle service user privileges",
        "x-bash-codegen-description": "Returns user privileges for accessing a handle service instance.\n\nThis operation requires `view_handle_service` privilege.\n",
        "description": "Returns user privileges for accessing a handle service instance.\n\nThis operation requires `view_handle_service` privilege.\n\n***Example cURL requests***\n\n**Get handle service user privileges**\n```bash\ncurl -u username:password -X GET \\\nhttps://$HOST:8443/api/v3/handle_services/SADHLKJhlkASHDLAKSHDLKJHJjLH/users/hlkASHDLAKSHDLKJHJjLHSADHLKJhlk/privileges\n\n{\n  \"privileges\": [\n    \"delete_handle_service\",\n    \"view_handle_service\"\n  ]\n}\n```\n",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "The list of privileges of a user to a specific handle service.",
            "schema": {
              "$ref": "#/definitions/HandleServicePrivileges"
            }
          },
          "400": {
            "description": "Invalid request.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "401": {
            "description": "Authentication error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "Authorization error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Resource not found.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server Error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the handle service.",
            "required": true,
            "type": "string"
          },
          {
            "name": "uid",
            "in": "path",
            "description": "The ID of the user of a handle service.",
            "required": true,
            "type": "string"
          }
        ],
        "x-code-samples": [
          {
            "lang": "Shell",
            "source": "onezone-rest-cli listHandleServiceUserPrivileges id=HwUpk8jrwxKOe45uzLFX2GVC8lKEasj4q253sptVqF8 uid=hlkASHDLAKSHDLKJHJjLHSADHLKJhlk"
          }
        ]
      },
      "patch": {
        "operationId": "set_handle_service_user_privileges",
        "tags": [
          "Handle"
        ],
        "x-onedata-service": "onezone",
        "x-onedata-module": "handle_service",
        "x-onedata-resource": "handle_service",
        "x-onedata-method": "handle_logic:set_handle_service_users",
        "x-onedata-permissions": [
          "modify_handle_service"
        ],
        "summary": "Set handle service user privileges",
        "x-bash-codegen-description": "Sets user privileges for accessing a handle service instance.\n\nThis operation requires `modify_handle_service` privilege.\n",
        "description": "Sets user privileges for accessing a handle service instance.\n\nThis operation requires `modify_handle_service` privilege.\n\n***Example cURL requests***\n\n**Set handle service user privileges**\n```bash\ncurl -u username:password -X PATCH  -H \"Content-type: application/json\" \\\n-d '{\"privileges\": [\"register_handle\"]}' \\\nhttps://$HOST:8443/api/v3/handle_services/SADHLKJhlkASHDLAKSHDLKJHJjLH/users/hlkASHDLAKSHDLKJHJjLHSADHLKJhlk/privileges\n```\n",
        "consumes": [
          "application/json"
        ],
        "responses": {
          "204": {
            "description": "User privileges updated successfully."
          },
          "400": {
            "description": "Invalid request.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "401": {
            "description": "Authentication error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "Authorization error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Resource not found.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server Error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the handle service.",
            "required": true,
            "type": "string"
          },
          {
            "name": "uid",
            "in": "path",
            "description": "The ID of the user of a handle service.",
            "required": true,
            "type": "string"
          },
          {
            "name": "privileges",
            "in": "body",
            "description": "The list of user privileges to specific handle service.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/HandleServicePrivileges"
            }
          }
        ],
        "x-code-samples": [
          {
            "lang": "Shell",
            "source": "echo '{\"privileges\": [\"register_handle\"]}' | onezone-rest-cli setHandleServiceUserPrivileges id=HwUpk8jrwxKOe45uzLFX2GVC8lKEasj4q253sptVqF8 uid=hlkASHDLAKSHDLKJHJjLHSADHLKJhlk -"
          }
        ]
      }
    },
    "/handle_services/{id}/effective_users": {
      "get": {
        "operationId": "list_effective_handle_service_users",
        "tags": [
          "Handle"
        ],
        "x-onedata-service": "onezone",
        "x-onedata-module": "handle_service",
        "x-onedata-resource": "handle_service",
        "x-onedata-method": "handle_logic:get_handle_service_users",
        "x-onedata-permissions": [
          "view_handle_service"
        ],
        "summary": "Get effective handle service users",
        "x-bash-codegen-description": "Returns all users with access to a handle service instance\n\nThis operation requires `view_handle_service` privilege.\n",
        "description": "Returns all users with access to a handle service instance\n\nThis operation requires `view_handle_service` privilege.\n\n***Example cURL requests***\n\n**Get handle service users**\n```bash\ncurl -u username:password -X GET \\\nhttps://$HOST:8443/api/v3/handle_services/SADHLKJhlkASHDLAKSHDLKJHJjLH/effective_users\n\n{\n  \"users\": [\n    \"LKJhlkASHDLAKSHDLKJHJjL\",\n    \"LAKSHDLKJHJjLLKJhlkASHD\"\n  ]\n}\n```\n",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "The list of identifiers of users with access to specific handle service.",
            "schema": {
              "$ref": "#/definitions/Users"
            }
          },
          "400": {
            "description": "Invalid request.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "401": {
            "description": "Authentication error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "Authorization error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Resource not found.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server Error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the handle service.",
            "required": true,
            "type": "string"
          }
        ],
        "x-code-samples": [
          {
            "lang": "Shell",
            "source": "onezone-rest-cli listEffectiveHandleServiceUsers id=HwUpk8jrwxKOe45uzLFX2GVC8lKEasj4q253sptVqF8"
          }
        ]
      }
    },
    "/handle_services/{id}/effective_users/{uid}": {
      "get": {
        "operationId": "get_effective_handle_service_user",
        "tags": [
          "Handle"
        ],
        "x-onedata-service": "onezone",
        "x-onedata-module": "handle_service",
        "x-onedata-resource": "handle_service",
        "x-onedata-method": "handle_logic:add_handle_service_user",
        "x-onedata-permissions": [
          "get_handle_service"
        ],
        "summary": "Get effective handle service user",
        "x-bash-codegen-description": "Allows to get a user to a handle service.\n\nThis operation requires `modify_handle_service` privilege.\n",
        "description": "Allows to get a user to a handle service.\n\nThis operation requires `modify_handle_service` privilege.\n\n***Example cURL requests***\n\n**Get effective handle service user**\n```bash\ncurl -u username:password -X GET \\\nhttps://$HOST:8443/api/v3/handle_services/SADHLKJhlkASHDLAKSHDLKJHJjLH/effective_users/njOzyvXybAYvki10HXRCeJd_IlLHS4XEklgghmJjDpo\n\n{\n   \"name\" : \"John Doe\",\n   \"alias\" : \"\",\n   \"login\" : \"username\",\n   \"connectedAccounts\" : [],\n   \"userId\" : \"njOzyvXybAYvki10HXRCeJd_IlLHS4XEklgghmJjDpo\",\n   \"emailList\" : []\n}\n```\n",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "User added successfully.",
            "schema": {
              "$ref": "#/definitions/User"
            }
          },
          "400": {
            "description": "Invalid request.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "401": {
            "description": "Authentication error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "Authorization error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Resource not found.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server Error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the handle service.",
            "required": true,
            "type": "string"
          },
          {
            "name": "uid",
            "in": "path",
            "description": "The ID of the user to add to handle service.",
            "required": true,
            "type": "string"
          }
        ],
        "x-code-samples": [
          {
            "lang": "Shell",
            "source": "onezone-rest-cli getEffectiveHandleServiceUser id=HwUpk8jrwxKOe45uzLFX2GVC8lKEasj4q253sptVqF8 uid=hlkASHDLAKSHDLKJHJjLHSADHLKJhlk"
          }
        ]
      }
    },
    "/handle_services/{id}/effective_users/{uid}/privileges": {
      "get": {
        "operationId": "list_effective_handle_service_user_privileges",
        "tags": [
          "Handle"
        ],
        "x-onedata-service": "onezone",
        "x-onedata-module": "handle_service",
        "x-onedata-resource": "handle_service",
        "x-onedata-method": "handle_logic:get_handle_service_users",
        "x-onedata-permissions": [
          "view_handle_service"
        ],
        "summary": "List effective handle service user privileges",
        "x-bash-codegen-description": "Returns user privileges for accessing a handle service instance.\n\nThis operation requires `view_handle_service` privilege.\n",
        "description": "Returns user privileges for accessing a handle service instance.\n\nThis operation requires `view_handle_service` privilege.\n\n***Example cURL requests***\n\n**Get effective handle service user privileges**\n```bash\ncurl -u username:password -X GET \\\nhttps://$HOST:8443/api/v3/handle_services/SADHLKJhlkASHDLAKSHDLKJHJjLH/effective_users/hlkASHDLAKSHDLKJHJjLHSADHLKJhlk/privileges\n\n{\n  \"users\": [\n    \"delete_handle_service\",\n    \"view_handle_service\"\n  ]\n}\n```\n",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "The list of privileges of a user to a specific handle service.",
            "schema": {
              "$ref": "#/definitions/HandleServicePrivileges"
            }
          },
          "400": {
            "description": "Invalid request.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "401": {
            "description": "Authentication error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "Authorization error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Resource not found.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server Error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the handle service.",
            "required": true,
            "type": "string"
          },
          {
            "name": "uid",
            "in": "path",
            "description": "The ID of the user of a handle service.",
            "required": true,
            "type": "string"
          }
        ],
        "x-code-samples": [
          {
            "lang": "Shell",
            "source": "onezone-rest-cli listEffectiveHandleServiceUserPrivileges id=HwUpk8jrwxKOe45uzLFX2GVC8lKEasj4q253sptVqF8 uid=hlkASHDLAKSHDLKJHJjLHSADHLKJhlk"
          }
        ]
      }
    },
    "/handle_services/{id}/groups": {
      "get": {
        "operationId": "list_handle_service_groups",
        "tags": [
          "Handle"
        ],
        "x-onedata-service": "onezone",
        "x-onedata-module": "handle_service",
        "x-onedata-resource": "handle_service",
        "x-onedata-method": "handle_logic:get_handle_service_groups",
        "x-onedata-permissions": [
          "view_handle_service"
        ],
        "summary": "List handle service groups",
        "x-bash-codegen-description": "Returns all groups with access to a handle service instance\n\nThis operation requires `view_handle_service` privilege.\n",
        "description": "Returns all groups with access to a handle service instance\n\nThis operation requires `view_handle_service` privilege.\n\n***Example cURL requests***\n\n**Get handle service groups**\n```bash\ncurl -u username:password -X GET \\\nhttps://$HOST:8443/api/v3/handle_services/SADHLKJhlkASHDLAKSHDLKJHJjLH/groups\n\n{\n  \"groups\": [\n    \"LKJhlkASHDLAKSHDLKJHJjL\",\n    \"LAKSHDLKJHJjLLKJhlkASHD\"\n  ]\n}\n```\n",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "The list of identifiers of groups with access to specific handle service.",
            "schema": {
              "$ref": "#/definitions/Groups"
            }
          },
          "400": {
            "description": "Invalid request.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "401": {
            "description": "Authentication error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "Authorization error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Resource not found.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server Error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the handle service.",
            "required": true,
            "type": "string"
          }
        ],
        "x-code-samples": [
          {
            "lang": "Shell",
            "source": "onezone-rest-cli listHandleServiceGroups id=HwUpk8jrwxKOe45uzLFX2GVC8lKEasj4q253sptVqF8"
          }
        ]
      }
    },
    "/handle_services/{id}/groups/{gid}": {
      "get": {
        "operationId": "get_handle_service_group",
        "tags": [
          "Handle"
        ],
        "x-onedata-service": "onezone",
        "x-onedata-module": "handle_service",
        "x-onedata-resource": "handle_service",
        "x-onedata-method": "handle_logic:get_handle_service_group",
        "x-onedata-permissions": [
          "modify_handle_service"
        ],
        "summary": "Get handle service group details",
        "x-bash-codegen-description": "Get details of a group with access to handle service.\n\nThis operation requires `view_handle_service` administrator privilege.\n",
        "description": "Get details of a group with access to handle service.\n\nThis operation requires `view_handle_service` administrator privilege.\n\n***Example cURL requests***\n\n**Get group handle service**\n```bash\ncurl -u username:password -X GET \\\nhttps://$HOST:8443/api/v3/handle_services/SADHLKJhlkASHDLAKSHDLKJHJjLH/groups/HwUpk8jrwxKOe45uzLFX2GVa8lKEasj4q253sptVqF8\n\n{\n  \"groupId\":\"HwUpk8jrwxKOe45uzLFX2GVa8lKEasj4q253sptVqF8\",\n  \"name\":\"Group name\",\n  \"type\":\"role\"\n}\n```\n",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Handle service details returned.",
            "schema": {
              "$ref": "#/definitions/HandleService"
            }
          },
          "400": {
            "description": "Invalid request.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "401": {
            "description": "Authentication error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "Authorization error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Resource not found.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server Error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the handle service.",
            "required": true,
            "type": "string"
          },
          {
            "name": "gid",
            "in": "path",
            "description": "The ID of the group to add to handle service.",
            "required": true,
            "type": "string"
          }
        ],
        "x-code-samples": [
          {
            "lang": "Shell",
            "source": "onezone-rest-cli getHandleServiceGroup id=HwUpk8jrwxKOe45uzLFX2GVC8lKEasj4q253sptVqF8 gid=hlkASHDLAKSHDLKJHJjLHSADHLKJhlk"
          }
        ]
      },
      "put": {
        "operationId": "add_handle_service_group",
        "tags": [
          "Handle"
        ],
        "x-onedata-service": "onezone",
        "x-onedata-module": "handle_service",
        "x-onedata-resource": "handle_service",
        "x-onedata-method": "handle_logic:add_handle_service_group",
        "x-onedata-permissions": [
          "modify_handle_service"
        ],
        "summary": "Add handle service group",
        "x-bash-codegen-description": "Allows to add a group to a handle service.\n\nThis operation requires `modify_handle_service` privilege.\n",
        "description": "Allows to add a group to a handle service.\n\nThis operation requires `modify_handle_service` privilege.\n\n***Example cURL requests***\n\n**Add handle service user**\n```bash\ncurl -u username:password -X PUT \\\nhttps://$HOST:8443/api/v3/handle_services/SADHLKJhlkASHDLAKSHDLKJHJjLH/groups/DLAKSHDLKJHJjLHADHLKJh\n```\n",
        "consumes": [
          "application/json"
        ],
        "responses": {
          "204": {
            "description": "Group added successfully."
          },
          "400": {
            "description": "Invalid request.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "401": {
            "description": "Authentication error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "Authorization error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Resource not found.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server Error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the handle service.",
            "required": true,
            "type": "string"
          },
          {
            "name": "gid",
            "in": "path",
            "description": "The ID of the group to add to handle service.",
            "required": true,
            "type": "string"
          }
        ],
        "x-code-samples": [
          {
            "lang": "Shell",
            "source": "onezone-rest-cli addHandleServiceGroup id=HwUpk8jrwxKOe45uzLFX2GVC8lKEasj4q253sptVqF8 gid=hlkASHDLAKSHDLKJHJjLHSADHLKJhlk"
          }
        ]
      },
      "delete": {
        "operationId": "remove_handle_service_group",
        "tags": [
          "Handle"
        ],
        "x-onedata-service": "onezone",
        "x-onedata-module": "handle_service",
        "x-onedata-resource": "handle_service",
        "x-onedata-method": "handle_logic:remove_handle_service_group",
        "x-onedata-permissions": [
          "modify_handle_service"
        ],
        "summary": "Remove handle service group",
        "x-bash-codegen-description": "Allows to remove a group from access to a handle service.\n\nThis operation requires `modify_handle_service` privilege.\n",
        "description": "Allows to remove a group from access to a handle service.\n\nThis operation requires `modify_handle_service` privilege.\n\n***Example cURL requests***\n\n**Remove handle service group**\n```bash\ncurl -u username:password -X DELETE \\\nhttps://$HOST:8443/api/v3/handle_services/SADHLKJhlkASHDLAKSHDLKJHJjLH/group/DLAKSHDLKJHJjLHADHLKJh\n```\n",
        "responses": {
          "202": {
            "description": "Group will be removed."
          },
          "400": {
            "description": "Invalid request.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "401": {
            "description": "Authentication error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "Authorization error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Resource not found.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server Error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the handle service.",
            "required": true,
            "type": "string"
          },
          {
            "name": "gid",
            "in": "path",
            "description": "The ID of the group to remove from handle service.",
            "required": true,
            "type": "string"
          }
        ],
        "x-code-samples": [
          {
            "lang": "Shell",
            "source": "onezone-rest-cli removeHandleServiceGroup id=HwUpk8jrwxKOe45uzLFX2GVC8lKEasj4q253sptVqF8 gid=hlkASHDLAKSHDLKJHJjLHSADHLKJhlk"
          }
        ]
      }
    },
    "/handle_services/{id}/groups/{gid}/privileges": {
      "get": {
        "operationId": "list_handle_service_group_privileges",
        "tags": [
          "Handle"
        ],
        "x-onedata-service": "onezone",
        "x-onedata-module": "handle_service",
        "x-onedata-resource": "handle_service",
        "x-onedata-method": "handle_logic:get_handle_service_group",
        "x-onedata-permissions": [
          "view_handle_service"
        ],
        "summary": "List handle service group privileges",
        "x-bash-codegen-description": "Returns group privileges for accessing a handle service instance.\n\nThis operation requires `view_handle_service` privilege.\n",
        "description": "Returns group privileges for accessing a handle service instance.\n\nThis operation requires `view_handle_service` privilege.\n\n***Example cURL requests***\n\n**Get handle service group privileges**\n```bash\ncurl -u username:password -X GET \\\nhttps://$HOST:8443/api/v3/handle_services/SADHLKJhlkASHDLAKSHDLKJHJjLH/group/hlkASHDLAKSHDLKJHJjLHSADHLKJhlk/privileges\n\n{\n  \"privileges\": [\n    \"delete_handle_service\",\n    \"view_handle_service\"\n  ]\n}\n```\n",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "The list of privileges of a group to a specific handle service.",
            "schema": {
              "$ref": "#/definitions/HandleServicePrivileges"
            }
          },
          "400": {
            "description": "Invalid request.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "401": {
            "description": "Authentication error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "Authorization error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Resource not found.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server Error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the handle service.",
            "required": true,
            "type": "string"
          },
          {
            "name": "gid",
            "in": "path",
            "description": "The ID of the group of a handle service.",
            "required": true,
            "type": "string"
          }
        ],
        "x-code-samples": [
          {
            "lang": "Shell",
            "source": "onezone-rest-cli listHandleServiceGroupPrivileges id=HwUpk8jrwxKOe45uzLFX2GVC8lKEasj4q253sptVqF8 gid=hlkASHDLAKSHDLKJHJjLHSADHLKJhlk"
          }
        ]
      },
      "patch": {
        "operationId": "set_handle_service_group_privileges",
        "tags": [
          "Handle"
        ],
        "x-onedata-service": "onezone",
        "x-onedata-module": "handle_service",
        "x-onedata-resource": "handle_service",
        "x-onedata-method": "handle_logic:set_handle_service_group_privileges",
        "x-onedata-permissions": [
          "modify_handle_service"
        ],
        "summary": "Set handle service groups privileges",
        "x-bash-codegen-description": "Sets group privileges for accessing a handle service instance.\n\nThis operation requires `modify_handle_service` privilege.\n",
        "description": "Sets group privileges for accessing a handle service instance.\n\nThis operation requires `modify_handle_service` privilege.\n\n***Example cURL requests***\n\n**Set handle service group privileges**\n```bash\ncurl -u username:password -X PUT  -H \"Content-type: application/json\" \\\n-d '{\"privileges\": [\"register_handle\"]}' \\\nhttps://$HOST:8443/api/v3/handle_services/SADHLKJhlkASHDLAKSHDLKJHJjLH/group/hlkASHDLAKSHDLKJHJjLHSADHLKJhlk/privileges\n```\n",
        "consumes": [
          "application/json"
        ],
        "responses": {
          "204": {
            "description": "Group privileges updated successfully."
          },
          "400": {
            "description": "Invalid request.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "401": {
            "description": "Authentication error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "Authorization error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Resource not found.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server Error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the handle service.",
            "required": true,
            "type": "string"
          },
          {
            "name": "gid",
            "in": "path",
            "description": "The ID of the group of a handle service.",
            "required": true,
            "type": "string"
          },
          {
            "name": "privileges",
            "in": "body",
            "description": "The list of group privileges to specific handle service.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/HandleServicePrivileges"
            }
          }
        ],
        "x-code-samples": [
          {
            "lang": "Shell",
            "source": "echo '{\"privileges\": [\"register_handle\"]}' | onezone-rest-cli setHandleServiceGroupPrivileges id=HwUpk8jrwxKOe45uzLFX2GVC8lKEasj4q253sptVqF8 gid=hlkASHDLAKSHDLKJHJjLHSADHLKJhlk -"
          }
        ]
      }
    },
    "/handle_services/{id}/effective_groups": {
      "get": {
        "operationId": "list_effective_handle_service_groups",
        "tags": [
          "Handle"
        ],
        "x-onedata-service": "onezone",
        "x-onedata-module": "handle_service",
        "x-onedata-resource": "handle_service",
        "x-onedata-method": "handle_logic:get_handle_service_groups",
        "x-onedata-permissions": [
          "view_handle_service"
        ],
        "summary": "List effective handle service groups",
        "x-bash-codegen-description": "Returns all groups with effective access to a handle service instance\n\nThis operation requires `view_handle_service` privilege.\n",
        "description": "Returns all groups with effective access to a handle service instance\n\nThis operation requires `view_handle_service` privilege.\n\n***Example cURL requests***\n\n**Get effective handle service groups**\n```bash\ncurl -u username:password -X GET \\\nhttps://$HOST:8443/api/v3/handle_services/SADHLKJhlkASHDLAKSHDLKJHJjLH/effective_groups\n\n{\n  \"groups\": [\n    \"LKJhlkASHDLAKSHDLKJHJjL\",\n    \"LAKSHDLKJHJjLLKJhlkASHD\"\n  ]\n}\n```\n",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "The list of identifiers of groups with access to specific handle service.",
            "schema": {
              "$ref": "#/definitions/Groups"
            }
          },
          "400": {
            "description": "Invalid request.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "401": {
            "description": "Authentication error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "Authorization error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Resource not found.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server Error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the handle service.",
            "required": true,
            "type": "string"
          }
        ],
        "x-code-samples": [
          {
            "lang": "Shell",
            "source": "onezone-rest-cli listEffectiveHandleServiceGroups id=HwUpk8jrwxKOe45uzLFX2GVC8lKEasj4q253sptVqF8"
          }
        ]
      }
    },
    "/handle_services/{id}/effective_groups/{gid}": {
      "get": {
        "operationId": "get_effective_handle_service_group",
        "tags": [
          "Handle"
        ],
        "x-onedata-service": "onezone",
        "x-onedata-module": "handle_service",
        "x-onedata-resource": "handle_service",
        "x-onedata-method": "handle_logic:get_handle_service_group",
        "x-onedata-permissions": [
          "modify_handle_service"
        ],
        "summary": "Get effective handle service group",
        "x-bash-codegen-description": "Get details of a handle service owned by an effective group.\n\nThis operation requires `view_handle_service` administrator privilege.\n",
        "description": "Get details of a handle service owned by an effective group.\n\nThis operation requires `view_handle_service` administrator privilege.\n\n***Example cURL requests***\n\n**Get effective handle service group details**\n```bash\ncurl -u username:password -X GET \\\nhttps://$HOST:8443/api/v3/handle_services/SADHLKJhlkASHDLAKSHDLKJHJjLH/effective_groups/HwUpk8jrwxKOe45uzLFX2GVa8lKEasj4q253sptVqF8\n\n{\n  \"groupId\":\"HwUpk8jrwxKOe45uzLFX2GVa8lKEasj4q253sptVqF8\",\n  \"name\":\"Group name\",\n  \"type\":\"role\"\n}\n```\n",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Handle service details returned.",
            "schema": {
              "$ref": "#/definitions/HandleService"
            }
          },
          "400": {
            "description": "Invalid request.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "401": {
            "description": "Authentication error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "Authorization error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Resource not found.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server Error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the handle service.",
            "required": true,
            "type": "string"
          },
          {
            "name": "gid",
            "in": "path",
            "description": "The ID of the group to add to handle service.",
            "required": true,
            "type": "string"
          }
        ],
        "x-code-samples": [
          {
            "lang": "Shell",
            "source": "onezone-rest-cli getEffectiveHandleServiceGroup id=HwUpk8jrwxKOe45uzLFX2GVC8lKEasj4q253sptVqF8 gid=hlkASHDLAKSHDLKJHJjLHSADHLKJhlk"
          }
        ]
      }
    },
    "/handle_services/{id}/effective_groups/{gid}/privileges": {
      "get": {
        "operationId": "get_effective_handle_service_group_privileges",
        "tags": [
          "Handle"
        ],
        "x-onedata-service": "onezone",
        "x-onedata-module": "handle_service",
        "x-onedata-resource": "handle_service",
        "x-onedata-method": "handle_logic:get_handle_service_group",
        "x-onedata-permissions": [
          "view_handle_service"
        ],
        "summary": "Get effective handle service group privileges",
        "x-bash-codegen-description": "Returns effective group privileges for accessing a handle service instance.\n\nThis operation requires `view_handle_service` privilege.\n",
        "description": "Returns effective group privileges for accessing a handle service instance.\n\nThis operation requires `view_handle_service` privilege.\n\n***Example cURL requests***\n\n**Get handle service group privileges**\n```bash\ncurl -u username:password -X GET \\\nhttps://$HOST:8443/api/v3/handle_services/SADHLKJhlkASHDLAKSHDLKJHJjLH/effective_group/hlkASHDLAKSHDLKJHJjLHSADHLKJhlk/privileges\n\n{\n  \"privileges\": [\n    \"delete_handle_service\",\n    \"view_handle_service\"\n  ]\n}\n```\n",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "The list of privileges of a group to a specific handle service.",
            "schema": {
              "$ref": "#/definitions/HandleServicePrivileges"
            }
          },
          "400": {
            "description": "Invalid request.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "401": {
            "description": "Authentication error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "Authorization error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Resource not found.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server Error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the handle service.",
            "required": true,
            "type": "string"
          },
          {
            "name": "gid",
            "in": "path",
            "description": "The ID of the group of a handle service.",
            "required": true,
            "type": "string"
          }
        ],
        "x-code-samples": [
          {
            "lang": "Shell",
            "source": "onezone-rest-cli getEffectiveHandleServiceGroupPrivileges id=HwUpk8jrwxKOe45uzLFX2GVC8lKEasj4q253sptVqF8 gid=hlkASHDLAKSHDLKJHJjLHSADHLKJhlk"
          }
        ]
      }
    },
    "/handle_services/{id}/handles": {
      "get": {
        "operationId": "list_handleservice_handles",
        "tags": [
          "Handle"
        ],
        "x-onedata-service": "onezone",
        "x-onedata-module": "handle",
        "x-onedata-resource": "handle",
        "x-onedata-method": "handle_logic:get_handles",
        "x-onedata-permissions": [
          "list_handles"
        ],
        "summary": "List handle service handles",
        "x-bash-codegen-description": "Returns the list of ID's of all handles registered by handle service.\n\nThis operation requires `handle_service_list_handles` administrator privilege.\n",
        "description": "Returns the list of ID's of all handles registered by handle service.\n\nThis operation requires `handle_service_list_handles` administrator privilege.\n\n***Example cURL requests***\n\n**Get handle services handles**\n```bash\ncurl -u username:password -X GET \\\nhttps://$HOST:8443/api/v3/handle_services/LKJASHDLKJHASD/handles\n\n{\n  \"handles\": [\n    \"SADHLKJhlkASHDLAKSHDLKJHJjLH\",\n    \"LAKSHDLKJHJjLHSADHLKJhlkASHD\"\n  ]\n}\n```\n",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "The list of handle identifiers (Onedata internal GUID's).",
            "schema": {
              "$ref": "#/definitions/Handles"
            }
          },
          "400": {
            "description": "Invalid request.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "401": {
            "description": "Authentication error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "Authorization error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Resource not found.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server Error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the handle service.",
            "required": true,
            "type": "string"
          }
        ],
        "x-code-samples": [
          {
            "lang": "Shell",
            "source": "onezone-rest-cli getHandleServicesHandles id=KLJAHSDKLJHASDhjhjgasd6asdjkASD"
          }
        ]
      }
    },
    "/handle_services/{id}/handles/{hid}": {
      "get": {
        "operationId": "get_handle_service_handle",
        "tags": [
          "Handle"
        ],
        "x-onedata-service": "onezone",
        "x-onedata-module": "handle",
        "x-onedata-resource": "handle",
        "x-onedata-method": "handle_logic:get_handles",
        "x-onedata-permissions": [
          "list_handles"
        ],
        "summary": "Get handle from handle service",
        "x-bash-codegen-description": "Returns the details of a specific handle registered by handle service.\n",
        "description": "Returns the details of a specific handle registered by handle service.\n\n***Example cURL requests***\n\n**Get handle services handle**\n```bash\ncurl -u username:password -X GET \\\nhttps://$HOST:8443/api/v3/handle_services/LKJASHDLKJHASD/handles/oOVF-KrO1P6rpA0LFgNVI8NxuhxyQMUnrYzjAnKiyAY\n\n{\n  \"handleId\": \"oOVF-KrO1P6rpA0LFgNVI8NxuhxyQMUnrYzjAnKiyAY\",\n  \"handleServiceId\": \"ASKDGHKAJSHDukjhasdlkjalksjd76876asdkb\",\n  \"resourceType\": \"Share\",\n  \"resourceId\": \"dlkjalkADKDGHKAJSHDukjhassjd76876asdkb\",\n  \"metadata\": \"<?xml version=\\\"1.0\\\"?>\n      <!DOCTYPE rdf:RDF SYSTEM \\\\\"http://dublincore.org/2000/12/01-dcmes-xml-dtd.dtd\\\">\n      <rdf:RDF xmlns:rdf=\\\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\\\"\n               xmlns:dc=\\\"http://purl.org/dc/elements/1.1/\\\">\n        <rdf:Description rdf:about=\\\"http://example.com/resouces/1\\\">\n          <dc:title>Example Resource</dc:title>\n          <dc:creator>John Doe</dc:creator>\n          <dc:publisher>MIT</dc:publisher>\n          <dc:date>2000-06-06</dc:date>\n        </rdf:Description>\n      </rdf:RDF>\",\n  \"timestamp\": \"1997-07-16T19:20\"\n}\n```\n",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "The list of handle identifiers (Onedata internal GUID's).",
            "schema": {
              "$ref": "#/definitions/Handle"
            }
          },
          "400": {
            "description": "Invalid request.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "401": {
            "description": "Authentication error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "Authorization error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Resource not found.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server Error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the handle service.",
            "required": true,
            "type": "string"
          },
          {
            "name": "hid",
            "in": "path",
            "description": "The ID of the handle.",
            "required": true,
            "type": "string"
          }
        ],
        "x-code-samples": [
          {
            "lang": "Shell",
            "source": "onezone-rest-cli getHandleServiceHandle id=KLJAHSDKLJHASDhjhjgasd6asdjkASD hid=KLASDjkhasd878ASDKhj7asd"
          }
        ]
      }
    },
    "/handles": {
      "get": {
        "operationId": "list_handles",
        "tags": [
          "Handle"
        ],
        "x-onedata-service": "onezone",
        "x-onedata-module": "handle",
        "x-onedata-resource": "handle",
        "x-onedata-method": "handle_logic:get_handles",
        "x-onedata-permissions": [
          "list_handles"
        ],
        "summary": "List handles",
        "x-bash-codegen-description": "Returns the list of ID's of all handles registered in Onezone.\n\nThis operation requires `oz_handles_list` administrator privilege.\n",
        "description": "Returns the list of ID's of all handles registered in Onezone.\n\nThis operation requires `oz_handles_list` administrator privilege.\n\n***Example cURL requests***\n\n**Get handles**\n```bash\ncurl -u username:password -X GET https://$HOST:8443/api/v3/handles\n\n{\n  \"handles\": [\n    \"SADHLKJhlkASHDLAKSHDLKJHJjLH\",\n    \"LAKSHDLKJHJjLHSADHLKJhlkASHD\"\n  ]\n}\n```\n",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "The list of handle identifiers (Onedata internal GUID's).",
            "schema": {
              "$ref": "#/definitions/Handles"
            }
          },
          "400": {
            "description": "Invalid request.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "401": {
            "description": "Authentication error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "Authorization error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Resource not found.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server Error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "x-code-samples": [
          {
            "lang": "Shell",
            "source": "onezone-rest-cli listHandles"
          }
        ]
      },
      "post": {
        "operationId": "register_handle",
        "tags": [
          "Handle"
        ],
        "x-onedata-service": "onezone",
        "x-onedata-module": "handle",
        "x-onedata-resource": "handle",
        "x-onedata-method": "handle_logic:add_handle",
        "x-onedata-permissions": [
          "register_handle"
        ],
        "summary": "Register handle",
        "x-bash-codegen-description": "Allows to register a new handle identifier, using a specific handle service.\n\nThe handle service must be registered in Onedata separately.\n\nThis operation requires `register_handle` privilege, which needs to\nbe assigned to a specific handle service.\n",
        "description": "Allows to register a new handle identifier, using a specific handle service.\n\nThe handle service must be registered in Onedata separately.\n\nThis operation requires `register_handle` privilege, which needs to\nbe assigned to a specific handle service.\n\n***Example cURL requests***\n\n**Register handle**\n```bash\ncurl -u username:password -X POST -H \"Content-type: application/json\" \\\n-d '{ \"handleServiceId\": \"LKJAHSDKJLHASD\", \"resourceType\": \"Share\", \"resourceId\": \"ASDasd7asdASDASD76\", \"metadata\": \"<?xml version=\\'1.0\\'?>...\" }' \\\nhttps://$HOST:8443/api/v3/handles\n```\n",
        "consumes": [
          "application/json"
        ],
        "responses": {
          "204": {
            "description": "Request successful.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The endpoint of the new handle resource including the generated GUID.\n"
              }
            }
          },
          "400": {
            "description": "Invalid request.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "401": {
            "description": "Authentication error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "Authorization error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Resource not found.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server Error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "parameters": [
          {
            "name": "handleRegistrationRequest",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/HandleRegistrationRequest"
            }
          }
        ],
        "x-code-samples": [
          {
            "lang": "Shell",
            "source": "cat hndl_request.json | onezone-rest-cli registerHandle -"
          }
        ]
      }
    },
    "/handles/{hndl}": {
      "get": {
        "operationId": "get_handle",
        "tags": [
          "Handle"
        ],
        "x-onedata-service": "onezone",
        "x-onedata-module": "handle",
        "x-onedata-resource": "handle",
        "x-onedata-method": "handle_logic:get_handle",
        "x-onedata-permissions": [
          "view_handle"
        ],
        "summary": "Get handle",
        "x-bash-codegen-description": "Returns the properties of a specific handle.\n\nThis operation requires `view_handle` privilege.\n",
        "description": "Returns the properties of a specific handle.\n\nThis operation requires `view_handle` privilege.\n\n***Example cURL requests***\n\n**Get handle**\n```bash\ncurl -u username:password -X GET \\\nhttps://$HOST:8443/api/v3/handles/oOVF-KrO1P6rpA0LFgNVI8NxuhxyQMUnrYzjAnKiyAY\n\n{\n  \"handleId\": \"oOVF-KrO1P6rpA0LFgNVI8NxuhxyQMUnrYzjAnKiyAY\",\n  \"handleServiceId\": \"ASKDGHKAJSHDukjhasdlkjalksjd76876asdkb\",\n  \"resourceType\": \"Share\",\n  \"resourceId\": \"dlkjalkADKDGHKAJSHDukjhassjd76876asdkb\",\n  \"metadata\": \"<?xml version=\\\"1.0\\\"?>\n      <!DOCTYPE rdf:RDF SYSTEM \\\\\"http://dublincore.org/2000/12/01-dcmes-xml-dtd.dtd\\\">\n      <rdf:RDF xmlns:rdf=\\\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\\\"\n               xmlns:dc=\\\"http://purl.org/dc/elements/1.1/\\\">\n        <rdf:Description rdf:about=\\\"http://example.com/resouces/1\\\">\n          <dc:title>Example Resource</dc:title>\n          <dc:creator>John Doe</dc:creator>\n          <dc:publisher>MIT</dc:publisher>\n          <dc:date>2000-06-06</dc:date>\n        </rdf:Description>\n      </rdf:RDF>\",\n  \"timestamp\": \"1997-07-16T19:20\"\n}\n```\n",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "The properties of a specific handle.",
            "schema": {
              "$ref": "#/definitions/Handle"
            }
          },
          "400": {
            "description": "Invalid request.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "401": {
            "description": "Authentication error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "Authorization error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Resource not found.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server Error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "parameters": [
          {
            "name": "hndl",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The handle ID (internal Onedata GUID) of the identifier."
          }
        ],
        "x-code-samples": [
          {
            "lang": "Shell",
            "source": "onezone-rest-cli getHandle hndl=DLAKSHDLKJHJjSADHLKJhlkASHLH"
          }
        ]
      },
      "patch": {
        "operationId": "modify_handle",
        "tags": [
          "Handle"
        ],
        "x-onedata-service": "onezone",
        "x-onedata-module": "handle",
        "x-onedata-resource": "handle",
        "x-onedata-method": "handle_logic:modify_handle",
        "x-onedata-permissions": [
          "modify_handle"
        ],
        "summary": "Modify handle",
        "x-bash-codegen-description": "Allows to update a registered handle, currently it only allows\nto modify the handle metadata property.\n\nThis operation requires `modify_handle` privilege.\n",
        "description": "Allows to update a registered handle, currently it only allows\nto modify the handle metadata property.\n\nThis operation requires `modify_handle` privilege.\n\n***Example cURL requests***\n\n**Modify handle resource**\n```bash\ncurl -u username:password -X PATCH  -H \"Content-type: application/json\" \\\n-d '{\"metadata\": \"<?xml...\"}' \\\nhttps://$HOST:8443/api/v3/handles/LKHASDkkjhASDLHU70ASDn\n```\n",
        "consumes": [
          "application/json"
        ],
        "responses": {
          "204": {
            "description": "Update was successful."
          },
          "400": {
            "description": "Invalid request.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "401": {
            "description": "Authentication error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "Authorization error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Resource not found.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server Error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "parameters": [
          {
            "name": "hndl",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "handle",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "metadata": {
                  "type": "string",
                  "description": "Dublin Core metadata in XML for the handle."
                }
              }
            }
          }
        ],
        "x-code-samples": [
          {
            "lang": "Shell",
            "source": "cat handl_metadata.json | onezone-rest-cli modifyHandle hndl=DLAKSHDLKJHJjSADHLKJhlkASHLH"
          }
        ]
      },
      "delete": {
        "operationId": "remove_handle",
        "tags": [
          "Handle"
        ],
        "x-onedata-service": "onezone",
        "x-onedata-module": "handle",
        "x-onedata-resource": "handle",
        "x-onedata-method": "handle_logic:delete_handle",
        "x-onedata-permissions": [
          "delete_handle"
        ],
        "summary": "Unregister handle",
        "x-bash-codegen-description": "Allows to unregister a registered handle.\n\nThis operation requires `delete_handle` privilege.\n",
        "description": "Allows to unregister a registered handle.\n\nThis operation requires `delete_handle` privilege.\n\n***Example cURL requests***\n\n**Unregister handle**\n```bash\ncurl -u username:password -X DELETE \\\nhttps://$HOST:8443/api/v3/handles/SDLLKHASDkSDLHU70ASDnHU70ASDnkjhA\n```\n",
        "responses": {
          "202": {
            "description": "Handle will be removed."
          },
          "400": {
            "description": "Invalid request.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "401": {
            "description": "Authentication error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "Authorization error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Resource not found.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server Error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "parameters": [
          {
            "name": "hndl",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "x-code-samples": [
          {
            "lang": "Shell",
            "source": "onezone-rest-cli removeHandle hndl=DLAKSHDLKJHJjSADHLKJhlkASHLH"
          }
        ]
      }
    },
    "/handles/{hndl}/users": {
      "get": {
        "operationId": "list_handle_users",
        "tags": [
          "Handle"
        ],
        "x-onedata-service": "onezone",
        "x-onedata-module": "handle",
        "x-onedata-resource": "handle",
        "x-onedata-method": "handle_logic:get_handle_users",
        "x-onedata-permissions": [
          "view_handle_users"
        ],
        "summary": "List handle users",
        "x-bash-codegen-description": "Returns all users with access to a handle instance\n\nThis operation requires `view_handle` privilege.\n",
        "description": "Returns all users with access to a handle instance\n\nThis operation requires `view_handle` privilege.\n\n***Example cURL requests***\n\n**Get handle users**\n```bash\ncurl -u username:password -X GET \\\nhttps://$HOST:8443/api/v3/handles/SADHLKJhlkASHDLAKSHDLKJHJjLH/users\n\n{\n  \"users\": [\n    \"LAKSHDLKLKJhlkASHDJHJjL\",\n    \"HDLKJHJjLLKLAKSJhlkASHD\"\n  ]\n}\n```\n",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "The list of identifiers of users with access to specific handle.",
            "schema": {
              "$ref": "#/definitions/Users"
            }
          },
          "400": {
            "description": "Invalid request.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "401": {
            "description": "Authentication error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "Authorization error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Resource not found.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server Error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "parameters": [
          {
            "name": "hndl",
            "in": "path",
            "description": "The ID of the handle service.",
            "required": true,
            "type": "string"
          }
        ],
        "x-code-samples": [
          {
            "lang": "Shell",
            "source": "onezone-rest-cli listHandleUsers hndl=DLAKSHDLKJHJjSADHLKJhlkASHLH"
          }
        ]
      }
    },
    "/handles/{hndl}/users/{uid}": {
      "get": {
        "operationId": "get_handle_user",
        "tags": [
          "Handle"
        ],
        "x-onedata-service": "onezone",
        "x-onedata-module": "handle",
        "x-onedata-resource": "handle",
        "x-onedata-method": "handle_logic:get_handle_user",
        "x-onedata-permissions": [
          "read_handle"
        ],
        "summary": "Get handle user",
        "x-bash-codegen-description": "Allows to add a user to a handle.\n\nThis operation requires `view_handle` administrator privilege.\n",
        "description": "Allows to add a user to a handle.\n\nThis operation requires `view_handle` administrator privilege.\n\n***Example cURL requests***\n\n**Get handle user**\n```bash\ncurl -u username:password -X GET \\\nhttps://$HOST:8443/api/v3/handles/SADHLKJhlkASHDLAKSHDLKJHJjLH/users/njOzyvXybAYvki10HXRCeJd_IlLHS4XEklgghmJjDpo\n\n{\n   \"name\" : \"John Doe\",\n   \"alias\" : \"\",\n   \"login\" : \"username\",\n   \"connectedAccounts\" : [],\n   \"userId\" : \"njOzyvXybAYvki10HXRCeJd_IlLHS4XEklgghmJjDpo\",\n   \"emailList\" : []\n}\n```\n",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "User details returned successfully.",
            "schema": {
              "$ref": "#/definitions/User"
            }
          },
          "400": {
            "description": "Invalid request.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "401": {
            "description": "Authentication error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "Authorization error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Resource not found.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server Error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "parameters": [
          {
            "name": "hndl",
            "in": "path",
            "description": "The ID of the handle.",
            "required": true,
            "type": "string"
          },
          {
            "name": "uid",
            "in": "path",
            "description": "The ID of the user to add to handle.",
            "required": true,
            "type": "string"
          }
        ],
        "x-code-samples": [
          {
            "lang": "Shell",
            "source": "onezone-rest-cli getHandleUser hndl=DLAKSHDLKJHJjSADHLKJhlkASHLH uid=hlkASHDLAKSHDLKJHJjLHSADHLKJhlk"
          }
        ]
      },
      "put": {
        "operationId": "add_handle_user",
        "tags": [
          "Handle"
        ],
        "x-onedata-service": "onezone",
        "x-onedata-module": "handle",
        "x-onedata-resource": "handle",
        "x-onedata-method": "handle_logic:add_handle_user",
        "x-onedata-permissions": [
          "modify_handle"
        ],
        "summary": "Add handle user",
        "x-bash-codegen-description": "Allows to add a user to a handle.\n\nThis operation requires `modify_handle` privilege.\n",
        "description": "Allows to add a user to a handle.\n\nThis operation requires `modify_handle` privilege.\n\n***Example cURL requests***\n\n**Add handle user**\n```bash\ncurl -u username:password -X PUT \\\nhttps://$HOST:8443/api/v3/handles/SADHLKJhlkASHDLAKSHDLKJHJjLH/users/DLAKSHDLKJHJjLHADHLKJh\n```\n",
        "produces": [
          "application/json"
        ],
        "responses": {
          "204": {
            "description": "User added successfully."
          },
          "400": {
            "description": "Invalid request.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "401": {
            "description": "Authentication error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "Authorization error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Resource not found.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server Error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "parameters": [
          {
            "name": "hndl",
            "in": "path",
            "description": "The ID of the handle.",
            "required": true,
            "type": "string"
          },
          {
            "name": "uid",
            "in": "path",
            "description": "The ID of the user to add to handle.",
            "required": true,
            "type": "string"
          }
        ],
        "x-code-samples": [
          {
            "lang": "Shell",
            "source": "onezone-rest-cli addHandleUser hndl=DLAKSHDLKJHJjSADHLKJhlkASHLH uid=hlkASHDLAKSHDLKJHJjLHSADHLKJhlk"
          }
        ]
      },
      "delete": {
        "operationId": "remove_handle_user",
        "tags": [
          "Handle"
        ],
        "x-onedata-service": "onezone",
        "x-onedata-module": "handle",
        "x-onedata-resource": "handle",
        "x-onedata-method": "handle_logic:remove_handle_user",
        "x-onedata-permissions": [
          "modify_handle"
        ],
        "summary": "Remove handle user",
        "x-bash-codegen-description": "Allows to revoke users access to a handle.\n\nThis operation requires `modify_handle` privilege.\n",
        "description": "Allows to revoke users access to a handle.\n\nThis operation requires `modify_handle` privilege.\n\n***Example cURL requests***\n\n**Remove handle service user**\n```bash\ncurl -u username:password -X DELETE \\\nhttps://$HOST:8443/api/v3/handles/AKSHDLKJHJjLHSADHLKJhlkASHDL/users/JHJjLHADHLKJhDLAKSHDLK\n```\n",
        "responses": {
          "202": {
            "description": "User will be removed."
          },
          "400": {
            "description": "Invalid request.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "401": {
            "description": "Authentication error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "Authorization error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Resource not found.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server Error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "parameters": [
          {
            "name": "hndl",
            "in": "path",
            "description": "The ID of the handle.",
            "required": true,
            "type": "string"
          },
          {
            "name": "uid",
            "in": "path",
            "description": "The ID of the user to remove from handle.",
            "required": true,
            "type": "string"
          }
        ],
        "x-code-samples": [
          {
            "lang": "Shell",
            "source": "onezone-rest-cli removeHandleUser hndl=DLAKSHDLKJHJjSADHLKJhlkASHLH uid=hlkASHDLAKSHDLKJHJjLHSADHLKJhlk"
          }
        ]
      }
    },
    "/handles/{hndl}/users/{uid}/privileges": {
      "get": {
        "operationId": "list_handle_user_privileges",
        "tags": [
          "Handle"
        ],
        "x-onedata-service": "onezone",
        "x-onedata-module": "handle",
        "x-onedata-resource": "handle",
        "x-onedata-method": "handle_logic:get_handle_users",
        "x-onedata-permissions": [
          "view_handle"
        ],
        "summary": "List handle user privileges",
        "x-bash-codegen-description": "Returns user privileges for accessing a handle instance.\n\nThis operation requires `view_handle` privilege.\n",
        "description": "Returns user privileges for accessing a handle instance.\n\nThis operation requires `view_handle` privilege.\n\n***Example cURL requests***\n\n**Get handle user privileges**\n```bash\ncurl -u username:password -X GET \\\nhttps://$HOST:8443/api/v3/handles/SADHLKJhlkASHDLAKSHDLKJHJjLH/users/hlkASHDLAKSHDLKJHJjLHSADHLKJhlk/privileges\n\n{\n  \"privileges\": [\n    \"modify_handle\",\n    \"view_handle\"\n  ]\n}\n```\n",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "The list of privileges of a user to a specific handle.",
            "schema": {
              "$ref": "#/definitions/HandlePrivileges"
            }
          },
          "400": {
            "description": "Invalid request.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "401": {
            "description": "Authentication error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "Authorization error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Resource not found.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server Error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "parameters": [
          {
            "name": "hndl",
            "in": "path",
            "description": "The ID of the handle service.",
            "required": true,
            "type": "string"
          },
          {
            "name": "uid",
            "in": "path",
            "description": "The ID of the user of a handle service.",
            "required": true,
            "type": "string"
          }
        ],
        "x-code-samples": [
          {
            "lang": "Shell",
            "source": "onezone-rest-cli listHandleUserPrivileges hndl=DLAKSHDLKJHJjSADHLKJhlkASHLH uid=hlkASHDLAKSHDLKJHJjLHSADHLKJhlk"
          }
        ]
      },
      "patch": {
        "operationId": "set_handle_user_privileges",
        "tags": [
          "Handle"
        ],
        "x-onedata-service": "onezone",
        "x-onedata-module": "handle",
        "x-onedata-resource": "handle",
        "x-onedata-method": "handle_logic:set_handle_users",
        "x-onedata-permissions": [
          "modify_handle"
        ],
        "summary": "Set handle user privileges",
        "x-bash-codegen-description": "Sets user privileges for accessing a handle instance.\n\nThis operation requires `modify_handle` privilege.\n",
        "description": "Sets user privileges for accessing a handle instance.\n\nThis operation requires `modify_handle` privilege.\n\n***Example cURL requests***\n\n**Set handle user privileges**\n```bash\ncurl -u username:password -X PATCH -H \"Content-type: application/json\" \\\n-d '{\"privileges\": [\"handle_change_data\"]}' \\\nhttps://$HOST:8443/api/v3/handles/SADHLKJhlkASHDLAKSHDLKJHJjLH/users/hlkASHDLAKSHDLKJHJjLHSADHLKJhlk/privileges\n```\n",
        "consumes": [
          "application/json"
        ],
        "responses": {
          "204": {
            "description": "User privileges updated successfully."
          },
          "400": {
            "description": "Invalid request.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "401": {
            "description": "Authentication error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "Authorization error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Resource not found.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server Error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "parameters": [
          {
            "name": "hndl",
            "in": "path",
            "description": "The ID of the handle.",
            "required": true,
            "type": "string"
          },
          {
            "name": "uid",
            "in": "path",
            "description": "The ID of the user of a handle.",
            "required": true,
            "type": "string"
          },
          {
            "name": "privileges",
            "in": "body",
            "description": "The list of user privileges to a specific handle.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/HandlePrivileges"
            }
          }
        ],
        "x-code-samples": [
          {
            "lang": "Shell",
            "source": "echo '{\"privileges\": [\"handle_view_data\"]}' | onezone-rest-cli setHandleUserPrivileges hndl=DLAKSHDLKJHJjSADHLKJhlkASHLH uid=hlkASHDLAKSHDLKJHJjLHSADHLKJhlk -"
          }
        ]
      }
    },
    "/handles/{hndl}/effective_users": {
      "get": {
        "operationId": "list_effective_handle_users",
        "tags": [
          "Handle"
        ],
        "x-onedata-service": "onezone",
        "x-onedata-module": "handle",
        "x-onedata-resource": "handle",
        "x-onedata-method": "handle_logic:get_handle_users",
        "x-onedata-permissions": [
          "view_handle_users"
        ],
        "summary": "List effective handle users",
        "x-bash-codegen-description": "Returns effective list of users with access to a handle instance.\n\nThis operation requires `view_handle` privilege.\n",
        "description": "Returns effective list of users with access to a handle instance.\n\nThis operation requires `view_handle` privilege.\n\n***Example cURL requests***\n\n**Get handle users**\n```bash\ncurl -u username:password -X GET \\\nhttps://$HOST:8443/api/v3/handles/SADHLKJhlkASHDLAKSHDLKJHJjLH/effective_users\n\n{\n  \"users\": [\n    \"LAKSHDLKLKJhlkASHDJHJjL\",\n    \"HDLKJHJjLLKLAKSJhlkASHD\"\n  ]\n}\n```\n",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "The effective list of identifiers of users with access to specific handle.",
            "schema": {
              "$ref": "#/definitions/Users"
            }
          },
          "400": {
            "description": "Invalid request.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "401": {
            "description": "Authentication error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "Authorization error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Resource not found.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server Error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "parameters": [
          {
            "name": "hndl",
            "in": "path",
            "description": "The ID of the handle service.",
            "required": true,
            "type": "string"
          }
        ],
        "x-code-samples": [
          {
            "lang": "Shell",
            "source": "onezone-rest-cli listEffectiveHandleUsers hndl=DLAKSHDLKJHJjSADHLKJhlkASHLH"
          }
        ]
      }
    },
    "/handles/{hndl}/effective_users/{uid}": {
      "get": {
        "operationId": "get_effective_handle_user",
        "tags": [
          "Handle"
        ],
        "x-onedata-service": "onezone",
        "x-onedata-module": "handle",
        "x-onedata-resource": "handle",
        "x-onedata-method": "handle_logic:get_handle_user",
        "x-onedata-permissions": [
          "read_handle"
        ],
        "summary": "Get effective handle user",
        "x-bash-codegen-description": "Returns effective handle user details.\n\nThis operation requires `view_handle` administrator privilege.\n",
        "description": "Returns effective handle user details.\n\nThis operation requires `view_handle` administrator privilege.\n\n***Example cURL requests***\n\n**Add handle user**\n```bash\ncurl -u username:password -X GET \\\nhttps://$HOST:8443/api/v3/handles/SADHLKJhlkASHDLAKSHDLKJHJjLH/effective_users/njOzyvXybAYvki10HXRCeJd_IlLHS4XEklgghmJjDpo\n\n{\n   \"name\" : \"John Doe\",\n   \"alias\" : \"\",\n   \"login\" : \"username\",\n   \"connectedAccounts\" : [],\n   \"userId\" : \"njOzyvXybAYvki10HXRCeJd_IlLHS4XEklgghmJjDpo\",\n   \"emailList\" : []\n}\n```\n",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "User details returned succesfully.",
            "schema": {
              "$ref": "#/definitions/User"
            }
          },
          "400": {
            "description": "Invalid request.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "401": {
            "description": "Authentication error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "Authorization error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Resource not found.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server Error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "parameters": [
          {
            "name": "hndl",
            "in": "path",
            "description": "The ID of the handle.",
            "required": true,
            "type": "string"
          },
          {
            "name": "uid",
            "in": "path",
            "description": "The ID of the user to add to handle.",
            "required": true,
            "type": "string"
          }
        ],
        "x-code-samples": [
          {
            "lang": "Shell",
            "source": "onezone-rest-cli getEffectiveHandleUser hndl=DLAKSHDLKJHJjSADHLKJhlkASHLH uid=hlkASHDLAKSHDLKJHJjLHSADHLKJhlk"
          }
        ]
      }
    },
    "/handles/{hndl}/effective_users/{uid}/privileges": {
      "get": {
        "operationId": "list_effective_handle_user_privileges",
        "tags": [
          "Handle"
        ],
        "x-onedata-service": "onezone",
        "x-onedata-module": "handle",
        "x-onedata-resource": "handle",
        "x-onedata-method": "handle_logic:get_handle_users",
        "x-onedata-permissions": [
          "view_handle"
        ],
        "summary": "List effective handle user privileges",
        "x-bash-codegen-description": "Returns effective user privileges for accessing a handle instance.\n\nThis operation requires `view_handle` privilege.\n",
        "description": "Returns effective user privileges for accessing a handle instance.\n\nThis operation requires `view_handle` privilege.\n\n***Example cURL requests***\n\n**Get effective handle user privileges**\n```bash\ncurl -u username:password -X GET \\\nhttps://$HOST:8443/api/v3/handles/SADHLKJhlkASHDLAKSHDLKJHJjLH/effective_users/hlkASHDLAKSHDLKJHJjLHSADHLKJhlk/privileges\n\n{\n  \"privileges\": [\n    \"modify_handle\",\n    \"view_handle\"\n  ]\n}\n```\n",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "The effective list of privileges of a user to a specific handle.",
            "schema": {
              "$ref": "#/definitions/HandlePrivileges"
            }
          },
          "400": {
            "description": "Invalid request.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "401": {
            "description": "Authentication error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "Authorization error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Resource not found.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server Error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "parameters": [
          {
            "name": "hndl",
            "in": "path",
            "description": "The ID of the handle service.",
            "required": true,
            "type": "string"
          },
          {
            "name": "uid",
            "in": "path",
            "description": "The ID of the user of a handle service.",
            "required": true,
            "type": "string"
          }
        ],
        "x-code-samples": [
          {
            "lang": "Shell",
            "source": "onezone-rest-cli listEffectiveHandleUserPrivileges hndl=DLAKSHDLKJHJjSADHLKJhlkASHLH uid=hlkASHDLAKSHDLKJHJjLHSADHLKJhlk"
          }
        ]
      }
    },
    "/handles/{hndl}/groups": {
      "get": {
        "operationId": "list_handle_groups",
        "tags": [
          "Handle"
        ],
        "x-onedata-service": "onezone",
        "x-onedata-module": "handle",
        "x-onedata-resource": "handle",
        "x-onedata-method": "handle_logic:get_handle_groups",
        "x-onedata-permissions": [
          "view_handle_groups"
        ],
        "summary": "List handle groups",
        "x-bash-codegen-description": "Returns all groups with access to a handle instance\n\nThis operation requires `view_handle` privilege.\n",
        "description": "Returns all groups with access to a handle instance\n\nThis operation requires `view_handle` privilege.\n\n***Example cURL requests***\n\n**Get handle groups**\n```bash\ncurl -u username:password -X GET \\\nhttps://$HOST:8443/api/v3/handles/SADHLKJhlkASHDLAKSHDLKJHJjLH/groups\n\n{\n  \"groups\": [\n    \"LKLKJhlkASHDJLAKSHDHJjL\",\n    \"KJHJjLHDLLKLAKSJhlkASHD\"\n  ]\n}\n```\n",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "The list of identifiers of groups with access to specific handle.",
            "schema": {
              "$ref": "#/definitions/Groups"
            }
          },
          "400": {
            "description": "Invalid request.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "401": {
            "description": "Authentication error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "Authorization error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Resource not found.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server Error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "parameters": [
          {
            "name": "hndl",
            "in": "path",
            "description": "The ID of the handle service.",
            "required": true,
            "type": "string"
          }
        ],
        "x-code-samples": [
          {
            "lang": "Shell",
            "source": "onezone-rest-cli listHandleGroups hndl=DLAKSHDLKJHJjSADHLKJhlkASHLH"
          }
        ]
      }
    },
    "/handles/{hndl}/groups/{gid}": {
      "get": {
        "operationId": "get_handle_group",
        "tags": [
          "Handle"
        ],
        "x-onedata-service": "onezone",
        "x-onedata-module": "handle",
        "x-onedata-resource": "handle",
        "x-onedata-method": "handle_logic:get_handle_group",
        "x-onedata-permissions": [
          "read_handle"
        ],
        "summary": "Get handle group",
        "x-bash-codegen-description": "Returns the details of a group with access to handle.\n\nThis operation requires `view_handle` administrator privilege.\n",
        "description": "Returns the details of a group with access to handle.\n\nThis operation requires `view_handle` administrator privilege.\n\n***Example cURL requests***\n\n**Add handle group**\n```bash\ncurl -u username:password -X GET \\\nhttps://$HOST:8443/api/v3/handles/SADHLKJhlkASHDLAKSHDLKJHJjLH/groups/HwUpk8jrwxKOe45uzLFX2GVa8lKEasj4q253sptVqF8\n\n{\n  \"groupId\":\"HwUpk8jrwxKOe45uzLFX2GVa8lKEasj4q253sptVqF8\",\n  \"name\":\"Group name\",\n  \"type\":\"role\"\n}\n```\n",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Group details returned successfully.",
            "schema": {
              "$ref": "#/definitions/Group"
            }
          },
          "400": {
            "description": "Invalid request.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "401": {
            "description": "Authentication error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "Authorization error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Resource not found.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server Error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "parameters": [
          {
            "name": "hndl",
            "in": "path",
            "description": "The ID of the handle.",
            "required": true,
            "type": "string"
          },
          {
            "name": "gid",
            "in": "path",
            "description": "The ID of the group to add to handle.",
            "required": true,
            "type": "string"
          }
        ],
        "x-code-samples": [
          {
            "lang": "Shell",
            "source": "onezone-rest-cli getHandleGroup hndl=DLAKSHDLKJHJjSADHLKJhlkASHLH gid=HJjLHSADHhlkASHDLAKSHDLKJLKJhlk"
          }
        ]
      },
      "put": {
        "operationId": "add_handle_group",
        "tags": [
          "Handle"
        ],
        "x-onedata-service": "onezone",
        "x-onedata-module": "handle",
        "x-onedata-resource": "handle",
        "x-onedata-method": "handle_logic:add_handle_group",
        "x-onedata-permissions": [
          "modify_handle"
        ],
        "summary": "Add handle group",
        "x-bash-codegen-description": "Allows to add a group to a handle.\n\nThis operation requires `modify_handle` privilege.\n",
        "description": "Allows to add a group to a handle.\n\nThis operation requires `modify_handle` privilege.\n\n***Example cURL requests***\n\n**Add handle group**\n```bash\ncurl -u username:password -X PUT \\\nhttps://$HOST:8443/api/v3/handles/SADHLKJhlkASHDLAKSHDLKJHJjLH/groups/DLAKSHDLKJHJjLHADHLKJh\n```\n",
        "produces": [
          "application/json"
        ],
        "responses": {
          "204": {
            "description": "Group added successfully."
          },
          "400": {
            "description": "Invalid request.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "401": {
            "description": "Authentication error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "Authorization error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Resource not found.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server Error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "parameters": [
          {
            "name": "hndl",
            "in": "path",
            "description": "The ID of the handle.",
            "required": true,
            "type": "string"
          },
          {
            "name": "gid",
            "in": "path",
            "description": "The ID of the group to add to handle.",
            "required": true,
            "type": "string"
          }
        ],
        "x-code-samples": [
          {
            "lang": "Shell",
            "source": "onezone-rest-cli addHandleGroup hndl=DLAKSHDLKJHJjSADHLKJhlkASHLH gid=HJjLHSADHhlkASHDLAKSHDLKJLKJhlk"
          }
        ]
      },
      "delete": {
        "operationId": "remove_handle_group",
        "tags": [
          "Handle"
        ],
        "x-onedata-service": "onezone",
        "x-onedata-module": "handle",
        "x-onedata-resource": "handle",
        "x-onedata-method": "handle_logic:remove_handle_group",
        "x-onedata-permissions": [
          "modify_handle"
        ],
        "summary": "Remove handle group",
        "x-bash-codegen-description": "Allows to remove a group from access to a handle.\n\nThis operation requires `modify_handle` privilege.\n",
        "description": "Allows to remove a group from access to a handle.\n\nThis operation requires `modify_handle` privilege.\n\n***Example cURL requests***\n\n**Remove handle service group**\n```bash\ncurl -u username:password -X DELETE \\\nhttps://$HOST:8443/api/v3/handles/AKSHDLKJHJjLHSADHLKJhlkASHDL/groups/JHJjLHADHLKJhDLAKSHDLK\n```\n",
        "responses": {
          "202": {
            "description": "Group will be removed."
          },
          "400": {
            "description": "Invalid request.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "401": {
            "description": "Authentication error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "Authorization error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Resource not found.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server Error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "parameters": [
          {
            "name": "hndl",
            "in": "path",
            "description": "The ID of the handle.",
            "required": true,
            "type": "string"
          },
          {
            "name": "gid",
            "in": "path",
            "description": "The ID of the group to remove from handle.",
            "required": true,
            "type": "string"
          }
        ],
        "x-code-samples": [
          {
            "lang": "Shell",
            "source": "onezone-rest-cli removeHandleGroup hndl=DLAKSHDLKJHJjSADHLKJhlkASHLH gid=HJjLHSADHhlkASHDLAKSHDLKJLKJhlk"
          }
        ]
      }
    },
    "/handles/{hndl}/groups/{gid}/privileges": {
      "get": {
        "operationId": "list_handle_group_privileges",
        "tags": [
          "Handle"
        ],
        "x-onedata-service": "onezone",
        "x-onedata-module": "handle",
        "x-onedata-resource": "handle",
        "x-onedata-method": "handle_logic:get_handle_group",
        "x-onedata-permissions": [
          "view_handle"
        ],
        "summary": "List handle group privileges",
        "x-bash-codegen-description": "Returns group privileges for accessing a handle instance.\n\nThis operation requires `view_handle` privilege.\n",
        "description": "Returns group privileges for accessing a handle instance.\n\nThis operation requires `view_handle` privilege.\n\n***Example cURL requests***\n\n**Get handle group privileges**\n```bash\ncurl -u username:password -X GET \\\nhttps://$HOST:8443/api/v3/handles/DLAKSHDLKJHJjSADHLKJhlkASHLH/groups/HJjLHSADHhlkASHDLAKSHDLKJLKJhlk/privileges\n\n{\n  \"privileges\": [\n    \"view_handle\"\n  ]\n}\n```\n",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "The list of privileges of a group to a specific handle.",
            "schema": {
              "$ref": "#/definitions/HandlePrivileges"
            }
          },
          "400": {
            "description": "Invalid request.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "401": {
            "description": "Authentication error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "Authorization error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Resource not found.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server Error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "parameters": [
          {
            "name": "hndl",
            "in": "path",
            "description": "The ID of the handle.",
            "required": true,
            "type": "string"
          },
          {
            "name": "gid",
            "in": "path",
            "description": "The ID of the group of a handle.",
            "required": true,
            "type": "string"
          }
        ],
        "x-code-samples": [
          {
            "lang": "Shell",
            "source": "onezone-rest-cli listHandleGroupPrivileges hndl=DLAKSHDLKJHJjSADHLKJhlkASHLH gid=HJjLHSADHhlkASHDLAKSHDLKJLKJhlk"
          }
        ]
      },
      "patch": {
        "operationId": "set_handle_group_privileges",
        "tags": [
          "Handle"
        ],
        "x-onedata-service": "onezone",
        "x-onedata-module": "handle",
        "x-onedata-resource": "handle",
        "x-onedata-method": "handle_logic:set_handle_group_privileges",
        "x-onedata-permissions": [
          "modify_handle"
        ],
        "summary": "Set handle groups privileges",
        "x-bash-codegen-description": "Sets group privileges for accessing a handle instance.\n\nThis operation requires `modify_handle` privilege.\n",
        "description": "Sets group privileges for accessing a handle instance.\n\nThis operation requires `modify_handle` privilege.\n\n***Example cURL requests***\n\n**Set handle group privileges**\n```bash\ncurl -u username:password -X PATCH -H \"Content-type: application/json\" \\\n-d '{\"privileges\": [\"handle_view_data\"]}' \\\nhttps://$HOST:8443/api/v3/handles/SADHLKJhlkASHDLAKSHDLKJHJjLH/groups/hlkASHDLAKSHDLKJHJjLHSADHLKJhlk/privileges\n```\n",
        "consumes": [
          "application/json"
        ],
        "responses": {
          "204": {
            "description": "Group privileges updated successfully."
          },
          "400": {
            "description": "Invalid request.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "401": {
            "description": "Authentication error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "Authorization error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Resource not found.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server Error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "parameters": [
          {
            "name": "hndl",
            "in": "path",
            "description": "The Onedata ID of the handle.",
            "required": true,
            "type": "string"
          },
          {
            "name": "gid",
            "in": "path",
            "description": "The ID of the group of a handle.",
            "required": true,
            "type": "string"
          },
          {
            "name": "privileges",
            "in": "body",
            "description": "The list of group privileges to a specific handle.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/HandlePrivileges"
            }
          }
        ],
        "x-code-samples": [
          {
            "lang": "Shell",
            "source": "echo '[{\"privileges\": [\"handle_view_data\"]}' | onezone-rest-cli setHandleGroupPrivileges hndl=DLAKSHDLKJHJjSADHLKJhlkASHLH gid=HJjLHSADHhlkASHDLAKSHDLKJLKJhlk -"
          }
        ]
      }
    },
    "/handles/{hndl}/effective_groups": {
      "get": {
        "operationId": "list_effective_handle_groups",
        "tags": [
          "Handle"
        ],
        "x-onedata-service": "onezone",
        "x-onedata-module": "handle",
        "x-onedata-resource": "handle",
        "x-onedata-method": "handle_logic:get_handle_groups",
        "x-onedata-permissions": [
          "view_handle_groups"
        ],
        "summary": "Get effective handle groups",
        "x-bash-codegen-description": "Returns effective groups with access to a handle instance.\n\nThis operation requires `view_handle` administrator privilege.\n",
        "description": "Returns effective groups with access to a handle instance.\n\nThis operation requires `view_handle` administrator privilege.\n\n***Example cURL requests***\n\n**Get handle groups**\n```bash\ncurl -u username:password -X GET \\\nhttps://$HOST:8443/api/v3/handles/SADHLKJhlkASHDLAKSHDLKJHJjLH/effective_groups\n\n{\n  \"groups\": [\n    \"LKLKJhlkASHDJLAKSHDHJjL\",\n    \"KJHJjLHDLLKLAKSJhlkASHD\"\n  ]\n}\n```\n",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "The effective list of identifiers of groups with access to specific handle.",
            "schema": {
              "$ref": "#/definitions/Groups"
            }
          },
          "400": {
            "description": "Invalid request.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "401": {
            "description": "Authentication error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "Authorization error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Resource not found.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server Error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "parameters": [
          {
            "name": "hndl",
            "in": "path",
            "description": "The ID of the handle service.",
            "required": true,
            "type": "string"
          }
        ],
        "x-code-samples": [
          {
            "lang": "Shell",
            "source": "onezone-rest-cli listEffectiveHandleGroups hndl=DLAKSHDLKJHJjSADHLKJhlkASHLH"
          }
        ]
      }
    },
    "/handles/{hndl}/effective_groups/{gid}": {
      "get": {
        "operationId": "get_effective_handle_group",
        "tags": [
          "Handle"
        ],
        "x-onedata-service": "onezone",
        "x-onedata-module": "handle",
        "x-onedata-resource": "handle",
        "x-onedata-method": "handle_logic:get_handle_group",
        "x-onedata-permissions": [
          "read_handle"
        ],
        "summary": "Get effective handle group",
        "x-bash-codegen-description": "Returns the details of an effective group with access to handle.\n\nThis operation requires `modify_handle` privilege.\n",
        "description": "Returns the details of an effective group with access to handle.\n\nThis operation requires `modify_handle` privilege.\n\n***Example cURL requests***\n\n**Get effective handle group**\n```bash\ncurl -u username:password -X GET \\\nhttps://$HOST:8443/api/v3/handles/SADHLKJhlkASHDLAKSHDLKJHJjLH/effective_groups/HwUpk8jrwxKOe45uzLFX2GVa8lKEasj4q253sptVqF8\n\n{\n  \"groupId\":\"HwUpk8jrwxKOe45uzLFX2GVa8lKEasj4q253sptVqF8\",\n  \"name\":\"Group name\",\n  \"type\":\"role\"\n}\n```\n",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Group details returned successfully.",
            "schema": {
              "$ref": "#/definitions/Group"
            }
          },
          "400": {
            "description": "Invalid request.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "401": {
            "description": "Authentication error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "Authorization error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Resource not found.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server Error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "parameters": [
          {
            "name": "hndl",
            "in": "path",
            "description": "The ID of the handle.",
            "required": true,
            "type": "string"
          },
          {
            "name": "gid",
            "in": "path",
            "description": "The ID of the group to add to handle.",
            "required": true,
            "type": "string"
          }
        ],
        "x-code-samples": [
          {
            "lang": "Shell",
            "source": "onezone-rest-cli getEffectiveHandleGroup hndl=DLAKSHDLKJHJjSADHLKJhlkASHLH gid=HJjLHSADHhlkASHDLAKSHDLKJLKJhlk"
          }
        ]
      }
    },
    "/handles/{hndl}/effective_groups/{gid}/privileges": {
      "get": {
        "operationId": "list_effective_handle_group_privileges",
        "tags": [
          "Handle"
        ],
        "x-onedata-service": "onezone",
        "x-onedata-module": "handle",
        "x-onedata-resource": "handle",
        "x-onedata-method": "handle_logic:get_handle_group",
        "x-onedata-permissions": [
          "view_handle"
        ],
        "summary": "List effective handle group privileges",
        "x-bash-codegen-description": "Returns effective group privileges for accessing a handle instance.\n\nThis operation requires `view_handle` privilege.\n",
        "description": "Returns effective group privileges for accessing a handle instance.\n\nThis operation requires `view_handle` privilege.\n\n***Example cURL requests***\n\n**Get handle group privileges**\n```bash\ncurl -u username:password -X GET \\\nhttps://$HOST:8443/api/v3/handles/DLAKSHDLKJHJjSADHLKJhlkASHLH/effective_groups/HJjLHSADHhlkASHDLAKSHDLKJLKJhlk/privileges\n\n{\n  \"privileges\": [\n    \"view_handle\"\n  ]\n}\n```\n",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "The effective list of privileges of a group to a specific handle.",
            "schema": {
              "$ref": "#/definitions/HandlePrivileges"
            }
          },
          "400": {
            "description": "Invalid request.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "401": {
            "description": "Authentication error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "Authorization error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Resource not found.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server Error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "parameters": [
          {
            "name": "hndl",
            "in": "path",
            "description": "The ID of the handle.",
            "required": true,
            "type": "string"
          },
          {
            "name": "gid",
            "in": "path",
            "description": "The ID of the group of a handle.",
            "required": true,
            "type": "string"
          }
        ],
        "x-code-samples": [
          {
            "lang": "Shell",
            "source": "onezone-rest-cli listEffectiveHandleGroupPrivileges hndl=DLAKSHDLKJHJjSADHLKJhlkASHLH gid=HJjLHSADHhlkASHDLAKSHDLKJLKJhlk"
          }
        ]
      }
    }
  },
  "definitions": {
    "Error": {
      "type": "object",
      "description": "Generic error model for REST requests.",
      "properties": {
        "error": {
          "description": "Description of the error.",
          "type": "string"
        }
      },
      "example": {
        "error": "Provided data could not be understood by the server"
      }
    },
    "User": {
      "type": "object",
      "description": "Describes a user account.",
      "properties": {
        "userId": {
          "type": "string",
          "description": "Unique user ID."
        },
        "name": {
          "type": "string",
          "description": "The user friendly name of storage resource."
        },
        "connectedAccounts": {
          "type": "array",
          "description": "The list of accounts connected to this user.",
          "items": {
            "$ref": "#/definitions/ConnectedAccount"
          }
        },
        "alias": {
          "type": "string",
          "description": "User alias"
        },
        "emailList": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "required": [
        "userId",
        "name"
      ],
      "example": {
        "userId": "ALKJSDH77i79ASDKJA-ASDBAS9-87",
        "name": "Rudolf Lingens",
        "connectedAccounts": [
          {
            "accountId": "ASD879ASD-7SADASFSsa0831",
            "providerId": "7YASBFLJ-123ASD870-ASDASD"
          },
          {
            "accountId": "QWESsD-7SADASFSsa0831",
            "providerId": "7QWEJ-123ASD870-ASDASD"
          }
        ],
        "alias": "John Doe",
        "emailList": [
          "rudolf.linges@example.com",
          "john.doe@example.com"
        ]
      }
    },
    "UserUpdateRequest": {
      "type": "object",
      "description": "User update request message.",
      "properties": {
        "name": {
          "type": "string",
          "description": "The user friendly name of storage resource."
        },
        "alias": {
          "type": "string",
          "description": "User alias"
        }
      },
      "example": {
        "name": "Rudolf Lingens",
        "alias": "John Doe"
      }
    },
    "Users": {
      "type": "object",
      "description": "List of users.",
      "properties": {
        "users": {
          "type": "array",
          "description": "The list of user Id's.",
          "items": {
            "type": "string"
          }
        }
      },
      "required": [
        "users"
      ],
      "example": {
        "users": [
          "Bmav38YI0Z2-dw-fvrZ3XP-J0HjCN0taT3_WungK",
          "ASmlkZW50aWZpZXIgOEhmSEFSSGdrbHFCa1pWSTR"
        ]
      }
    },
    "Groups": {
      "type": "object",
      "description": "List of groups.",
      "properties": {
        "groups": {
          "type": "array",
          "description": "The list of group Id's.",
          "items": {
            "type": "string"
          }
        }
      },
      "required": [
        "groups"
      ],
      "example": {
        "groups": [
          "Bmav38YI0Z2-dw-fvrZ3XP-J0HjCN0taT3_WungK",
          "ASmlkZW50aWZpZXIgOEhmSEFSSGdrbHFCa1pWSTR"
        ]
      }
    },
    "Shares": {
      "type": "object",
      "description": "List of shares.",
      "properties": {
        "shares": {
          "type": "array",
          "description": "The list of share Id's.",
          "items": {
            "type": "string"
          }
        }
      },
      "required": [
        "shares"
      ],
      "example": {
        "shares": [
          "Bmav38YI0Z2-dw-fvrZ3XP-J0HjCN0taT3_WungK",
          "ASmlkZW50aWZpZXIgOEhmSEFSSGdrbHFCa1pWSTR"
        ]
      }
    },
    "ProviderRegistrationRequest": {
      "type": "object",
      "description": "Provider registration request.",
      "properties": {
        "name": {
          "type": "string",
          "description": "Provider name."
        },
        "urls": {
          "type": "array",
          "description": "The list of urls where the provider can be reached.",
          "items": {
            "type": "string"
          }
        },
        "redirectionPoint": {
          "type": "string",
          "description": "The redirection URL for the provider."
        },
        "csr": {
          "type": "string",
          "description": "Certificate Signature Request to generate new certificate for the provider."
        },
        "latitude": {
          "type": "number",
          "x-erlang-type": "float",
          "description": "The geographical latitude of the provider data center location."
        },
        "longitude": {
          "type": "number",
          "x-erlang-type": "float",
          "description": "The geographical longitude of the provider data center location."
        }
      },
      "required": [
        "name",
        "urls",
        "redirectionPoint",
        "csr"
      ],
      "example": {
        "name": "Example provider",
        "urls": [
          "http://beta.onedata.org/provider1",
          "http://beta.onedata.org/provider2"
        ],
        "redirectionPoint": "http://beta.onedata.org/provider2",
        "csr": "-----BEGIN CERTIFICATE REQUEST-----\nMIIByjCCATMCAQAwgYkxCzAJBgNVBAYTAlVTMRMwEQYDVQQIEwpDYWxpZm9ybmlh\nMRYwFAYDVQQHEw1Nb3VudGFpbiBWaWV3MRMwEQYDVQQKEwpHb29nbGUgSW5jMR8w\nHQYDVQQLExZJbmZvcm1hdGlvbiBUZWNobm9sb2d5MRcwFQYDVQQDEw53d3cuZ29v\nZ2xlLmNvbTCBnzANBgkqhkiG9w0BAQEFAAOBjQAwgYkCgYEApZtYJCHJ4VpVXHfV\nIlstQTlO4qC03hjX+ZkPyvdYd1Q4+qbAeTwXmCUKYHThVRd5aXSqlPzyIBwieMZr\nWFlRQddZ1IzXAlVRDWwAo60KecqeAXnnUK+5fXoTI/UgWshre8tJ+x/TMHaQKR/J\ncIWPhqaQhsJuzZbvAdGA80BLxdMCAwEAAaAAMA0GCSqGSIb3DQEBBQUAA4GBAIhl\n4PvFq+e7ipARgI5ZM+GZx6mpCz44DTo0JkwfRDf+BtrsaC0q68eTf2XhYOsq4fkH\nQ0uA0aVog3f5iJxCa3Hp5gxbJQ6zV6kJ0TEsuaaOhEko9sdpCoPOnRBm2i/XRD2D\n6iNh8f8z0ShGsFqjDgFHyF3o+lUyj+UC6H1QW7bn\n-----END CERTIFICATE REQUEST-----\n",
        "latitude": 50.0647,
        "longitude": 19.945
      }
    },
    "ProviderUpdateRequest": {
      "type": "object",
      "description": "Provider settings update request.",
      "properties": {
        "name": {
          "type": "string",
          "description": "Provider name."
        },
        "urls": {
          "type": "array",
          "description": "The list of urls where the provider can be reached.",
          "items": {
            "type": "string"
          }
        },
        "redirectionPoint": {
          "type": "string",
          "description": "The redirection URL for the provider."
        },
        "latitude": {
          "type": "number",
          "x-erlang-type": "float",
          "description": "The geographical latitude of the provider data center location."
        },
        "longitude": {
          "type": "number",
          "x-erlang-type": "float",
          "description": "The geographical longitude of the provider data center location."
        }
      },
      "example": {
        "name": "Example provider",
        "redirectionPoint": "http://beta.onedata.org/provider2"
      }
    },
    "ProviderRegistrationResponse": {
      "type": "object",
      "description": "Signed certificate for registered provider.",
      "properties": {
        "id": {
          "description": "The ID of the registered provider",
          "type": "string"
        },
        "cert": {
          "description": "The signed certificate to be used when connecting to Onezone services.",
          "type": "string"
        }
      }
    },
    "ProviderDetails": {
      "type": "object",
      "description": "Provider properties.",
      "properties": {
        "providerId": {
          "type": "string",
          "description": "The provider ID."
        },
        "name": {
          "type": "string",
          "description": "Provider name."
        },
        "urls": {
          "type": "array",
          "description": "The list of urls where the provider can be reached.",
          "items": {
            "type": "string"
          }
        },
        "redirectionPoint": {
          "type": "string",
          "description": "The redirection URL for the provider."
        },
        "latitude": {
          "type": "number",
          "description": "The geographical latitude of the provider data center location."
        },
        "longitude": {
          "type": "number",
          "description": "The geographical longitude of the provider data center location."
        }
      },
      "example": {
        "name": "Example provider",
        "providerId": "H8ez0CwDZ7JMYRWn1ipmBpgJHPXzIXj0123upGkf9tk",
        "urls": [
          "http://beta.onedata.org/provider1",
          "http://beta.onedata.org/provider2"
        ],
        "redirectionPoint": "http://beta.onedata.org/provider2",
        "latitude": 50.0647,
        "longitude": 19.945
      }
    },
    "AuthenticationToken": {
      "type": "object",
      "description": "Authentication token.",
      "properties": {
        "identifier": {
          "type": "string",
          "description": "The authentication token for Onezone service."
        }
      },
      "required": [
        "identifier"
      ],
      "example": {
        "identifier": "JKAxNWxvY2F0aW9uIG9uZXpvbmUKMDAzYmlkZW50aWZpZXIgOEhmSEFSSGdrbHFCa1pWSTRsNk1CVHZTU3Z0OThwcHA2OTQ4czhRN1NPawowMDFhY2lkIHRpbWUgPCAxNDk2MTQwMTQ0CjAwMmZzaWduYXR1cmUg88OIBmav38YI0Z2-dw-fvrZ3XP-J0HjCN0taT3_WungK"
      }
    },
    "Space": {
      "type": "object",
      "description": "User space parameters.",
      "properties": {
        "spaceId": {
          "type": "string",
          "description": "Unique ID of the space."
        },
        "name": {
          "type": "string",
          "description": "The name of the space."
        },
        "providersSupports": {
          "type": "object",
          "description": "The map of providers Ids supporting this space and the size of provisioned storage in bytes.\n",
          "additionalProperties": {
            "type": "integer",
            "description": "Size of storage provisioned for this space by provider.\n"
          }
        }
      },
      "required": [
        "spaceId",
        "name",
        "providersSupports"
      ],
      "example": {
        "spaceId": "Xnp1JVpWfL8_stHJgct76AFALjRsI0W3rNs1nfMwqnY",
        "name": "My Private space",
        "providersSupports": {
          "hxfMCWmquqAIjG1GeG2eZY8qvs8iRIn09HzjCJilnSE": 5368709120
        }
      }
    },
    "SpaceCreateRequest": {
      "type": "object",
      "description": "New space parameters.",
      "properties": {
        "name": {
          "type": "string",
          "description": "The name of the space."
        }
      },
      "required": [
        "name"
      ],
      "example": {
        "name": "My Private space"
      }
    },
    "SpaceSupportToken": {
      "type": "object",
      "description": "Space support token for provider.",
      "properties": {
        "token": {
          "type": "string",
          "description": "The token for supporting a space."
        }
      },
      "required": [
        "token"
      ],
      "example": {
        "token": "JKAxNWxvY2F0aW9uIG9uZXpvbmUKMDAzYmlkZW50aWZpZXIgOEhmSEFSSGdrbHFCa1pWSTRsNk1CVHZTU3Z0OThwcHA2OTQ4czhRN1NPawowMDFhY2lkIHRpbWUgPCAxNDk2MTQwMTQ0CjAwMmZzaWduYXR1cmUg88OIBmav38YI0Z2-dw-fvrZ3XP-J0HjCN0taT3_WungK"
      }
    },
    "SpaceSupportRequest": {
      "type": "object",
      "description": "Space support token for provider.",
      "properties": {
        "token": {
          "type": "string",
          "description": "The token for supporting a space."
        },
        "size": {
          "type": "integer",
          "description": "The size of requested supports in bytes."
        }
      },
      "required": [
        "token",
        "size"
      ],
      "example": {
        "token": "JKAxNWxvY2F0aW9uIG9uZXpvbmUKMDAzYmlkZW50aWZpZXIgOEhmSEFSSGdrbHFCa1pWSTRsNk1CVHZTU3Z0OThwcHA2OTQ4czhRN1NPawowMDFhY2lkIHRpbWUgPCAxNDk2MTQwMTQ0CjAwMmZzaWduYXR1cmUg88OIBmav38YI0Z2-dw-fvrZ3XP-J0HjCN0taT3_WungK",
        "size": 1024000000
      }
    },
    "ClientToken": {
      "type": "object",
      "description": "Client token for authorization from command line or via REST.",
      "properties": {
        "token": {
          "type": "string",
          "description": "The access token.",
          "items": {
            "type": "string"
          }
        }
      },
      "required": [
        "token"
      ],
      "example": {
        "token": "JKAxNWxvY2F0aW9uIG9uZXpvbmUKMDAzYmlkZW50aWZpZXIgOEhmSEFSSGdrbHFCa1pWSTRsNk1CVHZTU3Z0OThwcHA2OTQ4czhRN1NPawowMDFhY2lkIHRpbWUgPCAxNDk2MTQwMTQ0CjAwMmZzaWduYXR1cmUg88OIBmav38YI0Z2-dw-fvrZ3XP-J0HjCN0taT3_WungK"
      }
    },
    "ClientTokens": {
      "type": "object",
      "description": "Client tokens for authorization from command line or via REST.",
      "properties": {
        "tokens": {
          "type": "array",
          "description": "The list of client tokens.",
          "items": {
            "type": "string"
          }
        }
      },
      "required": [
        "tokens"
      ],
      "example": {
        "tokens": [
          "JKAxNWxvY2F0aW9uIG9uZXpvbmUKMDAzYmlkZW50aWZpZXIgOEhmSEFSSGdrbHFCa1pWSTRsNk1CVHZTU3Z0OThwcHA2OTQ4czhRN1NPawowMDFhY2lkIHRpbWUgPCAxNDk2MTQwMTQ0CjAwMmZzaWduYXR1cmUg88OIBmav38YI0Z2-dw-fvrZ3XP-J0HjCN0taT3_WungK",
          "sNk1CVHZTU3Z0OThwcHA2OTQ4czhRN1NPawowMDFhY2lkIHRpbWUgPCAxNDk2MTQwMTQ0CjAwMmZzaWduYXR1cmUg88OIBmav38YI0Z2-dw-fvrZ3XP-J0HjCN0taT3_WungKJKAxNWxvY2F0aW9uIG9uZXpvbmUKMDAzYmlkZW50aWZpZXIgOEhmSEFSSGdrbHFCa1pWSTR"
        ]
      }
    },
    "ChildGroups": {
      "type": "object",
      "description": "The list of child groups.",
      "properties": {
        "nested_groups": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "example": {
        "groups": [
          "JKLHASGDFJLHGASDHJGLAHJSD",
          "ASDkjasdaksdKASDkajsdKAJS"
        ]
      }
    },
    "DefaultSpace": {
      "type": "object",
      "description": "Default space Id.",
      "properties": {
        "spaceId": {
          "type": "string",
          "description": "The ID of the default user space."
        }
      },
      "required": [
        "spaceId"
      ],
      "example": {
        "spaceId": "7YASBFLJ-123ASD870-ASDASD"
      }
    },
    "DefaultProvider": {
      "type": "object",
      "description": "Default provider Id.",
      "properties": {
        "providerId": {
          "type": "string",
          "description": "The ID of the default user provider."
        }
      },
      "required": [
        "providerId"
      ],
      "example": {
        "providerId": "oOVF-KrO1P6rpA0LFgNVI8NxuhxyQMUnrYzjAnKiyAY"
      }
    },
    "SpaceInviteToken": {
      "type": "object",
      "description": "Space invitation token for user.",
      "properties": {
        "token": {
          "type": "string",
          "description": "The token for joining a space."
        }
      },
      "required": [
        "token"
      ],
      "example": {
        "token": "JKAxNWxvY2F0aW9uIG9uZXpvbmUKMDAzYmlkZW50aWZpZXIgOEhmSEFSSGdrbHFCa1pWSTRsNk1CVHZTU3Z0OThwcHA2OTQ4czhRN1NPawowMDFhY2lkIHRpbWUgPCAxNDk2MTQwMTQ0CjAwMmZzaWduYXR1cmUg88OIBmav38YI0Z2-dw-fvrZ3XP-J0HjCN0taT3_WungK"
      }
    },
    "Group": {
      "type": "object",
      "description": "Group details.",
      "properties": {
        "groupId": {
          "type": "string",
          "description": "Unique group Id."
        },
        "name": {
          "type": "string",
          "description": "The name of the space."
        },
        "type": {
          "type": "string",
          "description": "The type of the group.",
          "enum": [
            "organization",
            "unit",
            "team",
            "role"
          ]
        }
      },
      "required": [
        "groupId",
        "name",
        "type"
      ],
      "example": {
        "groupId": "ALSKDHLASD8ASDNjasd99",
        "name": "Test group",
        "type": "role"
      }
    },
    "GroupCreateRequest": {
      "type": "object",
      "description": "Group create request.",
      "properties": {
        "name": {
          "type": "string",
          "description": "The name of the space."
        },
        "type": {
          "type": "string",
          "description": "The type of the group. If not specified, `role` is assumed.",
          "enum": [
            "organization",
            "unit",
            "team",
            "role"
          ]
        }
      },
      "required": [
        "name"
      ],
      "example": {
        "name": "Test group",
        "type": "role"
      }
    },
    "GroupUpdateRequest": {
      "type": "object",
      "description": "Group update request.",
      "properties": {
        "name": {
          "type": "string",
          "description": "The name of the space."
        },
        "type": {
          "type": "string",
          "description": "The type of the group.",
          "enum": [
            "organization",
            "unit",
            "team",
            "role"
          ]
        }
      },
      "example": {
        "type": "unit"
      }
    },
    "GroupInviteToken": {
      "type": "object",
      "description": "Group invitation token for user.",
      "properties": {
        "token": {
          "type": "string",
          "description": "The token for joining a group."
        }
      },
      "required": [
        "token"
      ],
      "example": {
        "token": "JKAxNWxvY2F0aW9uIG9uZXpvbmUKMDAzYmlkZW50aWZpZXIgOEhmSEFSSGdrbHFCa1pWSTRsNk1CVHZTU3Z0OThwcHA2OTQ4czhRN1NPawowMDFhY2lkIHRpbWUgPCAxNDk2MTQwMTQ0CjAwMmZzaWduYXR1cmUg88OIBmav38YI0Z2-dw-fvrZ3XP-J0HjCN0taT3_WungK"
      }
    },
    "GroupInviteTokenRequest": {
      "type": "object",
      "description": "Group invitation token request."
    },
    "ConnectedAccount": {
      "type": "object",
      "description": "Default space Id.",
      "properties": {
        "accountId": {
          "type": "string",
          "description": "Account Id."
        },
        "providerId": {
          "type": "string",
          "description": "Provider Id."
        }
      },
      "example": {
        "accountId": "ASD879ASD-7SADASFSsa0831",
        "providerId": "7YASBFLJ-123ASD870-ASDASD"
      }
    },
    "SpacePrivileges": {
      "type": "object",
      "description": "The list of space privileges.",
      "properties": {
        "operation": {
          "type": "string",
          "default": "set",
          "description": "This field determines how the included privileges are handled ('set' - resets to the specified list, 'grant' - adds the specified privileges to existing ones and 'revoke' - removes the listed privileges).\n",
          "enum": [
            "set",
            "grant",
            "revoke"
          ]
        },
        "privileges": {
          "type": "array",
          "items": {
            "type": "string",
            "enum": [
              "space_add_provider",
              "space_change_data",
              "space_invite_group",
              "space_invite_user",
              "space_manage_shares",
              "space_remove",
              "space_remove_group",
              "space_remove_provider",
              "space_remove_user",
              "space_set_privileges",
              "space_view_data",
              "space_write_files"
            ]
          }
        }
      },
      "required": [
        "privileges"
      ],
      "example": {
        "operation": [
          "set"
        ],
        "privileges": [
          "space_add_provider",
          "space_change_data",
          "space_invite_group",
          "space_invite_user",
          "space_manage_shares",
          "space_remove",
          "space_remove_group",
          "space_remove_provider",
          "space_remove_user",
          "space_set_privileges",
          "space_view_data",
          "space_write_files"
        ]
      }
    },
    "SpaceAlias": {
      "type": "object",
      "description": "Space alias.",
      "properties": {
        "alias": {
          "type": "string",
          "description": "Unique ID of the space."
        }
      },
      "required": [
        "alias"
      ],
      "example": {
        "alias": "Another name."
      }
    },
    "GroupPrivileges": {
      "type": "object",
      "description": "The list of group privileges.",
      "properties": {
        "operation": {
          "type": "string",
          "default": "set",
          "description": "This field determines how the included privileges are handled ('set' - resets to the specified list, 'grant' - adds the specified privileges to existing ones and 'revoke' - removes the listed privileges)\n",
          "enum": [
            "set",
            "grant",
            "revoke"
          ]
        },
        "privileges": {
          "type": "array",
          "items": {
            "type": "string",
            "enum": [
              "group_change_data",
              "group_create_space",
              "group_invite_group",
              "group_invite_user",
              "group_join_group",
              "group_join_space",
              "group_leave_space",
              "group_remove",
              "group_remove_group",
              "group_remove_user",
              "group_set_privileges",
              "group_view_data"
            ]
          }
        }
      },
      "required": [
        "privileges"
      ],
      "example": {
        "privileges": [
          "group_change_data",
          "group_create_space",
          "group_invite_group",
          "group_invite_user",
          "group_join_group",
          "group_join_space",
          "group_leave_space",
          "group_remove",
          "group_remove_group",
          "group_remove_user",
          "group_set_privileges",
          "group_view_data"
        ]
      }
    },
    "OnezonePrivileges": {
      "type": "object",
      "description": "The list of Onezone privileges.",
      "properties": {
        "operation": {
          "type": "string",
          "default": "set",
          "description": "This field determines how the included privileges are handled ('set' - resets to the specified list, 'grant' - adds the specified privileges to existing ones and 'revoke' - removes the listed privileges).\n",
          "enum": [
            "set",
            "grant",
            "revoke"
          ]
        },
        "privileges": {
          "type": "array",
          "items": {
            "type": "string",
            "enum": [
              "add_member_to_space",
              "list_groups",
              "list_groups_of_provider",
              "list_providers",
              "list_providers_of_space",
              "list_spaces",
              "list_spaces_of_provider",
              "list_users",
              "list_users_of_provider",
              "oz_groups_add_members",
              "oz_groups_list_groups",
              "oz_groups_list_users",
              "oz_groups_remove_members",
              "oz_handle_services_create",
              "oz_handle_services_list",
              "oz_handles_list",
              "oz_providers_delete",
              "oz_shares_list",
              "oz_spaces_list_groups",
              "oz_spaces_list_users",
              "oz_users_delete",
              "remove_member_from_space",
              "set_privileges",
              "view_privileges"
            ]
          }
        }
      },
      "required": [
        "privileges"
      ],
      "example": {
        "operation": [
          "set"
        ],
        "privileges": [
          "add_member_to_space",
          "list_groups",
          "list_groups_of_provider",
          "list_providers",
          "list_providers_of_space",
          "list_spaces",
          "list_spaces_of_provider",
          "list_users",
          "list_users_of_provider",
          "oz_groups_add_members",
          "oz_groups_list_groups",
          "oz_groups_list_users",
          "oz_groups_remove_members",
          "oz_handles_list",
          "oz_handle_services_create",
          "oz_handle_services_list",
          "oz_providers_delete",
          "oz_shares_list",
          "oz_spaces_list_groups",
          "oz_spaces_list_users",
          "oz_users_delete",
          "remove_member_from_space",
          "set_privileges",
          "view_privileges"
        ]
      }
    },
    "HandleService": {
      "type": "object",
      "description": "Handle service instance.\n",
      "properties": {
        "handleServiceId": {
          "type": "string",
          "description": "Handle service Id."
        },
        "name": {
          "type": "string",
          "description": "The user defined name of the service.\n"
        },
        "proxyEndpoint": {
          "type": "string",
          "description": "The endpoint of the Handle service proxy, i.e. a service which implements logic specific for particular Handle service.\n"
        },
        "serviceProperties": {
          "$ref": "#/definitions/HandleServiceProperties"
        }
      },
      "required": [
        "name",
        "proxyEndpoint",
        "serviceProperties"
      ],
      "example": {
        "handleServiceId": "SADHLKJhlkASHDLAKSHDLKJHJjLH",
        "name": "MyCommunity Handle service",
        "proxyEndpoint": "https://localhost:17000/handle_proxy",
        "serviceProperties": {
          "type": "DOI",
          "host": "https://mds.test.datacite.org",
          "doiEndpoint": "/doi",
          "metadataEndpoint": "/metadata",
          "mediaEndpoint": "/media",
          "prefix": 10.5072,
          "username": "alice",
          "password": "pa$$word",
          "identifierTemplate": "{{space.name}}-{{space.guid}}",
          "allowTemplateOverride": false
        }
      }
    },
    "HandleServiceProperties": {
      "type": "object",
      "description": "An abstract type for [Handle](http://handle.net) identifier services properties.\n",
      "discriminator": "type",
      "x-onedata-oneof": true,
      "x-onedata-subclasses": [
        "doi",
        "pid"
      ],
      "properties": {
        "type": {
          "type": "string",
          "description": "The type of handle service.",
          "x-discriminator": true,
          "enum": [
            "DOI",
            "PID"
          ]
        }
      },
      "required": [
        "type"
      ]
    },
    "HandleServicePropertiesUpdate": {
      "type": "object",
      "description": "An abstract type for [Handle](http://handle.net) identifier services properties.\n",
      "discriminator": "type",
      "x-onedata-oneof": true,
      "x-onedata-subclasses": [
        "doi",
        "pid"
      ],
      "properties": {
        "type": {
          "type": "string",
          "description": "The type of handle service.",
          "x-discriminator": true,
          "enum": [
            "DOI",
            "PID"
          ]
        }
      },
      "required": [
        "type"
      ]
    },
    "DOIServiceProperties": {
      "description": "The properties of a [DOI](http://doi.org) registration service.\n",
      "allOf": [
        {
          "$ref": "#/definitions/HandleServiceProperties"
        },
        {
          "type": "object",
          "x-discriminator-value": "DOI",
          "properties": {
            "host": {
              "type": "string",
              "description": "The service host, including the protocol.\n"
            },
            "doiEndpoint": {
              "type": "string",
              "description": "DOI registration API endpoint relative to the host.\n"
            },
            "metadataEndpoint": {
              "type": "string",
              "description": "Metadata registration API endpoint relative to the host.\n"
            },
            "mediaEndpoint": {
              "type": "string",
              "description": "Media registration API endpoint relative to the host.\n"
            },
            "prefix": {
              "type": "string",
              "description": "The DOI prefix under which new DOI's can be minted using this account.\n"
            },
            "username": {
              "type": "string",
              "description": "The username for login to the DOI service.\n"
            },
            "password": {
              "type": "string",
              "description": "The password for login to the DOI service.\n"
            },
            "identifierTemplate": {
              "type": "string",
              "description": "The template for generation of new DOI's using this account.\n"
            },
            "allowTemplateOverride": {
              "type": "boolean",
              "description": "Specifies whether users can override the DOI suffix template for this account during registration of new DOI's.\n"
            }
          },
          "required": [
            "host",
            "doiEndpoint",
            "metadataEndpoint",
            "mediaEndpoint",
            "prefix",
            "username",
            "password"
          ]
        }
      ],
      "example": {
        "type": "DOI",
        "host": "https://mds.test.datacite.org",
        "doiEndpoint": "/doi",
        "metadataEndpoint": "/metadata",
        "mediaEndpoint": "/media",
        "prefix": 10.572,
        "username": "alice",
        "password": "pa$$word",
        "identifierTemplate": "{{space.name}}-{{space.guid}}",
        "allowTemplateOverride": false
      }
    },
    "PIDServiceProperties": {
      "description": "The properties of a [PID](http://www.pidconsortium.eu/) registration service.\n",
      "allOf": [
        {
          "$ref": "#/definitions/HandleServiceProperties"
        },
        {
          "type": "object",
          "x-discriminator-value": "PID",
          "properties": {
            "endpoint": {
              "type": "string",
              "description": "The HTTP endpoint for handle registration.\n"
            },
            "prefix": {
              "type": "string",
              "description": "The PID prefix under which new PID's can be minted using this account.\n"
            },
            "username": {
              "type": "string",
              "description": "The username for login to the PID service.\n"
            },
            "password": {
              "type": "string",
              "description": "The password for login to the PID service.\n"
            },
            "autoSuffixGeneration": {
              "type": "boolean",
              "description": "When set to true, the suffixes will be generated automatically by the registration service.\n"
            },
            "suffixPrefix": {
              "type": "string",
              "description": "Auto generated PID suffixes have a format PREFIX-UUID-SUFFIX, UUID is generated by the registration service.\n"
            },
            "suffixSuffix": {
              "type": "string",
              "description": "Auto generated PID suffixes have a format PREFIX-UUID-SUFFIX, UUID is generated by the registration service.\n"
            },
            "identifierTemplate": {
              "type": "string",
              "description": "Template for generating PID's based Onedata properties (e.g. space UUID). If set to `true` the `autoSuffixGeneration` must be `false`.\n"
            },
            "allowTemplateOverride": {
              "type": "string",
              "description": "Allow users to create custom identifiers regardless of the specified template.\n"
            }
          },
          "required": [
            "endpoint",
            "prefix",
            "username",
            "password",
            "autoSuffixGeneration",
            "suffixPrefix",
            "suffixSuffix"
          ]
        }
      ],
      "example": {
        "type": "PID",
        "name": "iMarine EPIC",
        "endpoint": "https://epic.grnet.gr/api/v2/handles",
        "prefix": 11789,
        "autoSuffixGeneration": false,
        "suffixPrefix": "{{space.name}}",
        "suffixSuffix": "{{space.uuid}}",
        "username": "alice",
        "password": "pa$$word",
        "identifierTemplate": "{{space.name}}-{{space.guid}}",
        "allowTemplateOverride": false
      }
    },
    "HandleServiceUpdate": {
      "type": "object",
      "description": "Handle service instance.\n",
      "properties": {
        "name": {
          "type": "string",
          "description": "The user defined name of the service.  \n"
        },
        "proxyEndpoint": {
          "type": "string",
          "description": "The endpoint of the Handle service proxy, i.e. a service which implements logic specific for particular Handle service.\n"
        },
        "serviceProperties": {
          "$ref": "#/definitions/HandleServicePropertiesUpdate"
        }
      },
      "example": {
        "proxyEndpoint": "https://newendpointdomain.com:17000/handle_proxy"
      }
    },
    "DOIServicePropertiesUpdate": {
      "description": "The properties of a [DOI](http://doi.org) registration service.\n",
      "allOf": [
        {
          "$ref": "#/definitions/HandleServicePropertiesUpdate"
        },
        {
          "type": "object",
          "x-discriminator-value": "DOI",
          "properties": {
            "host": {
              "type": "string",
              "description": "The service host, including the protocol.\n"
            },
            "doiEndpoint": {
              "type": "string",
              "description": "DOI registration API endpoint relative to the host.\n"
            },
            "metadataEndpoint": {
              "type": "string",
              "description": "Metadata registration API endpoint relative to the host.\n"
            },
            "mediaEndpoint": {
              "type": "string",
              "description": "Media registration API endpoint relative to the host.\n"
            },
            "prefix": {
              "type": "string",
              "description": "The DOI prefix under which new DOI's can be minted using this account.\n"
            },
            "username": {
              "type": "string",
              "description": "The username for login to the DOI service.\n"
            },
            "password": {
              "type": "string",
              "description": "The password for login to the DOI service.\n"
            },
            "identifierTemplate": {
              "type": "string",
              "description": "The template for generation of new DOI's using this account.\n"
            },
            "allowTemplateOverride": {
              "type": "boolean",
              "description": "Specifies whether users can override the DOI suffix template for this account during registration of new DOI's.\n"
            }
          }
        }
      ],
      "example": {
        "type": "DOI",
        "host": "https://mds.test.datacite.org",
        "username": "alice",
        "password": "pa$$word"
      }
    },
    "PIDServicePropertiesUpdate": {
      "description": "The properties of a [PID](http://www.pidconsortium.eu/) registration service update.\n",
      "allOf": [
        {
          "$ref": "#/definitions/HandleServicePropertiesUpdate"
        },
        {
          "type": "object",
          "x-discriminator-value": "PID",
          "properties": {
            "endpoint": {
              "type": "string",
              "description": "The HTTP endpoint for handle registration.\n"
            },
            "prefix": {
              "type": "string",
              "description": "The PID prefix under which new PID's can be minted using this account.\n"
            },
            "username": {
              "type": "string",
              "description": "The username for login to the PID service.\n"
            },
            "password": {
              "type": "string",
              "description": "The password for login to the PID service.\n"
            },
            "autoSuffixGeneration": {
              "type": "boolean",
              "description": "When set to true, the suffixes will be generated automatically by the registration service.\n"
            },
            "suffixPrefix": {
              "type": "string",
              "description": "Auto generated PID suffixes have a format PREFIX-UUID-SUFFIX, UUID is generated by the registration service.\n"
            },
            "suffixSuffix": {
              "type": "string",
              "description": "Auto generated PID suffixes have a format PREFIX-UUID-SUFFIX, UUID is generated by the registration service.\n"
            },
            "identifierTemplate": {
              "type": "string",
              "description": "Template for generating PID's based Onedata properties (e.g. space UUID). If set to `true` the `autoSuffixGeneration` must be `false`.\n"
            },
            "allowTemplateOverride": {
              "type": "string",
              "description": "Allow users to create custom identifiers regardless of the specified template.\n"
            }
          }
        }
      ],
      "example": {
        "type": "PID",
        "endpoint": "https://epic.grnet.gr/api/v2/handles",
        "username": "alice",
        "password": "pa$$word"
      }
    },
    "Handle": {
      "type": "object",
      "description": "Handle properties.",
      "properties": {
        "handleId": {
          "type": "string",
          "description": "Unique ID the handle (internal to Onedata)."
        },
        "handleServiceId": {
          "type": "string",
          "description": "ID of the service where the handle was registered."
        },
        "resourceType": {
          "type": "string",
          "description": "The type of resource to be registered.",
          "enum": [
            "Share"
          ]
        },
        "resourceId": {
          "type": "integer",
          "description": "The Onedata GUID of the resource to which the handle should be resolved."
        },
        "metadata": {
          "type": "string",
          "description": "Dublin Core metadata for the resource encoded in XML."
        },
        "timestamp": {
          "type": "string",
          "description": "Handle registration timestamp."
        }
      },
      "example": {
        "handleId": "10.572/test-handle-G9uZXpvbmUKMDAzYmlkZW50aWZpZXIgOEh/123",
        "resourceType": "Share",
        "resourceId": "RsNk1CVHZTU3Z0OThwcHAhRN1NPawowMDFhY2lkIHRpbWUgPC",
        "handleServiceId": "JKAxNWxvY2F0aW9uImSEFSSGdrbHFCa1pWST2OTQ4cz",
        "metadata": "<?xml version=\\\"1.0\\\"?> <!DOCTYPE rdf:RDF SYSTEM \\\\\"http://dublincore.org/2000/12/01-dcmes-xml-dtd.dtd\\\"> <rdf:RDF xmlns:rdf=\\\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\\\"\n         xmlns:dc=\\\"http://purl.org/dc/elements/1.1/\\\">\n  <rdf:Description rdf:about=\\\"http://example.com/resouces/1\\\">\n    <dc:title>Example Resource</dc:title>\n    <dc:creator>John Doe</dc:creator>\n    <dc:publisher>MIT</dc:publisher>\n    <dc:date>2000-06-06</dc:date>\n  </rdf:Description>\n</rdf:RDF>\n",
        "timestamp": "2016-07-16T18:20:30.450Z"
      }
    },
    "Handles": {
      "type": "object",
      "description": "List of handles.",
      "properties": {
        "handles": {
          "type": "array",
          "description": "The list of handle Id's.",
          "items": {
            "type": "string"
          }
        }
      },
      "required": [
        "handles"
      ],
      "example": {
        "handles": [
          "Bmav38YI0Z2-dw-fvrZ3XP-J0HjCN0taT3_WungK",
          "ASmlkZW50aWZpZXIgOEhmSEFSSGdrbHFCa1pWSTR"
        ]
      }
    },
    "HandleRegistrationRequest": {
      "type": "object",
      "description": "This type contains attributes necessary to register a handle identifier\nfor some Onedata resource (e.g. share).\n",
      "properties": {
        "handleServiceId": {
          "type": "string",
          "description": "The Onedata GUID of the handle service registered."
        },
        "resourceType": {
          "type": "string",
          "description": "The type of resource to be registered."
        },
        "resourceId": {
          "type": "string",
          "description": "The ID of the resource to be assigned a handle identifier."
        },
        "metadata": {
          "type": "string",
          "description": "Dublin Core metadata for the resource encoded in XML."
        }
      },
      "required": [
        "handleServiceId",
        "resourceType",
        "resourceId",
        "metadata"
      ],
      "example": {
        "handleServiceId": "ALKJSDH77i79ASDKJA-ASDBAS9-87",
        "resourceType": "Share",
        "resourceId": "LKJAHSDA796IASDKBjkhaksjdk568787asdhjbasd",
        "metadata": "<?xml version=\\\"1.0\\\"?> <!DOCTYPE rdf:RDF SYSTEM \\\\\"http://dublincore.org/2000/12/01-dcmes-xml-dtd.dtd\\\"> <rdf:RDF xmlns:rdf=\\\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\\\"\n         xmlns:dc=\\\"http://purl.org/dc/elements/1.1/\\\">\n  <rdf:Description rdf:about=\\\"http://example.com/resouces/1\\\">\n    <dc:title>Example Resource</dc:title>\n    <dc:creator>John Doe</dc:creator>\n    <dc:publisher>MIT</dc:publisher>\n    <dc:date>2000-06-06</dc:date>\n  </rdf:Description>\n</rdf:RDF>"
      }
    },
    "HandlePrivileges": {
      "type": "object",
      "description": "The list of handle privileges.",
      "properties": {
        "operation": {
          "type": "string",
          "default": "set",
          "description": "This field determines how the included privileges are handled ('set' - resets to the specified list, 'grant' - adds the specified privileges to existing ones and 'revoke' - removes the listed privileges)\n",
          "enum": [
            "set",
            "grant",
            "revoke"
          ]
        },
        "privileges": {
          "type": "array",
          "items": {
            "type": "string",
            "enum": [
              "delete_handle",
              "modify_handle",
              "view_handle"
            ]
          }
        }
      },
      "required": [
        "privileges"
      ],
      "example": {
        "operation": [
          "grant"
        ],
        "privileges": [
          "delete_handle",
          "modify_handle",
          "view_handle"
        ]
      }
    },
    "HandleServices": {
      "type": "object",
      "description": "List of handle services.",
      "properties": {
        "handle_services": {
          "type": "array",
          "description": "The list of handle services Id's.",
          "items": {
            "type": "string"
          }
        }
      },
      "required": [
        "handle_services"
      ],
      "example": {
        "tokens": [
          "Bmav38YI0Z2-dw-fvrZ3XP-J0HjCN0taT3_WungK",
          "ASmlkZW50aWZpZXIgOEhmSEFSSGdrbHFCa1pWSTR"
        ]
      }
    },
    "HandleServicePrivileges": {
      "type": "object",
      "description": "The list of handle service privileges.",
      "properties": {
        "operation": {
          "type": "string",
          "default": "set",
          "description": "This field determines how the included privileges are handled ('set' - resets to the specified list, 'grant' - adds the specified privileges to existing ones and 'revoke' - removes the listed privileges)\n",
          "enum": [
            "set",
            "grant",
            "revoke"
          ]
        },
        "privileges": {
          "type": "array",
          "items": {
            "type": "string",
            "enum": [
              "delete_handle_service",
              "handle_service_list_handles",
              "modify_handle_service",
              "register_handle",
              "view_handle_service"
            ]
          }
        }
      },
      "required": [
        "privileges"
      ],
      "example": {
        "operation": [
          "grant"
        ],
        "privileges": [
          "view_handle_service",
          "modify_handle_service",
          "delete_handle_service",
          "register_handle",
          "handle_service_list_handles"
        ]
      }
    },
    "Share": {
      "type": "object",
      "description": "Share parameters.",
      "properties": {
        "shareId": {
          "type": "string",
          "description": "Share ID."
        },
        "name": {
          "type": "string",
          "description": "The user defined name for the share."
        },
        "publicUrl": {
          "type": "string",
          "description": "The publicly accessible URL for the share."
        },
        "rootFileId": {
          "type": "string",
          "description": "The ID of the shared file or folder."
        },
        "spaceId": {
          "type": "string",
          "description": "The ID of the space in which the share was created."
        },
        "handleId": {
          "type": "string",
          "description": "The Id of open data Handle (e.g. DOI or PID) assigned to this share."
        }
      },
      "required": [
        "shareId",
        "name",
        "publicUrl",
        "rootFileId",
        "spaceId"
      ],
      "example": {
        "shareId": "8asd89asdlbKJSBD79a8sdkLKJH8asdkjasd8989",
        "name": "MyNewShare",
        "publicUrl": "https://onedata.org/shares/ASDLKJH8asdkjasd89898asd89asdlbKJSBDikjab89-asdmASD",
        "rootFileId": "ASDkjlkkasdjoiwnafldnacbaasd8879a8sdkjb",
        "spaceId": "LKJH8asdkjasd89898asd89asdlbKJSBD79a8sdk",
        "handleId": "doi:10.15911/MyShares.726855"
      }
    },
    "ShareUpdateRequest": {
      "type": "object",
      "description": "Share parameters.",
      "properties": {
        "name": {
          "type": "string",
          "description": "The user defined name for the share."
        }
      },
      "example": {
        "name": "MyNewShare"
      }
    },
    "Spaces": {
      "type": "object",
      "description": "List of spaces.",
      "properties": {
        "spaces": {
          "type": "array",
          "description": "The list of space Id's.",
          "items": {
            "type": "string"
          }
        }
      },
      "required": [
        "spaces"
      ],
      "example": {
        "spaces": [
          "Bmav38YI0Z2-dw-fvrZ3XP-J0HjCN0taT3_WungK",
          "ASmlkZW50aWZpZXIgOEhmSEFSSGdrbHFCa1pWSTR"
        ]
      }
    },
    "Providers": {
      "type": "object",
      "description": "List of providers.",
      "properties": {
        "providers": {
          "type": "array",
          "description": "The list of provider Id's.",
          "items": {
            "type": "string"
          }
        }
      },
      "required": [
        "providers"
      ],
      "example": {
        "providers": [
          "Bmav38YI0Z2-dw-fvrZ3XP-J0HjCN0taT3_WungK",
          "ASmlkZW50aWZpZXIgOEhmSEFSSGdrbHFCa1pWSTR"
        ]
      }
    }
  },
  "tags": [
    {
      "name": "User",
      "description": "Regular user operations"
    },
    {
      "name": "Users",
      "description": "User management operations"
    },
    {
      "name": "Group",
      "description": "Group management operations"
    },
    {
      "name": "Space",
      "description": "Space management operations"
    },
    {
      "name": "Provider",
      "description": "Provider management operations"
    },
    {
      "name": "Handle",
      "description": "Operations for managing Handle system service and identifier generation."
    }
  ],
  "x-tagGroups": [
    {
      "name": "Regular user operations",
      "tags": [
        "User"
      ]
    },
    {
      "name": "User administration",
      "tags": [
        "Users"
      ]
    },
    {
      "name": "Group management",
      "tags": [
        "Group"
      ]
    },
    {
      "name": "Space management",
      "tags": [
        "Space"
      ]
    },
    {
      "name": "Provider management",
      "tags": [
        "Provider"
      ]
    },
    {
      "name": "Handle (DOI, PID) management",
      "tags": [
        "Handle"
      ]
    }
  ],
  "securityDefinitions": {
    "api_key": {
      "type": "apiKey",
      "name": "X-Auth-Token",
      "in": "header"
    },
    "basic": {
      "type": "basic"
    }
  },
  "security": [
    {
      "basic": []
    },
    {
      "api_key": []
    }
  ]
}