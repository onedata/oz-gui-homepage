{
  "swagger": "2.0",
  "basePath": "/api/v3/onezone",
  "info": {
    "version": "3.0.0-rc9",
    "title": "Onezone",
    "description": "This is the RESTful API definition of Onezone component of Onedata data management system [onedata.org](http://www.onedata.org).\n\n> This API is defined using [Swagger](http://swagger.io/), the JSON specification can be used to automatically generate\n> client libraries - [swagger.json](../../../swagger/onezone/swagger.json).\n\nThis API allows control and configuration of local Onezone service deployment, in particular management\nof users, spaces, groups and providers.\n\n## Authentication and permissions\nIn order to be able to use this API the REST client must be able to authenticate with the Onezone service.\n\nREST API operations from the permissions perspective in Onezone service can be divided into 2 groups,\ndepending on the actor making the request:\n * **User requests** - regular end user requests are authenticated based on the `macaroon` header, which\n must include valid client access token, and authorization is made based on the privileges assigned\n to the user in the system. Each operation in this API that is available to end users, has a list of\n required privileges, except for the operations which are related to user account management, i.e.\n each user can perform any operation on his account, the `macaroon` header example:\n ```\n   macaroon: IAUYCGOUASGDJHASDJKVAHSDJHASDKJHABSDKJHBASKJHDBKJHASBDKJHBASDKJHBASD...\n ```\n * **Provider requests** - when a Oneprovider service needs to request some action from the Onezone service,\n it must authenticate using the peer certificate which was assigned to this provider when registering\n in the Onezone service. In such case the `macaroon` header is not necessary.\n\nSome special operations are completely open and require no authentication:\n * `POST /user/authorize` - authorizes user with authentication token through\n Onezone web interface.This interface is called only by providers, \n * `POST /provider` - registers a Oneprovider in Onezone service \n (however a valid CSR in the body is required),\n * `POST /provider/test/check_my_ports` - checks if all given ports \n are reachable from Onezone,\n * `GET /provider/test/check_my_ip` - returns the external IP of the request peer (as seen by the Onezone).\n\nThe provider specific operations include:\n * `ALL /provider` - all provider specific endpoints (except for the public access ones above),\n * `POST /spaces` - create new space,\n * `GET /space/{id}` - get specific space details,\n * `GET /spaces/{id}/users` - list space users.\n \nAll other operations can be invoked by a user assuming he has valid privileges in the system,\neach operation description lists required permissions, if any.\n\n## Effective users and effective groups\nOnedata supports creation of arbitrary nested group tree structures. In order to allow identification\nif a given user belongs to the group directly or indirectly by belonging to a subgroup of a group,\nseparate API calls are provided for getting information about group users (direct group members) and \neffective users (indirect group members).\n\n## API structure\nMost operations are RESTful, i.e. paths reflect the actual resource mode and operations on them are mapped to\nmost appropriate HTTP methods.\n\n**Space management**\nThe space management operations of this API provide means for accessing information about spaces \nand their management.\n\n**Group management**\nThe group management operations allow for creation of user groups, assigning their authorization rights,\nadding and removing users from groups.\n\n**User management**\nThe user management methods enable for creation of users, managing their authorization\ncredentials as well as space and group membership.\n\n**Provider management**\nProvider specific calls enable for getting global information about the spaces managed by the provider,\nand some administrative operations which can be used for monitoring or accounting.\n\n**Privileges management**\nOnezone allows any user to have selected administration privileges for the Onezone service itself,\nenabling them to view and configure certain aspects of the system.\n\n**Handle API**\nOnezone provides extensive support for integration with Handle system registration\nservices, including support for DOI and PID identifier assignment services. The API\nprovides methods for adding new Handle services to the system, managing which users\ncan use which registration services and complete API for registering identifiers to\nusers data sets which are made public.\n\n\n## Examples\n\n**Generate new authentication token**\n```bash\ncurl -k -u user:PaSSwoRd -X GET \\\nhttps://beta.onedata.org:8443/api/v3/onezone/user/client_token\n```\n\n**Get user details**\n```bash\ncurl -k https://beta.onedata.org:8443/api/v3/onezone/user \\\n-H 'macaroon:MDAxNWxvY2F0aW9uIG9uZXpvbmUKMDAzYmlk'\n```\n",
    "contact": {
      "name": "Onedata support",
      "url": "https://onedata.org/support",
      "email": "info@onedata.org"
    },
    "license": {
      "name": "Apache 2.0",
      "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
    },
    "x-logo": {
      "url": "https://onedata.org/docs/doc/img/onezone-icon.png",
      "backgroundColor": "#FFFFFF"
    }
  },
  "paths": {
    "/spaces": {
      "get": {
        "operationId": "get_spaces",
        "tags": [
          "Space"
        ],
        "x-onedata-service": "onezone",
        "x-onedata-module": "space",
        "x-onedata-resource": "spaces",
        "x-onedata-method": "space_logic:list_spaces",
        "summary": "List all spaces",
        "description": "Returns the list of all spaces managed by the Onezone service.\n\nThis operation requires `list_spaces` privilege.\n\n***Example cURL requests***\n\n**List all spaces**\n```bash\ncurl -k -u admin:password -X GET \\\nhttps://$HOST:8443/api/v3/onezone/spaces\n\n{\n  \"spaces\": [\"S0Y9FSe9TFJFFzzLtBEs8\",\"IkHBv8CoAFmbFU4fj26\"]\n}\n```\n",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "List of spaces Id's.",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          "400": {
            "description": "Invalid request.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "401": {
            "description": "Authentication error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "Authorization error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Resource not found.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server Error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "post": {
        "operationId": "create_space",
        "tags": [
          "Space"
        ],
        "x-onedata-service": "onezone",
        "x-onedata-module": "spaces",
        "x-onedata-resource": "spaces",
        "x-onedata-method": "space_logic:create",
        "summary": "Create new space",
        "description": "When called by a regular user, creates a new space and creates the current user its owner.\n\nWhen called by a provider, creates a new space and automatically adds support for it, \nbased on the token provided in the request body.\n\nThis operation does not require any specific privileges.\n\n***Example cURL requests***\n\n**Create new space**\n```bash\ncurl -k -u username:password  -H \"Content-type: application/json\" \\\n-X POST -d '{ \"name\" : \"new_space\" }' \\\nhttps://$HOST:8443/api/v3/onezone/spaces\n```\n",
        "consumes": [
          "application/json"
        ],
        "responses": {
          "201": {
            "description": "ID of the created space in the form /spaces/{id} is  returned in the response `Location` header. \n",
            "headers": {
              "Location": {
                "description": "ID of the created space.",
                "type": "string"
              }
            }
          },
          "400": {
            "description": "Invalid request.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "401": {
            "description": "Authentication error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "Authorization error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Resource not found.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server Error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "parameters": [
          {
            "name": "name",
            "in": "body",
            "description": "Space name.",
            "schema": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string",
                  "description": "The name of the space"
                },
                "token": {
                  "type": "string",
                  "description": "Space creation token (only for providers)."
                }
              }
            }
          }
        ]
      }
    },
    "/spaces/{id}": {
      "get": {
        "operationId": "get_space",
        "tags": [
          "Space"
        ],
        "x-onedata-service": "onezone",
        "x-onedata-module": "spaces",
        "x-onedata-resource": "space",
        "x-onedata-method": "space_logic:get_data",
        "summary": "Get space details",
        "description": "Returns the details about a specific space.\n\nIf called by user who is not member of the space, requires 'list_spaces' privilege.\n\n***Example cURL requests***\n\n**Get space details**\n```bash\ncurl -k -u admin:password -X GET \\\nhttps://$HOST:8443/api/v3/onezone/spaces/803ZirkUfdiWDd4W3bI4QaPBog_0kCdUddUIsgAxi5I\n\n{\n  \"spaceId\": \"803ZirkUfdiWDd4W3bI4QaPBog_0kCdUddUIsgAxi5I\",\n  \"name\": \"new_space1\",\n  \"canonicalName\": \"new_space1\",\n  \"providersSupports\": []\n}\n```\n",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Information about a space.",
            "schema": {
              "$ref": "#/definitions/Space"
            }
          },
          "400": {
            "description": "Invalid request.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "401": {
            "description": "Authentication error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "Authorization error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Resource not found.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server Error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Space ID.",
            "type": "string",
            "required": true
          }
        ]
      },
      "patch": {
        "operationId": "modify_space",
        "tags": [
          "Space"
        ],
        "x-onedata-service": "onezone",
        "x-onedata-module": "spaces",
        "x-onedata-resource": "space",
        "x-onedata-method": "space_logic:modify",
        "summary": "Modify space details",
        "description": "Updates the details about a space.\n\n***Example cURL requests***\n\n**Change space name**\n```bash\ncurl -k -u username:password -H \"Content-type: application/json\" \\\n-X PATCH -d '{\"name\": \"new_space12\"}' \\\nhttps://$HOST:8443/api/v3/onezone/spaces/56ID6lRxcbz4OEbrr7vPI52UA7E6WwkqQ6bJCtW5PLE\n```\n",
        "consumes": [
          "application/json"
        ],
        "responses": {
          "204": {
            "description": "Space has been updated successfully."
          },
          "400": {
            "description": "Invalid request.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "401": {
            "description": "Authentication error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "Authorization error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Resource not found.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server Error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Space ID.",
            "type": "string",
            "required": true
          },
          {
            "name": "data",
            "in": "body",
            "description": "Space parameters",
            "schema": {
              "$ref": "#/definitions/Space"
            },
            "required": true
          }
        ]
      },
      "delete": {
        "operationId": "remove_space",
        "tags": [
          "Space"
        ],
        "x-onedata-service": "onezone",
        "x-onedata-module": "spaces",
        "x-onedata-resource": "space",
        "x-onedata-method": "space_logic:remove_space",
        "summary": "Remove space",
        "description": "Removes a specific space.\n\n***Example cURL requests***\n\n**Remove space**\n```bash\ncurl -k -u admin:password -X DELETE \\\nhttps://$HOST:8443/api/v3/onezone/spaces/803ZirkUfdiWDd4W3bI4QaPBog_0kCdUddUIsgAxi5I\n```\n",
        "responses": {
          "200": {
            "description": "The space has been removed successfully."
          },
          "400": {
            "description": "Invalid request.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "401": {
            "description": "Authentication error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "Authorization error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Resource not found.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server Error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Space ID.",
            "type": "string",
            "required": true
          }
        ]
      }
    },
    "/spaces/{id}/users": {
      "get": {
        "operationId": "get_space_users",
        "tags": [
          "Space"
        ],
        "x-onedata-service": "onezone",
        "x-onedata-module": "spaces",
        "x-onedata-resource": "users",
        "x-onedata-method": "space_logic:get_users",
        "summary": "Get space users",
        "description": "Returns the list of users belonging to a specific space.\n\nThis operation requires `space_view_data` privilege.\n\n***Example cURL requests***\n\n**Get space provider details**\n```bash\ncurl -k -u username:password -X GET \\\nhttps://$HOST:8443/api/v3/onezone/spaces/9ueUeoZA6KXxNgzlvqmmrbzqE_BQiaHEEDC21sY1Kuc/users\n\n{\n  \"users\": [\"lb0NvUXIVguzjQ3dBOXAyd1c61fWKB5dKJDQ6YvB7a0\"]\n}\n```\n",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "The list of all user ID's that belong to a specific space",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          "400": {
            "description": "Invalid request.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "401": {
            "description": "Authentication error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "Authorization error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Resource not found.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server Error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Space ID.",
            "type": "string",
            "required": true
          }
        ]
      },
      "post": {
        "operationId": "add_user_to_space",
        "tags": [
          "Space"
        ],
        "x-onedata-service": "onezone",
        "x-onedata-module": "spaces",
        "x-onedata-resource": "users",
        "x-onedata-method": "space_logic:add_user",
        "summary": "Add user to space",
        "description": "Allows to add a user to any space. \n\nThis operation can be invoked by system administrators only\nand requires `add_member_to_space` privilege.\n\n***Example cURL requests***\n\n**Add user to space**\n```bash\ncurl -k -u username:password  -H \"Content-type: application/json\" \\\n-X POST -d '{ \"userId\" : \"lb0NvUXIVguzjQ3dBOXAyd1c61fWKB5dKJDQ6YvB7a0\" }' \\\nhttps://$HOST:8443/api/v3/onezone//spaces/9ueUeoZA6KXxNgzlvqmmrbzqE_BQiaHEEDC21sY1Kuc/users\n```\n",
        "consumes": [
          "application/json"
        ],
        "responses": {
          "204": {
            "description": "The user was added to the space."
          },
          "400": {
            "description": "Invalid request.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "401": {
            "description": "Authentication error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "Authorization error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Resource not found.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server Error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Space ID.",
            "type": "string",
            "required": true
          },
          {
            "name": "userId",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "userId": {
                  "type": "string",
                  "description": "ID of the user to add to space."
                }
              }
            },
            "required": true
          }
        ]
      }
    },
    "/spaces/{id}/users/token": {
      "get": {
        "operationId": "get_space_user_token",
        "tags": [
          "Space"
        ],
        "x-onedata-service": "onezone",
        "x-onedata-module": "spaces",
        "x-onedata-resource": "uinvite",
        "x-onedata-method": "token_logic:create",
        "summary": "Create space invite token",
        "description": "Creates a token allowing new user to join a space.\n\nThis operation requires `space_invite_user` privilege.\n\n***Example cURL requests***\n\n**Create space invite token**\n```bash\ncurl -k -u username:password -X GET \\\nhttps://$HOST:8443/api/v3/onezone/spaces/9ueUeoZA6KXxNgzlvqmmrbzqE_BQiaHEEDC21sY1Kuc/users/token\n\n{\"token\":\"MDAxNmxvY2F00aW9uIHJlZ2lzdHJ5CjAwM2JpZGVudGlmaWVyIG00zcEJ2UDVuOHhkQUNhdk9hbTlyNnIwNldPSzVhc\"}\n```\n",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "The token for joining a specific group.",
            "schema": {
              "$ref": "#/definitions/SpaceInviteToken"
            }
          },
          "400": {
            "description": "Invalid request.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "401": {
            "description": "Authentication error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "Authorization error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Resource not found.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server Error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Space ID.",
            "type": "string",
            "required": true
          }
        ]
      }
    },
    "/spaces/{id}/users/{uid}": {
      "get": {
        "operationId": "get_space_user",
        "tags": [
          "Space"
        ],
        "x-onedata-service": "onezone",
        "x-onedata-module": "spaces",
        "x-onedata-resource": "user",
        "x-onedata-method": "space_logic:get_user",
        "summary": "Get space user details",
        "description": "Returns the public information about a specific user in a space.\n\nThis operation requires `space_view_data` privilege.\n\n\n***Example cURL requests***\n\n**Get space user data**\n```bash\ncurl -k -u username:password -X GET \\\nhttps://$HOST:8443/api/v3/onezone/spaces/9ueUeoZA6KXxNgzlvqmmrbzqE_BQiaHEEDC21sY1Kuc/users/lb0NvUXIVguzjQ3dBOXAyd1c61fWKB5dKJDQ6YvB7a0\n```\n",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Information about a space user."
          },
          "400": {
            "description": "Invalid request.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "401": {
            "description": "Authentication error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "Authorization error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Resource not found.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server Error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Space ID.",
            "type": "string",
            "required": true
          },
          {
            "name": "uid",
            "in": "path",
            "description": "User ID.",
            "type": "string",
            "required": true
          }
        ]
      },
      "delete": {
        "operationId": "remove_space_user",
        "tags": [
          "Space"
        ],
        "x-onedata-service": "onezone",
        "x-onedata-module": "spaces",
        "x-onedata-resource": "user",
        "x-onedata-method": "space_logic:remove_user",
        "summary": "Remove user from space",
        "description": "Removes user from specific space.\n\nThis operation requires `space_remove_user` or \n`remove_member_from_space` privilege.\n\n***Example cURL requests***\n\n**Get space user data**\n```bash\ncurl -k  -u admin:password -X DELETE \\\nhttps://$HOST:8443/api/v3/onezone/spaces/p-mts_OBjwXss-E9kBxzp-ux12KNW2CBSaXlkDowDEk/users/ivMnRLb2WYNApEmP-j3SF0NsqBgdHG7iel89FHY802w\n```\n",
        "consumes": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "The group privileges have been set successfully."
          },
          "400": {
            "description": "Invalid request.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "401": {
            "description": "Authentication error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "Authorization error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Resource not found.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server Error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Space ID.",
            "type": "string",
            "required": true
          },
          {
            "name": "uid",
            "in": "path",
            "description": "User ID.",
            "type": "string",
            "required": true
          }
        ]
      }
    },
    "/spaces/{id}/users/{uid}/privileges": {
      "get": {
        "operationId": "get_space_user_privileges",
        "tags": [
          "Space"
        ],
        "x-onedata-service": "onezone",
        "x-onedata-module": "spaces",
        "x-onedata-resource": "upriv",
        "x-onedata-method": "space_logic:get_privileges",
        "summary": "Get user privileges to space",
        "description": "Returns privileges of a user belonging to the space.\n\nThis operation requires `space_view_data` privilege.\n\n***Example cURL requests***\n\n**Get user privileges to space**\n```bash\ncurl -k -u username:password -X GET \\\nhttps://$HOST:8443/api/v3/onezone/spaces/9ueUeoZA6KXxNgzlvqmmrbzqE_BQiaHEEDC21sY1Kuc/users/lb0NvUXIVguzjQ3dBOXAyd1c61fWKB5dKJDQ6YvB7a0/privileges\n\n{\n  \"privileges\": [\n    \"space_add_provider\",\n    \"space_change_data\",\n    \"space_invite_group\"\n    ]\n}\n```\n",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "The list of user privileges in a space.",
            "schema": {
              "$ref": "#/definitions/SpacePrivileges"
            }
          },
          "400": {
            "description": "Invalid request.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "401": {
            "description": "Authentication error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "Authorization error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Resource not found.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server Error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Space ID.",
            "type": "string",
            "required": true
          },
          {
            "name": "uid",
            "in": "path",
            "description": "User ID.",
            "type": "string",
            "required": true
          }
        ]
      },
      "put": {
        "operationId": "set_space_user_privileges",
        "tags": [
          "Space"
        ],
        "x-onedata-service": "onezone",
        "x-onedata-module": "spaces",
        "x-onedata-resource": "upriv",
        "x-onedata-method": "space_logic:set_privileges",
        "summary": "Set user privileges to space",
        "description": "Adds specific privileges for a user in a space.\n\nThis operation requires `space_set_privileges` privilege.\n\n***Example cURL requests***\n\n**Set user privileges to space**\n```bash\ncurl -i -k -u admin:password -X PUT \\\n-d '{\"privileges\":[\"space_add_provider\",\"space_change_data\"]}' \\\nhttps://$HOST:8443/api/v3/onezone/spaces/9ueUeoZA6KXxNgzlvqmmrbzqE_BQiaHEEDC21sY1Kuc/users/lb0NvUXIVguzjQ3dBOXAyd1c61fWKB5dKJDQ6YvB7a0/privileges\n```\n",
        "responses": {
          "200": {
            "description": "The user privileges have been added."
          },
          "400": {
            "description": "Invalid request.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "401": {
            "description": "Authentication error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "Authorization error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Resource not found.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server Error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Space ID.",
            "type": "string",
            "required": true
          },
          {
            "name": "uid",
            "in": "path",
            "description": "User ID.",
            "type": "string",
            "required": true
          },
          {
            "name": "data",
            "in": "body",
            "description": "User privileges.",
            "schema": {
              "$ref": "#/definitions/SpacePrivileges"
            },
            "required": true
          }
        ]
      }
    },
    "/spaces/{id}/groups": {
      "get": {
        "operationId": "get_space_groups",
        "tags": [
          "Space"
        ],
        "x-onedata-service": "onezone",
        "x-onedata-module": "spaces",
        "x-onedata-resource": "groups",
        "x-onedata-method": "space_logic:get_groups",
        "summary": "Get space groups",
        "description": "Returns the list of groups belonging to a specific space.\n\n***Example cURL requests***\n\n**Get space groups**\n```bash\ncurl -k -u username:password -X GET \\\nhttps://$HOST:8443/api/v3/onezone/spaces/56ID6lRxcbz4OEbrr7vPI52UA7E6WwkqQ6bJCtW5PLE/groups\n\n{\n  \"groups\": [\n    \"T5x_HhFYOnILOCUf9OqgExw00RwaU2MXT5122oWk_sM\",\n    \"e3piG9yg9877lagR7aHayk73te9gAMXxQvjBycwvnaow\"]\n}\n```\n",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "The list of all group ID's that belong to a specific space",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          "400": {
            "description": "Invalid request.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "401": {
            "description": "Authentication error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "Authorization error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Resource not found.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server Error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Space ID.",
            "type": "string",
            "required": true
          }
        ]
      },
      "post": {
        "operationId": "add_group_to_space",
        "tags": [
          "Space"
        ],
        "x-onedata-service": "onezone",
        "x-onedata-module": "spaces",
        "x-onedata-resource": "groups",
        "x-onedata-method": "space_logic:add_group",
        "summary": "Add group to space",
        "description": "Allows to add a group to any space. \n\nThis operation can be invoked by system administrators only\nand requires `add_member_to_space` privilege.\n\n***Example cURL requests***\n\n**Add group to space**\n```bash\ncurl -k -u username:password  -H \"Content-type: application/json\"\\\n -X POST -d '{\"groupId\" : \"T5x_HhFYOnILOCUf9OqgExw00RwaU2MXT5122oWk_sM\"}' \\\n https://$HOST:8443/api/v3/onezone/spaces/9ueUeoZA6KXxNgzlvqmmrbzqE_BQiaHEEDC21sY1Kuc/groups\n```\n",
        "consumes": [
          "application/json"
        ],
        "responses": {
          "204": {
            "description": "The group was added to the space."
          },
          "400": {
            "description": "Invalid request.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "401": {
            "description": "Authentication error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "Authorization error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Resource not found.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server Error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Space ID.",
            "type": "string",
            "required": true
          },
          {
            "name": "groupId",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "groupId": {
                  "type": "string",
                  "description": "ID of the group to add to space."
                }
              }
            },
            "required": true
          }
        ]
      }
    },
    "/spaces/{id}/groups/token": {
      "get": {
        "operationId": "get_space_group_token",
        "tags": [
          "Space"
        ],
        "x-onedata-service": "onezone",
        "x-onedata-module": "spaces",
        "x-onedata-resource": "ginvite",
        "x-onedata-method": "token_logic:create",
        "summary": "Create space invite token for group",
        "description": "Creates a token allowing to add a group to a specific space.\n\nThis operation requires `space_invite_group` privilege.\n\n***Example cURL requests***\n\n**Create space invitation token for group**\n```bash\ncurl -k -u username:password -X GET \\\nhttps://$HOST:8443/api/v3/onezone/spaces/56ID6lRxcbz4OEbrr7vPI52UA7E6WwkqQ6bJCtW5PLE/groups/token\n\n\n{\"token\":\"MDAxNmxvY0cGUgKWsjcpnrLE00RtOd2F00cGUgKWsjcpnrLE00RtOdhmnQycSICwMsugo\"}\n```\n",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "The token for joining a specific group.",
            "schema": {
              "$ref": "#/definitions/SpaceInviteToken"
            }
          },
          "400": {
            "description": "Invalid request.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "401": {
            "description": "Authentication error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "Authorization error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Resource not found.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server Error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Space ID.",
            "type": "string",
            "required": true
          }
        ]
      }
    },
    "/spaces/{id}/groups/{gid}": {
      "get": {
        "operationId": "get_space_group",
        "tags": [
          "Space"
        ],
        "x-onedata-service": "onezone",
        "x-onedata-module": "spaces",
        "x-onedata-resource": "group",
        "x-onedata-method": "space_logic:get_group",
        "summary": "Get group details",
        "description": "Returns details about a specific group in a space.\n\nThis operation requires `space_view_data` privilege.\n\n***Example cURL requests***\n\n**Get space group details**\n```bash\ncurl -k -u username:password -X GET \\\nhttps://$HOST:8443/api/v3/onezone/spaces/9ueUeoZA6KXxNgzlvqmmrbzqE_BQiaHEEDC21sY1Kuc/groups/T5x_HhFYOnILOCUf9OqgExw00RwaU2MXT5122oWk_sM\n\n{\n  \"groupId\": \"T5x_HhFYOnILOCUf9OqgExw00RwaU2MXT5122oWk_sM\",\n  \"name\": \"new_groupX\",\n  \"type\": \"role\"\n}\n```\n",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Details of a specific group in a space.",
            "schema": {
              "$ref": "#/definitions/Group"
            }
          },
          "400": {
            "description": "Invalid request.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "401": {
            "description": "Authentication error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "Authorization error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Resource not found.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server Error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Space ID.",
            "type": "string",
            "required": true
          },
          {
            "name": "gid",
            "in": "path",
            "description": "Group ID.",
            "type": "string",
            "required": true
          }
        ]
      },
      "delete": {
        "operationId": "delete_space_group",
        "tags": [
          "Space"
        ],
        "x-onedata-service": "onezone",
        "x-onedata-module": "spaces",
        "x-onedata-resource": "group",
        "x-onedata-method": "space_logic:remove_group",
        "summary": "Remove group from space",
        "description": "Removes a specific group from space.\n\nThis operation requires `space_remove_group` privilege or \n`remove_member_from_space` privilege.\n\n***Example cURL requests***\n\n**Get space group details**\n```bash\ncurl -k -u username:password -X DELETE \\\nhttps://$HOST:8443/api/v3/onezone/spaces/HUUPOMNGzikwiLXHaFYcE8-qxDtKmt1Gb3v5OnF9UNE/groups/HwUpk8jrwxKOe45uzLFX2GVC8lKEasj4q253sptVqF8\n```\n",
        "responses": {
          "200": {
            "description": "A space has been removed from group."
          },
          "400": {
            "description": "Invalid request.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "401": {
            "description": "Authentication error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "Authorization error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Resource not found.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server Error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Space ID.",
            "type": "string",
            "required": true
          },
          {
            "name": "gid",
            "in": "path",
            "description": "Group ID.",
            "type": "string",
            "required": true
          }
        ]
      }
    },
    "/spaces/{id}/groups/{gid}/privileges": {
      "get": {
        "operationId": "get_space_group_privileges",
        "tags": [
          "Space"
        ],
        "x-onedata-service": "onezone",
        "x-onedata-module": "spaces",
        "x-onedata-resource": "gpriv",
        "x-onedata-method": "space_logic:get_privileges",
        "summary": "Get group privileges to space",
        "description": "Returns privileges for a group to a specific space.\n\nThis operation requires `space_view_data` privilege.\n\n***Example cURL requests***\n\n**Get space group privileges**\n```bash\ncurl -k -u admin:password -X GET \\\nhttps://$HOST:8443/api/v3/onezone/spaces/9ueUeoZA6KXxNgzlvqmmrbzqE_BQiaHEEDC21sY1Kuc/groups/T5x_HhFYOnILOCUf9OqgExw00RwaU2MXT5122oWk_sM/privileges\n\n{\n  \"privileges\": [\"space_view_data\"]\n}\n```\n",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "The list of group privileges in a space.",
            "schema": {
              "$ref": "#/definitions/SpacePrivileges"
            }
          },
          "400": {
            "description": "Invalid request.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "401": {
            "description": "Authentication error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "Authorization error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Resource not found.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server Error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Space ID.",
            "type": "string",
            "required": true
          },
          {
            "name": "gid",
            "in": "path",
            "description": "Group ID.",
            "type": "string",
            "required": true
          }
        ]
      },
      "put": {
        "operationId": "set_space_group_privileges",
        "tags": [
          "Space"
        ],
        "x-onedata-service": "onezone",
        "x-onedata-module": "spaces",
        "x-onedata-resource": "upriv",
        "x-onedata-method": "space_logic:set_privileges",
        "summary": "Set group privileges to space",
        "description": "Sets new privileges for a group to a specific space.\n\nThis operation requires `space_set_privileges` privilege.\n\n***Example cURL requests***\n\n**Set space group privileges**\n```bash\ncurl -k -u username:password  -H \"Content-type: application/json\" \\\n-X PUT -d '{\"privileges\": [\"space_change_data\"]}' \\\nhttps://$HOST:8443/api/v3/onezone/spaces/9ueUeoZA6KXxNgzlvqmmrbzqE_BQiaHEEDC21sY1Kuc/groups/T5x_HhFYOnILOCUf9OqgExw00RwaU2MXT5122oWk_sM/privileges\n```\n",
        "responses": {
          "200": {
            "description": "The group privileges have been added."
          },
          "400": {
            "description": "Invalid request.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "401": {
            "description": "Authentication error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "Authorization error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Resource not found.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server Error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Space ID.",
            "type": "string",
            "required": true
          },
          {
            "name": "gid",
            "in": "path",
            "description": "Group ID.",
            "type": "string",
            "required": true
          },
          {
            "name": "data",
            "in": "body",
            "description": "Space privileges.",
            "schema": {
              "$ref": "#/definitions/GroupPrivileges"
            }
          }
        ]
      }
    },
    "/spaces/{id}/providers": {
      "get": {
        "operationId": "get_space_providers",
        "tags": [
          "Space"
        ],
        "x-onedata-service": "onezone",
        "x-onedata-module": "spaces",
        "x-onedata-resource": "providers",
        "x-onedata-method": "space_logic:get_providers",
        "summary": "Get space providers",
        "description": "Returns the list of providers supporting specific space.\n\nThis operation requires `list_providers_of_space` privilege.\n\n***Example cURL requests***\n\n**Get space support token**\n```bash\ncurl -k -u admin:password -X GET \\\nhttps://$HOST:8443/api/v3/onezone/spaces/9ueUeoZA6KXxNgzlvqmmrbzqE_BQiaHEEDC21sY1Kuc/providers\n\n{\n  \"providers\": [\"MDAxNmxvYZjUGlIcGkweGZta1ZOdEp00eUNINVNvR2001Wl\"]\n}\n```\n",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "The list of all provider ID's that support a specific space.",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          "400": {
            "description": "Invalid request.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "401": {
            "description": "Authentication error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "Authorization error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Resource not found.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server Error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Space ID.",
            "type": "string",
            "required": true
          }
        ]
      }
    },
    "/spaces/{id}/providers/token": {
      "get": {
        "operationId": "get_space_provider_token",
        "tags": [
          "Space"
        ],
        "x-onedata-service": "onezone",
        "x-onedata-module": "spaces",
        "x-onedata-resource": "pinvite",
        "x-onedata-method": "token_logic:create",
        "summary": "Create space support token",
        "description": "Creates a token which can be submitted to a selected provider in order to \nadd storage support for the space.\n\nThis operation requires `space_add_provider` privilege.\n\n***Example cURL requests***\n\n**Get space support token**\n```bash\ncurl -k -u admin:password -X GET \\\nhttps://$HOST:8443/api/v3/onezone/spaces/9ueUeoZA6KXxNgzlvqmmrbzqE_BQiaHEEDC21sY1Kuc/providers/token\n\n{\"token\":\"MDAxNmxvY2F00aW9uIHJlZ2lzdHJ5CjAwM2JpZGVudGlmaWVyIHZjUGlIcGkweGZta1ZOdEp00eUNINVNvR2001Wl\"}\n```\n",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "The token for getting space storage support from a provider.",
            "schema": {
              "$ref": "#/definitions/SpaceSupportToken"
            }
          },
          "400": {
            "description": "Invalid request.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "401": {
            "description": "Authentication error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "Authorization error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Resource not found.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server Error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Space ID.",
            "type": "string",
            "required": true
          }
        ]
      }
    },
    "/spaces/{id}/providers/{pid}": {
      "get": {
        "operationId": "get_space_provider",
        "tags": [
          "Space"
        ],
        "x-onedata-service": "onezone",
        "x-onedata-module": "spaces",
        "x-onedata-resource": "provider",
        "x-onedata-method": "space_logic:get_provider",
        "summary": "Get space provider details",
        "description": "Returns details about a specific provider supporting the space.\n\nThis operation requires `list_providers_of_space` privilege.\n\n***Example cURL requests***\n\n**Get space provider details**\n```bash\ncurl -k -u username:password -X GET \\\nhttps://$HOST:8443/api/v3/onezone/spaces/IkHBv8CoAFm5FCswhAJynbFU4fj26yiE1lhpK3p-0Y8/providers/H8ez0CwDZ7JMYRWn1ipmBpgJHPXzIXj0__-upGkf9tk\n\n{\n  \"clientName\": \"example\",\n  \"providerId\": \"H8ez0CwDZ7JMYRWn1ipmBpgJHPXzIXj0__-upGkf9tk\",\n  \"urls\": [\"195.216.97.151\"],\n  \"redirectionPoint\": \"https://195.216.97.151\",\n  \"latitude\": 50.068968,\n  \"longitude\":19.909444\n}\n```\n",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Details about a specific provider supporting a space.",
            "schema": {
              "$ref": "#/definitions/ProviderDetails"
            }
          },
          "400": {
            "description": "Invalid request.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "401": {
            "description": "Authentication error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "Authorization error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Resource not found.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server Error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Space ID.",
            "type": "string",
            "required": true
          },
          {
            "name": "pid",
            "in": "path",
            "description": "Provider ID.",
            "type": "string",
            "required": true
          }
        ]
      },
      "delete": {
        "operationId": "remove_provider_supporting_space",
        "tags": [
          "Space"
        ],
        "x-onedata-service": "onezone",
        "x-onedata-module": "spaces",
        "x-onedata-resource": "provider",
        "x-onedata-method": "space_logic:remove_provider",
        "summary": "Remove space support",
        "description": "Removes support from provider for a specific space.\n\nThis operation requires `space_remove_provider` privilege.\n\n***Example cURL requests***\n\n**Remove space support**\n```bash\ncurl -k -u username:password -X DELETE \\\nhttps://$HOST:8443/api/v3/onezone/spaces/IkHBv8CoAFm5FCswhAJynbFU4fj26yiE1lhpK3p-0Y8/providers/H8ez0CwDZ7JMYRWn1ipmBpgJHPXzIXj0__-upGkf9tk\n```\n",
        "responses": {
          "200": {
            "description": "A space is no longer supported by this provider."
          },
          "400": {
            "description": "Invalid request.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "401": {
            "description": "Authentication error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "Authorization error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Resource not found.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server Error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Space ID.",
            "type": "string",
            "required": true
          },
          {
            "name": "pid",
            "in": "path",
            "description": "Provider ID.",
            "type": "string",
            "required": true
          }
        ]
      }
    },
    "/spaces/{id}/shares": {
      "get": {
        "operationId": "get_space_shares",
        "tags": [
          "Space"
        ],
        "x-onedata-service": "onezone",
        "x-onedata-module": "spaces",
        "x-onedata-resource": "shares",
        "x-onedata-method": "space_logic:get_shares",
        "summary": "Get space shares",
        "description": "Returns the list of shares from specific space.\n\n\n***Example cURL requests***\n\n**List space shares**\n```bash\ncurl -k -u admin:password -X GET \\\nhttps://$HOST:8443/api/v3/onezone/spaces/9ueUeoZA6KXxNgzlvqmmrbzqE_BQiaHEEDC21sY1Kuc/shares\n\n{\n  \"shares\": [\"MDAxNmxvYZjUGlIcGkweGZta1ZOdEp00eUNINVNvR2001Wl\"]\n}\n```\n",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "The list of all share ID's that have been created in specific space.",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          "400": {
            "description": "Invalid request.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "401": {
            "description": "Authentication error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "Authorization error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Resource not found.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server Error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Space ID.",
            "type": "string",
            "required": true
          }
        ]
      }
    },
    "/spaces/{id}/shares/{sid}": {
      "put": {
        "operationId": "create_share",
        "tags": [
          "Space"
        ],
        "x-onedata-service": "onezone",
        "x-onedata-module": "spaces",
        "x-onedata-resource": "shares",
        "x-onedata-method": "space_logic:create_share",
        "summary": "Create new share",
        "description": "Create new share from entire space.\n\nRequires `space_manage_shares` privilege.\n\nThe `rootFileId` is not an actual file or folder ID, but \nhas to be generated by Oneprovider first as a file share Id.\n\n***Example cURL requests***\n\n**Add group to space**\n```bash\ncurl -k -u username:password  -H \"Content-type: application/json\" -X PUT \\\n-d '{\"name\": \"my_new_share\", \"rootFileId\": \"DC21sY1KucueUeoZA6KXxNgzlvqmmrbzqE_B\"}' \\\nhttps://$HOST:8443/api/v3/onezone/spaces/9ueUeoZA6KXxNgzlvqmmrbzqE_BQiaHEEDC21sY1Kuc/shares/A6KXxNgzlvqmmrbzqE_BQiammrbzqE_BQiaHEE\n```\n",
        "consumes": [
          "application/json"
        ],
        "responses": {
          "204": {
            "description": "The shares was successfully created."
          },
          "400": {
            "description": "Invalid request.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "401": {
            "description": "Authentication error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "Authorization error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Resource not found.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server Error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Space ID.",
            "type": "string",
            "required": true
          },
          {
            "name": "sid",
            "in": "path",
            "description": "Share ID.",
            "type": "string",
            "required": true
          },
          {
            "name": "share",
            "in": "body",
            "description": "Share properties.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ShareUpdateRequest"
            }
          }
        ]
      }
    },
    "/shares/{id}": {
      "get": {
        "operationId": "get_share",
        "tags": [
          "Space"
        ],
        "x-onedata-service": "onezone",
        "x-onedata-module": "spaces",
        "x-onedata-resource": "share",
        "x-onedata-method": "space_logic:get_share",
        "summary": "Get share details",
        "description": "Returns the details about a specific share.\n\n***Example cURL requests***\n\n**Get space details**\n```bash\ncurl -k -u admin:password -X GET \\\nhttps://$HOST:8443/api/v3/onezone/shares/bI4QaPBog_0kCdUddUIsgAxi5I803ZirkUfdiWDd4W3\n\n{\n  \"shareId\": \"bI4QaPBog_0kCdUddUIsgAxi5I803ZirkUfdiWDd4W3\",\n  \"name\": \"MyShare\",\n  \"public_url\": \"http://onedata.org/shares/bI4QaPBog_0kCdUddUIsgAxi5I803ZirkUfdiWDd4W3\",\n  \"root_file_id\": \"\",\n  \"parent_space\": \"UIsgAxi5I803ZirkUfdiWDd4W3bI4QaPBog_0kCdUdd\"\n}\n```\n",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Information about a share.",
            "schema": {
              "$ref": "#/definitions/Share"
            }
          },
          "400": {
            "description": "Invalid request.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "401": {
            "description": "Authentication error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "Authorization error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Resource not found.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server Error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Share ID.",
            "type": "string",
            "required": true
          }
        ]
      },
      "patch": {
        "operationId": "modify_share",
        "tags": [
          "Space"
        ],
        "x-onedata-service": "onezone",
        "x-onedata-module": "shares",
        "x-onedata-resource": "share",
        "x-onedata-method": "sharelogic:modify",
        "summary": "Modify share details",
        "description": "Updates the details about a share.\n\n***Example cURL requests***\n\n**Change share name**\n```bash\ncurl -k -u username:password -H \"Content-type: application/json\" \\\n-X PATCH -d '{\"name\": \"new_share_name\"}' \\\nhttps://$HOST:8443/api/v3/onezone/shares/56ID6lRxcbz4OEbrr7vPI52UA7E6WwkqQ6bJCtW5PLE\n```\n",
        "consumes": [
          "application/json"
        ],
        "responses": {
          "204": {
            "description": "Share has been updated successfully."
          },
          "400": {
            "description": "Invalid request.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "401": {
            "description": "Authentication error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "Authorization error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Resource not found.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server Error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Space ID.",
            "type": "string",
            "required": true
          },
          {
            "name": "data",
            "in": "body",
            "description": "Share parameters",
            "schema": {
              "$ref": "#/definitions/ShareUpdateRequest"
            },
            "required": true
          }
        ]
      },
      "delete": {
        "operationId": "remove_share",
        "tags": [
          "Space"
        ],
        "x-onedata-service": "onezone",
        "x-onedata-module": "spaces",
        "x-onedata-resource": "share",
        "x-onedata-method": "space_logic:remove_share",
        "summary": "Remove share",
        "description": "Removes a specific share.\n\n***Example cURL requests***\n\n**Remove space**\n```bash\ncurl -k -u admin:password -X DELETE \\\nhttps://$HOST:8443/api/v3/onezone/shares/803ZirkUfdiWDd4W3bI4QaPBog_0kCdUddUIsgAxi5I\n```\n",
        "responses": {
          "200": {
            "description": "The share has been removed successfully."
          },
          "400": {
            "description": "Invalid request.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "401": {
            "description": "Authentication error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "Authorization error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Resource not found.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server Error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Share ID.",
            "type": "string",
            "required": true
          }
        ]
      }
    },
    "/user": {
      "get": {
        "operationId": "get_user",
        "tags": [
          "User"
        ],
        "x-onedata-service": "onezone",
        "x-onedata-module": "user",
        "x-onedata-method": "user_logic:get_data",
        "summary": "Get user details",
        "description": "Returns details about currently authenticated user.\n\nThis operation can be invoked on behalf of current user only.\n\n***Example cURL requests***\n\n**Get user details**\n```bash\ncurl -k -u username:password -X GET https://$HOST:8443/api/v3/onezone/user\n\n{\n  \"userId\": \"lb0NvUXIVguzjQ3dBOXAyd1c61fWKB5dKJDQ6YvB7a0\",\n  \"login\": \"admin\",\n  \"name\": \"admin\",\n  \"connectedAccounts\": [],\n  \"alias\": \"\",\n  \"emailList\": []\n}\n```\n",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Returns the information about user.",
            "schema": {
              "$ref": "#/definitions/User"
            }
          },
          "400": {
            "description": "Invalid request.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "Forbidden request.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Resource not found..",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "patch": {
        "operationId": "modify_user",
        "tags": [
          "User"
        ],
        "x-onedata-service": "onezone",
        "x-onedata-module": "user",
        "x-onedata-method": "user_logic:modify",
        "summary": "Modify user",
        "description": "Modifies user account details based on information provided in the request body.\n\nThis operation can be invoked on behalf of current user only.\n\n***Example cURL requests***\n\n**Change user name**\n```bash\ncurl -k -u username:password  -H \"Content-type: application/json\" -X PATCH  \\\n-d '{\"name\": \"new_name\"}' \\\nhttps://$HOST:8443/api/v3/onezone/user\n```\n",
        "consumes": [
          "application/json"
        ],
        "responses": {
          "204": {
            "description": "User information updated successfully."
          },
          "400": {
            "description": "Invalid request.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "401": {
            "description": "Authentication error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "Authorization error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Resource not found.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server Error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "description": "User data.",
            "schema": {
              "$ref": "#/definitions/User"
            },
            "required": true
          }
        ]
      },
      "delete": {
        "operationId": "remove_user",
        "tags": [
          "User"
        ],
        "x-onedata-service": "onezone",
        "x-onedata-module": "user",
        "x-onedata-method": "user_logic:remove",
        "summary": "Remove user",
        "description": "Removes the account of currently authenticated user.\n\n***Example cURL requests***\n\n**Remove user account**\n```bash\ncurl -k -u username:password -X DELETE  \\\nhttps://$HOST:8443/api/v3/onezone/user\n```\n",
        "responses": {
          "200": {
            "description": "User removed successfully.",
            "schema": {
              "type": "string"
            }
          },
          "400": {
            "description": "Invalid request.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "401": {
            "description": "Authentication error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "Authorization error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Resource not found.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server Error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/user/authorize": {
      "post": {
        "operationId": "authenticate_user",
        "tags": [
          "User"
        ],
        "x-onedata-service": "onezone",
        "x-onedata-module": "user",
        "x-onedata-method": "auth_logic:authenticate_user",
        "summary": "Authenticate user",
        "description": "Authorizes user with authentication token through Onezone web interface.\n\nThis operation has public access.\n",
        "consumes": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "User authorized successfully - the body contains a discharge macaroon.",
            "schema": {
              "type": "string"
            }
          },
          "400": {
            "description": "Invalid request.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "401": {
            "description": "Authentication error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "Authorization error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Resource not found.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server Error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "description": "User authentication token.",
            "schema": {
              "$ref": "#/definitions/AuthenticationToken"
            },
            "required": true
          }
        ]
      }
    },
    "/user/spaces": {
      "get": {
        "operationId": "get_user_spaces",
        "tags": [
          "User"
        ],
        "x-onedata-service": "onezone",
        "x-onedata-module": "user",
        "x-onedata-method": "user_logic:get_spaces",
        "summary": "Get user spaces",
        "description": "Returns the list of users' spaces.\n\nThis operation can be invoked on behalf of current user only.\n\n***Example cURL requests***\n\n**Get user spaces**\n```bash\ncurl -k -u username:password -X GET \\\nhttps://$HOST:8443/api/v3/onezone/user/spaces\n\n{\n  \"spaces\": [\"IkHB2CCoAFm5FCswhAJynbFU4fj26yiE1lhpK3p-0Y8\"],\n  \"default\": \"undefined\"\n}\n```\n",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Returns the list of user spaces, including information which space is default.\n",
            "schema": {
              "type": "object",
              "properties": {
                "spaces": {
                  "description": "The list of all user spaces ID's.",
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "default": {
                  "description": "The ID of the default user space.",
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "Invalid request.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "401": {
            "description": "Authentication error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "Authorization error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Resource not found.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server Error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "post": {
        "operationId": "create_user_space",
        "tags": [
          "User"
        ],
        "x-onedata-service": "onezone",
        "x-onedata-module": "space",
        "x-onedata-method": "space_logic:create",
        "summary": "Create new user space",
        "description": "Creates a new space as current user. The user automaticaly becomes \nthe spaces' member.\n\nThis operation can be invoked on behalf of current user only.\n\n***Example cURL requests***\n\n**Create new user space**\n```bash\ncurl -k -u admin:password  -H \"Content-type: application/json\" -X POST \\\n-d '{ \"name\" : \"test_space\" , \"token\" : \"JKAxNWxUgPCAxNDk2MTQwMTQ0v38YI0Z2\",  \"size\" : \"150\" }'  \nhttps://$HOST:8443/api/v3/onezone/user/spaces\n```\n",
        "consumes": [
          "application/json"
        ],
        "responses": {
          "201": {
            "description": "ID of the created space in the form /user/spaces/{id} is  returned in the response `Location` header. \n",
            "headers": {
              "Location": {
                "description": "ID of the created space.",
                "type": "string"
              }
            }
          },
          "400": {
            "description": "Invalid request.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "401": {
            "description": "Authentication error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "Authorization error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Resource not found.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server Error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "parameters": [
          {
            "name": "space",
            "in": "body",
            "description": "New space parameters.",
            "schema": {
              "$ref": "#/definitions/Space"
            },
            "required": true
          }
        ]
      }
    },
    "/user/spaces/default": {
      "get": {
        "operationId": "get_user_default_space",
        "tags": [
          "User"
        ],
        "x-onedata-service": "onezone",
        "x-onedata-module": "spaces",
        "x-onedata-method": "user_logic:get_default_space",
        "summary": "Get default space",
        "description": "Returns the ID of the default users space.\n\nThis operation can be invoked on behalf of current user only.\n\n***Example cURL requests***\n\n**Get user default space**\n```bash\ncurl -k -u username:password -X GET \\\nhttps://$HOST:8443/api/v3/onezone/user/spaces/default\n\n{\n  \"spaceId\": \"undefined\"\n}\n```\n",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Returns the Id of the default user space or 'undefined' in case no space is selected as default.",
            "schema": {
              "$ref": "#/definitions/DefaultSpace"
            }
          },
          "400": {
            "description": "Invalid request.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "401": {
            "description": "Authentication error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "Authorization error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Resource not found.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server Error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "put": {
        "operationId": "set_user_default_space",
        "tags": [
          "User"
        ],
        "x-onedata-service": "onezone",
        "x-onedata-module": "spaces",
        "x-onedata-method": "user_logic:set_default_space",
        "summary": "Set default space",
        "description": "Sets default space for current user.\n\nThis operation can be invoked on behalf of current user only.\n\n***Example cURL requests***\n\n**Set user default space**\n```bash\ncurl -k -u username:password  -H \"Content-type: application/json\" -X PUT \\\n-d '{ \"spaceId\" : \"S0Y9FSeSrVTXCTmCpgqfH4-_Dw3Uc9TFJFFzzLtBEs8\" }' \\\nhttps://$HOST:8443/api/v3/onezone/user/spaces/default\n```\n",
        "consumes": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Space created successfully.",
            "schema": {
              "type": "string"
            }
          },
          "400": {
            "description": "Invalid request.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "401": {
            "description": "Authentication error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "Authorization error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Resource not found.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server Error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "parameters": [
          {
            "name": "defaultspace",
            "in": "body",
            "description": "Default Space ID.",
            "schema": {
              "$ref": "#/definitions/DefaultSpace"
            },
            "required": true
          }
        ]
      }
    },
    "/user/spaces/join": {
      "post": {
        "operationId": "join_space",
        "tags": [
          "User"
        ],
        "x-onedata-service": "onezone",
        "x-onedata-module": "space",
        "x-onedata-method": "space_logic:join",
        "summary": "Join space",
        "description": "Join existing space using inivitation token.\n\nThis operation can be invoked on behalf of current user only.\n\n***Example cURL requests***\n\n**Join existing space**\n```bash\ncurl -k -u admin:password  -H \"Content-type: application/json\" -X PUT \\\n-d '{ \"token\" : \"MDAxNmxvY2F00aW9uRVM2TVo5UlZ5cGFjZV9jcmLciFsOgyUkPI3f02le6PM01IX8go\" }'  \\\nhttps://$HOST:8443/api/v3/onezone/user/spaces/default\n```\n",
        "consumes": [
          "application/json"
        ],
        "responses": {
          "201": {
            "description": "ID of the joined space in the form /user/spaces/{id} is  returned in the response `Location` header. \n",
            "headers": {
              "Location": {
                "description": "ID of the joined space.",
                "type": "string"
              }
            }
          },
          "400": {
            "description": "Invalid request.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "401": {
            "description": "Authentication error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "Authorization error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Resource not found.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server Error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "parameters": [
          {
            "name": "spaceinvitetoken",
            "in": "body",
            "description": "Token for joining a space.",
            "schema": {
              "$ref": "#/definitions/SpaceInviteToken"
            },
            "required": true
          }
        ]
      }
    },
    "/user/spaces/token": {
      "get": {
        "operationId": "get_user_space_token",
        "tags": [
          "User"
        ],
        "x-onedata-service": "onezone",
        "x-onedata-module": "token",
        "x-onedata-method": "token_logic:create",
        "summary": "Create space invitation token",
        "description": "Creates an invitation token which allows other users to join the space.\n\nThis operation can be invoked on behalf of current user only.\n\n***Example cURL requests***\n\n**Generate space join token**\n```bash\ncurl -i -k -u admin:password -X GET \\\nhttps://$HOST:8443/api/v3/onezone/user/spaces/token\n\n{\"token\":\"MDAxNmxvY2F00aW95SnhyNGo00VDR6dI3f02le6PM01IX8go\"}\n```\n",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "The space invitation token.",
            "schema": {
              "$ref": "#/definitions/SpaceInviteToken"
            }
          },
          "400": {
            "description": "Invalid request.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "401": {
            "description": "Authentication error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "Authorization error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Resource not found.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server Error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/user/spaces/{sid}": {
      "get": {
        "operationId": "get_user_space",
        "tags": [
          "User"
        ],
        "x-onedata-service": "onezone",
        "x-onedata-module": "space",
        "x-onedata-method": "space_logic:get_data",
        "summary": "Get space details",
        "description": "Returns the details of a specific space.\n\nThis operation can be invoked on behalf of current user only.\n\n***Example cURL requests***\n\n**Generate space join token**\n```bash\ncurl -k -u username:password -X GET \\\nhttps://$HOST:8443/api/v3/onezone/user/spaces/IkHB1CCoAFm5FCswhAJynbFU4fj26yiE1lhpK3p00Y8\n\n{\n\n}\n```\n",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Returns the details of a specific space.",
            "schema": {
              "$ref": "#/definitions/Space"
            }
          },
          "400": {
            "description": "Invalid request.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "401": {
            "description": "Authentication error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "Authorization error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Resource not found.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server Error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "parameters": [
          {
            "name": "sid",
            "in": "path",
            "description": "Space ID.",
            "type": "string",
            "required": true
          }
        ]
      },
      "delete": {
        "operationId": "delete_user_space",
        "tags": [
          "User"
        ],
        "x-onedata-service": "onezone",
        "x-onedata-module": "space",
        "x-onedata-method": "space_logic:remove_user",
        "summary": "Leave space",
        "description": "Removes the users ownership or membership in a specific space.\n\nThis operation can be invoked on behalf of current user only.\n\n***Example cURL requests***\n\n**Delete user space**\n```bash\ncurl -k -u username:password -X DELETE \\\nhttps://$HOST:8443/api/v3/onezone/user/spaces/PMPs42mROSS7Rg7z7BwU9JYpSof4SvIW5v14uQY8X08\n```\n",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "The space was deleted successfuly."
          },
          "400": {
            "description": "Invalid request.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "401": {
            "description": "Authentication error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "Authorization error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Resource not found.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server Error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "parameters": [
          {
            "name": "sid",
            "in": "path",
            "description": "Space Id.",
            "type": "string",
            "required": true
          }
        ]
      }
    },
    "/user/groups": {
      "get": {
        "operationId": "get_user_groups",
        "tags": [
          "User"
        ],
        "x-onedata-service": "onezone",
        "x-onedata-module": "user",
        "x-onedata-method": "user_logic:get_groups",
        "summary": "Get user groups",
        "description": "Returns the list of user's groups.\n\nThis operation can be invoked on behalf of current user only.\n\n***Example cURL requests***\n\n**Get user groups**\n```bash\ncurl -k -u admin:password -X GET \\\nhttps://$HOST:8443/api/v3/onezone/user/groups\n\n{\n  \"groups\": [\"admins\"]\n}\n```\n",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "The list of groups.",
            "schema": {
              "type": "object",
              "properties": {
                "groups": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid request.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "401": {
            "description": "Authentication error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "Authorization error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Resource not found.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server Error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "post": {
        "operationId": "create_group_for_user",
        "tags": [
          "User"
        ],
        "x-onedata-service": "onezone",
        "x-onedata-module": "group",
        "x-onedata-method": "group_logic:create",
        "summary": "Create new group",
        "description": "Creates a new group for the current user. \nThe user automatically becomes a member of this group.\n\nThis operation can be invoked on behalf of current user only.\n\n***Example cURL requests***\n\n**Create new group**\n```bash\ncurl -k -u username:password  -H \"Content-type: application/json\" \\\n-X POST -d '{ \"name\" : \"test_group\" , \"type\" : \"admin\" }' \\\nhttps://$HOST:8443/api/v3/onezone/user/groups\n```\n",
        "consumes": [
          "application/json"
        ],
        "responses": {
          "201": {
            "description": "ID of the created group in the form /user/groups/{gid} is  returned in the response `Location` header. \n",
            "headers": {
              "Location": {
                "description": "ID of the created group.",
                "type": "string"
              }
            }
          },
          "400": {
            "description": "Invalid request.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "401": {
            "description": "Authentication error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "Authorization error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Resource not found.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server Error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "parameters": [
          {
            "name": "group",
            "in": "body",
            "description": "New group parameters.",
            "schema": {
              "$ref": "#/definitions/Group"
            },
            "required": true
          }
        ]
      }
    },
    "/user/groups/join": {
      "post": {
        "operationId": "join_group",
        "tags": [
          "User"
        ],
        "x-onedata-service": "onezone",
        "x-onedata-module": "user",
        "x-onedata-method": "group_logic:join",
        "summary": "Join group",
        "description": "Join existing group using inivitation token.\n\nThis operation can be invoked on behalf of current user only.\n",
        "consumes": [
          "application/json"
        ],
        "responses": {
          "201": {
            "description": "ID of the joined group in the form /user/groups/{id} is  returned in the response `Location` header. \n",
            "headers": {
              "Location": {
                "description": "ID of the joined group.",
                "type": "string"
              }
            }
          },
          "400": {
            "description": "Invalid request.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "401": {
            "description": "Authentication error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "Authorization error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Resource not found.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server Error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "parameters": [
          {
            "name": "groupinvitetoken",
            "in": "body",
            "description": "Token for joining a group.",
            "schema": {
              "$ref": "#/definitions/GroupInviteToken"
            },
            "required": true
          }
        ]
      }
    },
    "/user/groups/{gid}": {
      "get": {
        "operationId": "get_user_group",
        "tags": [
          "User"
        ],
        "x-onedata-service": "onezone",
        "x-onedata-module": "group",
        "x-onedata-method": "group_logic:get_data",
        "summary": "Get group details",
        "description": "Returns information about a specific group to which the user belongs.\n\nThis operation can be invoked on behalf of current user only.\n\n***Example cURL requests***\n\n**Get user groups**\n```bash\ncurl -k -u username:password -X GET \\\nhttps://$HOST:8443/api/v3/onezone/user/groups/admins\n\n{\n  \"groupId\": \"admins\",\n  \"name\": \"admins\",\n  \"type\": \"role\"\n}\n```\n",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Returns the information about a specific group.",
            "schema": {
              "$ref": "#/definitions/Group"
            }
          },
          "400": {
            "description": "Invalid request.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "401": {
            "description": "Authentication error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "Authorization error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Resource not found.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server Error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "parameters": [
          {
            "name": "gid",
            "in": "path",
            "description": "Group ID.",
            "type": "string",
            "required": true
          }
        ]
      },
      "delete": {
        "operationId": "leave_group",
        "tags": [
          "User"
        ],
        "x-onedata-service": "onezone",
        "x-onedata-module": "group",
        "x-onedata-method": "group_logic:remove_user",
        "summary": "Leave group",
        "description": "Removes the current user from a specific group.\n\nThis operation can be invoked on behalf of current user only.\n\n***Example cURL requests***\n\n**Leave group**\n```bash\ncurl -k -u username:password -X DELETE \\\nhttps://$HOST:8443/api/v3/onezone/user/groups/qScCV0Tt3NiTLYbx_DGzJFnQxDYQNqNxk6o5YANWRo8\n```\n",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "The user left the group successfully."
          },
          "400": {
            "description": "Invalid request.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "401": {
            "description": "Authentication error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "Authorization error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Resource not found.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server Error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "parameters": [
          {
            "name": "gid",
            "in": "path",
            "description": "Group ID.",
            "type": "string",
            "required": true
          }
        ]
      }
    },
    "/user/client_token": {
      "get": {
        "operationId": "get_client_token",
        "tags": [
          "User"
        ],
        "x-onedata-service": "onezone",
        "x-onedata-module": "user",
        "x-onedata-resource": "utoken",
        "x-onedata-method": "token_logic:create",
        "summary": "Create user authorization token",
        "description": "Creates a user access token that can be used in `oneclient` command \nline tool or via REST API.\n\nThis operation can be invoked on behalf of currently authenticated user only.\n\n***Example cURL requests***\n\n**Add user to space**\n```bash\ncurl -k -u username:password -X GET https://$HOST:8443/api/v3/onezone/user/client_token\n\n{\n  \"token\": \"LKHKJASDkkajsdnKJASDkjasDJASDjkasACJNS2KJNAS\"\n}\n```\n",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "The token for joining a specific group.",
            "schema": {
              "$ref": "#/definitions/ClientToken"
            }
          },
          "400": {
            "description": "Invalid request.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "401": {
            "description": "Authentication error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "Authorization error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Resource not found.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server Error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/groups": {
      "post": {
        "operationId": "create_group",
        "tags": [
          "Group"
        ],
        "x-onedata-service": "onezone",
        "x-onedata-module": "group",
        "x-onedata-resource": "groups",
        "x-onedata-method": "group_logic:create",
        "summary": "Create new group",
        "description": "Creates a new group.\n\nThis operation does require any specific privileges.\n\n***Example cURL requests***\n\n**Create new group of type `role`**\n```bash\n curl -k -u username:password  -H \"Content-type: application/json\" \\\n -X POST -d '{ \"name\":\"new_group\" , \"type\":\"role\" }' \\\n https://$HOST:8443/api/v3/onezone/groups/\n```\n",
        "consumes": [
          "application/json"
        ],
        "responses": {
          "201": {
            "description": "ID of the group created in the form /groups/{id} is  returned in the response `Location` header.\n",
            "headers": {
              "Location": {
                "description": "ID of the created group.",
                "type": "string"
              }
            }
          },
          "400": {
            "description": "Invalid request.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "401": {
            "description": "Authentication error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "Authorization error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Resource not found.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server Error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "description": "Group properties.",
            "schema": {
              "$ref": "#/definitions/Group"
            },
            "required": true
          }
        ]
      }
    },
    "/groups/{id}": {
      "get": {
        "operationId": "get_group",
        "tags": [
          "Group"
        ],
        "x-onedata-service": "onezone",
        "x-onedata-module": "group",
        "x-onedata-resource": "group",
        "x-onedata-method": "group_logic:get_data",
        "x-onedata-permissions": [
          "group_view_data"
        ],
        "summary": "Get group details",
        "description": "Returns the information about a specific group.\n\nThis operation requires `group_view_data` privilege.\n\n***Example cURL requests***\n\n**Get group details**\n```bash\ncurl -k -u username:password -X GET \\\nhttps://$HOST:8443/api/v3/onezone/user/groups/HwUpk8jrwxKOe45uzLFX2GVa8lKEasj4q253sptVqF8\n\n{\n  \"groupId\":\"HwUpk8jrwxKOe45uzLFX2GVa8lKEasj4q253sptVqF8\",\n  \"name\":\"new_group\",\n  \"type\":\"role\"\n}\n```\n",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Information about a group.",
            "schema": {
              "$ref": "#/definitions/Group"
            }
          },
          "400": {
            "description": "Invalid request.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "401": {
            "description": "Authentication error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "Authorization error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Resource not found.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server Error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Group ID.",
            "type": "string",
            "required": true
          }
        ]
      },
      "patch": {
        "operationId": "modify_group",
        "tags": [
          "Group"
        ],
        "x-onedata-service": "onezone",
        "x-onedata-module": "group",
        "x-onedata-resource": "group",
        "x-onedata-method": "group_logic:modify",
        "x-onedata-permissions": [
          "group_change_data"
        ],
        "summary": "Modify group details",
        "description": "Updates the details about a group.\n\nThis operation requires `group_change_data` privilege.\n\n***Example cURL requests***\n\n**Modify group name**\n```bash\ncurl -i -k -u admin:password  -H \"Content-type: application/json\" \\\n-X PATCH -d '{\"name\": \"new_group_name\"}' \\\nhttps://$HOST:8443/api/v3/onezone/groups/HwUpk8jrwxKOe45uzLFX2GVC8lKEqsj4q253sptVqF8   \n```\n",
        "consumes": [
          "application/json"
        ],
        "responses": {
          "204": {
            "description": "Group details modified."
          },
          "400": {
            "description": "Invalid request.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "401": {
            "description": "Authentication error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "Authorization error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Resource not found.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server Error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Group ID.",
            "type": "string",
            "required": true
          },
          {
            "name": "data",
            "in": "body",
            "description": "Group parameters",
            "schema": {
              "$ref": "#/definitions/Group"
            },
            "required": true
          }
        ]
      },
      "delete": {
        "operationId": "remove_group",
        "tags": [
          "Group"
        ],
        "x-onedata-service": "onezone",
        "x-onedata-module": "group",
        "x-onedata-resource": "group",
        "x-onedata-method": "group_logic:remove_group",
        "x-onedata-permissions": [
          "group_remove"
        ],
        "summary": "Remove group",
        "description": "Removes a specific group.\n\nThis operation requires `group_remove` privilege.\n\n***Example cURL requests***\n\n**Remove group**\n```bash\ncurl -k -u admin:password -X DELETE  \\\nhttps://$HOST:8443/api/v3/onezone/user/groups/LT88rteQ4KMSYXMWO0Oibiqn7X5nUD51NTsCqgDN8e4\n```\n",
        "responses": {
          "202": {
            "description": "The group will be removed."
          },
          "400": {
            "description": "Invalid request.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "401": {
            "description": "Authentication error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "Authorization error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Resource not found.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server Error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Group ID.",
            "type": "string",
            "required": true
          }
        ]
      }
    },
    "/groups/{id}/effective_users": {
      "get": {
        "operationId": "get_group_effective_users",
        "tags": [
          "Group"
        ],
        "x-onedata-service": "onezone",
        "x-onedata-module": "group",
        "x-onedata-resource": "effective_users",
        "x-onedata-method": "group_logic:get_effective_users",
        "x-onedata-permissions": [
          "group_view_data"
        ],
        "summary": "Get effective group users",
        "description": "Returns the list of effective group users, which includes both who directly belong to the group,\nas well as users who belong to the group indirectly through its parent groups.\n\nThis operation requires `group_view_data` privilege.\n\n***Example cURL requests***\n\n**Get effective group users**\n```bash\ncurl -k -u username:password -X GET \\\nhttps://$HOST:8443/api/v3/onezone/groups/HwUpk8jrwxKOe45uzLFX2GVC8lKEasj4q253sptVqF8/effective_users\n\n\n{\n  \"users\":  [\"lb0NvUXIVguzjQ3dBOXAyd1c11fWKB5dKJDQ6YvB7a0\"]\n}\n```\n",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "The list of effective user ID's that belong to a specific group",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          "400": {
            "description": "Invalid request.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "401": {
            "description": "Authentication error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "Authorization error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Resource not found.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server Error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Group ID.",
            "type": "string",
            "required": true
          }
        ]
      }
    },
    "/groups/{id}/effective_users/{uid}": {
      "get": {
        "operationId": "get_groups_effective_user",
        "tags": [
          "Group"
        ],
        "x-onedata-service": "onezone",
        "x-onedata-module": "group",
        "x-onedata-resource": "effective_user",
        "x-onedata-method": "group_logic:get_effective_user",
        "x-onedata-permissions": [
          "group_view_data"
        ],
        "summary": "Get group effective user details",
        "description": "Returns public information about a specific effective group user.\n\nThis operation requires `group_view_data` privilege.\n\n***Example cURL requests***\n\n**Get group user details**\n```bash\ncurl -k -u username:password -X GET \\\nhttps://$HOST:8443/api/v3/onezone/groups/HwUpk8jrwxKOe45uzLFX2GVC1lKEasj4q253sptVqF8/effective_users/lb0NvUXIVguzjQ3dBOXAyd1c61fWKB5d2JDQ6YvB7a0\n\n{\n  \"userId\": \"lb0NvUXIVguzjQ3dBOXAyd1c61fWKB5dKJDQ6YvB7a0\",\n  \"login\": \"username\",\n  \"name\": \"user1\"\n}\n```\n",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Returns the information about a group user.",
            "schema": {
              "$ref": "#/definitions/User"
            }
          },
          "400": {
            "description": "Invalid request.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "401": {
            "description": "Authentication error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "Authorization error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Resource not found.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server Error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Group ID.",
            "type": "string",
            "required": true
          },
          {
            "name": "uid",
            "in": "path",
            "description": "User ID.",
            "type": "string",
            "required": true
          }
        ]
      }
    },
    "/groups/{id}/effective_users/{uid}/privileges": {
      "get": {
        "operationId": "get_groups_user_privileges",
        "tags": [
          "Group"
        ],
        "x-onedata-service": "onezone",
        "x-onedata-module": "group",
        "x-onedata-resource": "eupriv",
        "x-onedata-method": "group_logic:get_effective_privileges",
        "x-onedata-permissions": [
          "group_view_data"
        ],
        "summary": "Get user group privileges",
        "description": "Returns the user privileges in a group.\n\nThis operation requires `group_view_data` privilege.\n\n***Example cURL requests***\n\n**Get group user details**\n```bash\ncurl -i -k -u username:password -X GET \\\nhttps://$HOST:8443/api/v3/onezone/groups/HwUpk8jrwxKOe45uzLFX2GVC8lKEasj4q253sptVqF8/effective_users/lb0NvUXIVguzjQ3dBOXAyd1c61fWKB5dKJDQ6YvB7a0/privileges\n\n{\"privileges\": [\n  \"group_change_data\",\n  \"group_create_space\",\n  \"group_create_space_token\",\n  \"group_invite_group\",\n  \"group_invite_user\",\n  \"group_join_group\",\n  \"group_join_space\",\n  \"group_leave_space\",\n  \"group_remove\",\n  \"group_remove_group\",\n  \"group_remove_user\",\n  \"group_set_privileges\",\n  \"group_view_data\"]\n}\n```\n",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Returns the information about a group user.",
            "schema": {
              "$ref": "#/definitions/GroupPrivileges"
            }
          },
          "400": {
            "description": "Invalid request.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "401": {
            "description": "Authentication error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "Authorization error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Resource not found.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server Error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Group ID.",
            "type": "string",
            "required": true
          },
          {
            "name": "uid",
            "in": "path",
            "description": "User ID.",
            "type": "string",
            "required": true
          }
        ]
      }
    },
    "/groups/{id}/users": {
      "get": {
        "operationId": "get_group_users",
        "tags": [
          "Group"
        ],
        "x-onedata-service": "onezone",
        "x-onedata-module": "group",
        "x-onedata-resource": "users",
        "x-onedata-method": "group_logic:get_users",
        "x-onedata-permissions": [
          "group_view_data"
        ],
        "summary": "Get group users",
        "description": "Returns the list of users belonging to a specific group.\n\nThis operation requires `group_view_data` privilege.\n\n***Example cURL requests***\n\n**Get group users**\n```bash\ncurl -k -u username:password -X GET \\\nhttps://$HOST:8443/api/v3/onezone/groups/HwUpk8jrwxKOe45uzLFX2GVC8lKEasj4q253sptVqF8/users\n\n{\n  \"users\": [\"lb0NvUXIVguzjQ3dBOXAyd1c61fWKB5dKJDQ6YvB7a0\"]\n}\n```\n",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "The list of all user ID's that belong to a specific group",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          "400": {
            "description": "Invalid request.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "401": {
            "description": "Authentication error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "Authorization error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Resource not found.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server Error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Group ID.",
            "type": "string",
            "required": true
          }
        ]
      }
    },
    "/groups/{id}/users/token": {
      "get": {
        "operationId": "create_user_group_invite_token",
        "tags": [
          "Group"
        ],
        "x-onedata-service": "onezone",
        "x-onedata-module": "group",
        "x-onedata-resource": "uinvite",
        "x-onedata-method": "token_logic:create",
        "x-onedata-permissions": [
          "group_invite_user"
        ],
        "summary": "Create user invite token for group",
        "description": "Creates a token allowing new user to join the group.\n\nThis operation requires `group_invite_user` privilege.\n\n***Example cURL requests***\n\n**Generate user group invite token**\n```bash\ncurl -k -u username:password -X GET \\\nhttps://$HOST:8443/api/v3/onezone/groups/HwUpk8jrwxKOe45uzLFX2GVC8lKEasj4q253sptVqF8/users/token\n\n{\"token\":\"MDAxNmxvY2F00aW9uIHJlZlFTUbnZpdGVthHo8xmai4RqqBO2MZM00mrYGgo\"}\n```\n",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "The token for joining a specific group.",
            "schema": {
              "$ref": "#/definitions/GroupInviteToken"
            }
          },
          "400": {
            "description": "Invalid request.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "401": {
            "description": "Authentication error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "Authorization error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Resource not found.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server Error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Group ID.",
            "type": "string",
            "required": true
          }
        ]
      }
    },
    "/groups/{id}/users/{uid}": {
      "get": {
        "operationId": "get_group_user",
        "tags": [
          "Group"
        ],
        "x-onedata-service": "onezone",
        "x-onedata-module": "group",
        "x-onedata-resource": "user",
        "x-onedata-method": "group_logic:get_user",
        "x-onedata-permissions": [
          "group_view_data"
        ],
        "summary": "Get group user details",
        "description": "Returns the public information about a user {uid} in group {id}.\n\nThis operation requires `group_view_data` privilege.\n\n***Example cURL requests***\n\n**Generate user group invite token**\n```bash\ncurl -k -u admin:password -X GET \\\nhttps://$HOST:8443/api/v3/onezone/groups/HwUpk8jrwxKOe45uzLFX2GVC8lKEasj4q253sptVqF8/users/lb0NvUXIVguzjQ3dBOXAyd1c61fWKB5dKJDQ6YvB7a0\n\n{\n  \"userId\": \"lb0NvUXIVguzjQ3dBOXAyd1c61fWKB5dKJDQ6YvB7a0\",\n  \"login\":\"username\",\n  \"name\":\"admin\"\n}\n```\n",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Information about a group user.",
            "schema": {
              "$ref": "#/definitions/User"
            }
          },
          "400": {
            "description": "Invalid request.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "401": {
            "description": "Authentication error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "Authorization error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Resource not found.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server Error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Group ID.",
            "type": "string",
            "required": true
          },
          {
            "name": "uid",
            "in": "path",
            "description": "User ID.",
            "type": "string",
            "required": true
          }
        ]
      },
      "delete": {
        "operationId": "remove_group_user",
        "tags": [
          "Group"
        ],
        "x-onedata-service": "onezone",
        "x-onedata-module": "group",
        "x-onedata-resource": "user",
        "x-onedata-method": "group_logic:remove_user",
        "x-onedata-permissions": [
          "group_remove_user"
        ],
        "summary": "Remove user from group",
        "description": "Removes the user {uid} from a group {id} (the user will no longer have access \nto spaces accessible to the group).\n\nThis operation requires `group_remove_user` privilege.\n\n***Example cURL requests***\n\n**Remove user from group**\n```bash\ncurl -k  -u username:password -X DELETE \\\nhttps://$HOST:8443/api/v3/onezone/groups/Qi4QT2oalnfQu0SzTK1HgXxKuUrlRppb68rr_UhwC50/users/ivMnRLb2WYNApEmP-j3SF0NsqBgdHG7iel89FHY802w\n```\n",
        "consumes": [
          "application/json"
        ],
        "responses": {
          "202": {
            "description": "The user will be removed from the group."
          },
          "400": {
            "description": "Invalid request.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "401": {
            "description": "Authentication error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "Authorization error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Resource not found.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server Error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Group ID.",
            "type": "string",
            "required": true
          },
          {
            "name": "uid",
            "in": "path",
            "description": "User ID.",
            "type": "string",
            "required": true
          }
        ]
      }
    },
    "/groups/{id}/users/{uid}/privileges": {
      "get": {
        "operationId": "get_group_user_privileges",
        "tags": [
          "Group"
        ],
        "x-onedata-service": "onezone",
        "x-onedata-module": "group",
        "x-onedata-resource": "upriv",
        "x-onedata-method": "group_logic:get_privileges",
        "x-onedata-permissions": [
          "group_view_data"
        ],
        "summary": "Get user's group privileges",
        "description": "Returns the list of user privileges in a specific group.\n\nThis operation requires `group_view_data` privilege.\n\n***Example cURL requests***\n\n**Get group users**\n```bash\ncurl -k -u username:password -X GET \nhttps://$HOST:8443/api/v3/onezone/groups/HwUpk8jrwxKOe45uzLFX2GVC8lKEasj4q253sptVqF8/users/lb0NvUXIVguzjQ3dBOXAyd1c61fWKB5dKJDQ6YvB7a0/privileges\n\n{\n  \"privileges\": [\n    \"group_change_data\",\n    \"group_create_space\",\n    \"group_create_space_token\",\n    \"group_invite_group\"]\n}\n```\n",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "The list of user privileges in a group.",
            "schema": {
              "$ref": "#/definitions/GroupPrivileges"
            }
          },
          "400": {
            "description": "Invalid request.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "401": {
            "description": "Authentication error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "Authorization error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Resource not found.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server Error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Group ID.",
            "type": "string",
            "required": true
          },
          {
            "name": "uid",
            "in": "path",
            "description": "User ID.",
            "type": "string",
            "required": true
          }
        ]
      },
      "put": {
        "operationId": "set_user_group_privileges",
        "tags": [
          "Group"
        ],
        "x-onedata-service": "onezone",
        "x-onedata-module": "group",
        "x-onedata-resource": "upriv",
        "x-onedata-method": "group_logic:set_privileges",
        "x-onedata-permissions": [
          "group_set_privileges"
        ],
        "summary": "Set user's group privileges",
        "description": "Sets privileges for a user {uid} in a group {id}.\n\nThis operation requires `group_set_privileges` privilege.\n",
        "responses": {
          "200": {
            "description": "The user privileges have been added."
          },
          "400": {
            "description": "Invalid request.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "401": {
            "description": "Authentication error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "Authorization error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Resource not found.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server Error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Group ID.",
            "type": "string",
            "required": true
          },
          {
            "name": "uid",
            "in": "path",
            "description": "User ID.",
            "type": "string",
            "required": true
          },
          {
            "name": "data",
            "in": "body",
            "description": "User privileges.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/GroupPrivileges"
            }
          }
        ]
      }
    },
    "/groups/{id}/parent": {
      "get": {
        "operationId": "get_parent_groups",
        "tags": [
          "Group"
        ],
        "x-onedata-service": "onezone",
        "x-onedata-module": "group",
        "x-onedata-resource": "parent_groups",
        "x-onedata-method": "group_logic:get_parent_groups",
        "x-onedata-permissions": [
          "group_view_data"
        ],
        "summary": "Get parent groups",
        "description": "Returns the parent groups of a specific group.\n\nThis operation requires `group_view_data` privilege.\n\n***Example cURL requests***\n\n**Get parent groups**\n```bash\ncurl -k -u admin:password -X GET \\\nhttps://$HOST:8443/api/v3/onezone/groups/HwUpk8jrwxKOe45uzLFX2GVC8lKEasj4q253sptVqF8/parent\n\n{\n  \"parent_groups\": []\n}\n```\n",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "The list of parent group ID's.",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          "400": {
            "description": "Invalid request.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "401": {
            "description": "Authentication error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "Authorization error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Resource not found.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server Error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Group ID.",
            "type": "string",
            "required": true
          }
        ]
      }
    },
    "/groups/{id}/parent/{pid}": {
      "get": {
        "operationId": "get_parent_group",
        "tags": [
          "Group"
        ],
        "x-onedata-service": "onezone",
        "x-onedata-module": "group",
        "x-onedata-resource": "parent_group",
        "x-onedata-method": "group_logic:get_parent_group",
        "x-onedata-permissions": [
          "group_view_data"
        ],
        "summary": "Get parent group details",
        "description": "Returns details about a specific parent group.\n\nThis operation requires `group_view_data` privilege.\n\n***Example cURL requests***\n\n**Get parent group details**\n```bash\ncurl -k -u admin:password -X GET \\\nhttps://$HOST:8443/api/v3/onezone/groups/T5x_HhFYOnILOCUf9OqgExw00RwaU2MXT5122oWk_sM/parent/9OqgExw00RwaU2MXT51\n```\n",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Information about a specific parent group.",
            "schema": {
              "$ref": "#/definitions/Group"
            }
          },
          "400": {
            "description": "Invalid request.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "401": {
            "description": "Authentication error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "Authorization error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Resource not found.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server Error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Group ID.",
            "type": "string",
            "required": true
          },
          {
            "name": "pid",
            "in": "path",
            "description": "Parent group ID.",
            "type": "string",
            "required": true
          }
        ]
      }
    },
    "/groups/{id}/nested": {
      "get": {
        "operationId": "get_nested_groups",
        "tags": [
          "Group"
        ],
        "x-onedata-service": "onezone",
        "x-onedata-module": "group",
        "x-onedata-resource": "nested_groups",
        "x-onedata-method": "group_logic:get_nested_groups",
        "x-onedata-permissions": [
          "group_view_data"
        ],
        "summary": "Get subgroups",
        "description": "Returns the list of subgroups of a specific group.\n\nThis operation requires `group_view_data` privilege.\n\n***Example cURL requests***\n\n**Get subgroups**\n```bash\ncurl -k -u admin:password -X GET \\\nhttps://$HOST:8443/api/v3/onezone/groups/HwUpk8jrwxKOe45uzLFX2GVC8lKEasj4q253sptVqF8/nested\n\n{\n  \"nested_groups\": []\n}\n```\n",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "The list of subgroup ID's.",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          "400": {
            "description": "Invalid request.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "401": {
            "description": "Authentication error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "Authorization error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Resource not found.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server Error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Group ID.",
            "type": "string",
            "required": true
          }
        ]
      }
    },
    "/groups/{id}/nested/token": {
      "get": {
        "operationId": "get_nested_group_token",
        "tags": [
          "Group"
        ],
        "x-onedata-service": "onezone",
        "x-onedata-module": "group",
        "x-onedata-resource": "ninvite",
        "x-onedata-method": "token_logic:create",
        "x-onedata-permissions": [
          "group_invite_group"
        ],
        "summary": "Create subgroup invitation token",
        "description": "Creates a token that can be used to add a group as subgroup of group with {id}.\n\nThis operation requires `group_invite_group` privilege.\n\n***Example cURL requests***\n\n**Create invitation token for subgroup**\n```bash\ncurl -k -u username:password -X GET \\\nhttps://$HOST:8443/api/v3/onezone/groups/HwUpk8jrwxKOe45uzLFX2GVC8lKEasj4q253sptVq\n\n{\"token\":\"MDAxNmxvY2F00aW9uIHJlZ2lzdHJ5CjAwM2JpZGVudGlmaWVyIDdrenY00SXM5dEFGYVRNQXFlMUlPSXVGMFBoSkFKWHFieWRUc2l5TUUxX2sKMDAyZGNpZCB00b2tlblR5cGUgPSBncm91cF9pbnZpdGVfZ3JvdXBfdG9rZW4KMDAyZnNpZ25hdHVyZSCJAtwScxZNktP9EIS00vlM5ZB7QsXhjtRtjKWZfwEfs6wo\"}\n```\n",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "The token for joining a specific group.",
            "schema": {
              "$ref": "#/definitions/GroupInviteToken"
            }
          },
          "400": {
            "description": "Invalid request.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "401": {
            "description": "Authentication error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "Authorization error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Resource not found.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server Error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Group ID.",
            "type": "string",
            "required": true
          }
        ]
      }
    },
    "/groups/{id}/nested/join": {
      "post": {
        "operationId": "join_nested_group",
        "tags": [
          "Group"
        ],
        "x-onedata-service": "onezone",
        "x-onedata-module": "group",
        "x-onedata-resource": "njoin",
        "x-onedata-method": "group_logic:join_group",
        "x-onedata-permissions": [
          "group_join_group"
        ],
        "summary": "Add subgroup",
        "description": "Adds given group as a subgroup of a specific group based on provided token. \n\nThe parent group to which the group will be added is identified from the token \n(the token is issued in the context of a group).\n\nThis operation requires `group_join_group` privilege.\n\n***Example cURL requests***\n\n**Add subgroup**\n\n```bash\ncurl -k  -u admin:password -H \"Content-type: application/json\" -X POST \\\n-d  '{\"token\":\"MDAxNmxvY2F00aW9uIHJlZ2lzdHJ5CjAwM2JpZGVudGlmaW\"}'  \\\nhttps://$HOST:8443/api/v3/onezone/groups/T5x_HhFYOnILOCUf9OqgExw00RwaU2MXT5122o\n```\n",
        "responses": {
          "201": {
            "description": "ID of the joined group in the form /groups/{id} is  returned in the response `Location` header.\n",
            "headers": {
              "Location": {
                "description": "ID of the joined group.",
                "type": "string"
              }
            }
          },
          "400": {
            "description": "Invalid request.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "401": {
            "description": "Authentication error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "Authorization error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Resource not found.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server Error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Group ID.",
            "type": "string",
            "required": true
          },
          {
            "name": "data",
            "in": "body",
            "description": "Group join token.",
            "schema": {
              "$ref": "#/definitions/GroupInviteToken"
            }
          }
        ]
      }
    },
    "/groups/{id}/nested/{nid}": {
      "get": {
        "operationId": "get_nested_group",
        "tags": [
          "Group"
        ],
        "x-onedata-service": "onezone",
        "x-onedata-module": "group",
        "x-onedata-resource": "nested_group",
        "x-onedata-method": "group_logic:get_nested_group",
        "x-onedata-permissions": [
          "group_view_data"
        ],
        "summary": "Get subgroup details",
        "description": "Returns information about a specific nested group.\n\nThis operation requires `group_view_data` privilege.\n\n***Example cURL requests***\n\n**Get subgroup details**\n```bash\ncurl -k -u username:password -X GET \\\nhttps://$HOST:8443/api/v3/onezone/groups/HwUpk8jrwxKOe45uzLFX2GVC8lKEasj4q253sptVqF8/nested/T5x_HhFYOnILOCUf9OqgExw00RwaU2MXT5122oWk_sM\n\n{\n  \"groupId\": \"T5x_HhFYOnILOCUf9OqgExw00RwaU2MXT5122oWk_sM\",\n  \"name\": \"new_group1\",\n  \"type\": \"role\"\n}\n```\n",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Information about a specific nested group.",
            "schema": {
              "$ref": "#/definitions/Group"
            }
          },
          "400": {
            "description": "Invalid request.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "401": {
            "description": "Authentication error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "Authorization error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Resource not found.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server Error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Group ID.",
            "type": "string",
            "required": true
          },
          {
            "name": "nid",
            "in": "path",
            "description": "Subgroup ID.",
            "type": "string",
            "required": true
          }
        ]
      },
      "delete": {
        "operationId": "delete_nested_group",
        "tags": [
          "Group"
        ],
        "x-onedata-service": "onezone",
        "x-onedata-module": "group",
        "x-onedata-resource": "nested_group",
        "x-onedata-method": "group_logic:remove_nested_group",
        "x-onedata-permissions": [
          "group_remove_group"
        ],
        "summary": "Remove subgroup",
        "description": "Removes a specific subgroup with {nid} from parent group with {id}.\n\nThis operation requires `group_remove_group` privilege.\n\n***Example cURL requests***\n\n**Remove subgroup**\n```bash\ncurl -k  -u username:password -X DELETE \\\nhttps://$HOST:8443/api/v3/onezone/groups/KoiO-QKqmYZRjPVdtR30FrdIEA1JF9f3TznAr9BDjA4/nested/Qi4QT2oalnfQu0SzTK1HgXxKuUrlRppb68rr_UhwC50\n```\n",
        "responses": {
          "202": {
            "description": "A subgroup will be removed."
          },
          "400": {
            "description": "Invalid request.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "401": {
            "description": "Authentication error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "Authorization error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Resource not found.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server Error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Group ID.",
            "type": "string",
            "required": true
          },
          {
            "name": "nid",
            "in": "path",
            "description": "Nested group ID.",
            "type": "string",
            "required": true
          }
        ]
      }
    },
    "/groups/{id}/nested/{nid}/privileges": {
      "get": {
        "operationId": "get_nested_group_privileges",
        "tags": [
          "Group"
        ],
        "x-onedata-service": "onezone",
        "x-onedata-module": "group",
        "x-onedata-resource": "npriv",
        "x-onedata-method": "group_logic:get_nested_group_privileges",
        "x-onedata-permissions": [
          "group_view_data"
        ],
        "summary": "Get subgroup privileges",
        "description": "Returns the list of nested group privileges in a specific group.\n\nThis operation requires `group_view_data` privilege.\n\n***Example cURL requests***\n\n**Get subgroup privileges in a group**\n```bash\ncurl -k -u username:password -X GET \\\nhttps://$HOST:8443/api/v3/onezone/groups/HwUpk8jrwxKOe45uzLFX2GVC8lKEasj4q253sptVqF8/nested/T5x_HhFYOnILOCUf9OqgExw00RwaU2MXT5122oWk_sM/privileges    \n\n{\n  \"privileges\": [\"group_view_data\"]\n}\n```\n",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "The list of nested group privileges in a group.",
            "schema": {
              "$ref": "#/definitions/GroupPrivileges"
            }
          },
          "400": {
            "description": "Invalid request.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "401": {
            "description": "Authentication error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "Authorization error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Resource not found.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server Error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Group ID.",
            "type": "string",
            "required": true
          },
          {
            "name": "nid",
            "in": "path",
            "description": "Nested group ID.",
            "type": "string",
            "required": true
          }
        ]
      },
      "put": {
        "operationId": "set_group_nested_privileges",
        "tags": [
          "Group"
        ],
        "x-onedata-service": "onezone",
        "x-onedata-module": "group",
        "x-onedata-resource": "npriv",
        "x-onedata-method": "group_logic:set_nested_group_privileges",
        "x-onedata-permissions": [
          "group_set_privileges"
        ],
        "summary": "Set subgroup privileges",
        "description": "Sets privileges for a specific subgroup in a group.\n\nThis operation requires `group_set_privileges` privilege.\n\n***Example cURL requests***\n\n**Get subgroup privileges in a group**\n\n```bash\ncurl -k -u username:password  -H \"Content-type: application/json\" -X PUT \\\n-d '{\"privileges\": [\"group_view_data\"]}' \\\nhttps://$HOST:8443/api/v3/onezone/groups/HwUpk8jrwxKOe45uzLFX2GVC8lKEasj4q253sptVqF8/nested/T5x_HhFYOnILOCUf9OqgExw00RwaU2MXT5122oWk_sM/privileges\n```\n",
        "responses": {
          "200": {
            "description": "The user privileges have been added."
          },
          "400": {
            "description": "Invalid request.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "401": {
            "description": "Authentication error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "Authorization error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Resource not found.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server Error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Group ID.",
            "type": "string",
            "required": true
          },
          {
            "name": "nid",
            "in": "path",
            "description": "Subgroup ID.",
            "type": "string",
            "required": true
          },
          {
            "name": "data",
            "in": "body",
            "description": "Nested group privileges.",
            "schema": {
              "$ref": "#/definitions/GroupPrivileges"
            },
            "required": true
          }
        ]
      }
    },
    "/groups/{id}/spaces": {
      "get": {
        "operationId": "get_group_spaces",
        "tags": [
          "Group"
        ],
        "x-onedata-service": "onezone",
        "x-onedata-module": "group",
        "x-onedata-resource": "spaces",
        "x-onedata-method": "group_logic:get_spaces",
        "x-onedata-permissions": [
          "group_view_data"
        ],
        "summary": "Get group's spaces",
        "description": "Returns the list of spaces to which the group has access.\n\nThis operation requires `group_view_data` privilege.\n\n***Example cURL requests***\n\n**Get group spaces**\n```bash\ncurl -k -u username:password -X GET \\\nhttps://$HOST:8443/api/v3/onezone/groups/HwUpk8jrwxKOe45uzLFX2GVC8lKEasj4q253sptVqF8/spaces\n```\n",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "The list of space ID's for which the group has access.",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          "400": {
            "description": "Invalid request.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "401": {
            "description": "Authentication error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "Authorization error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Resource not found.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server Error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Group ID.",
            "type": "string",
            "required": true
          }
        ]
      },
      "post": {
        "operationId": "create_space_for_group",
        "tags": [
          "Group"
        ],
        "x-onedata-service": "onezone",
        "x-onedata-module": "group",
        "x-onedata-resource": "spaces",
        "x-onedata-method": "space_logic:create",
        "x-onedata-permissions": [
          "group_set_privileges"
        ],
        "summary": "Creates new space for group",
        "description": "Creates a new space for of a specific group.\n\nThis operation requires `group_create_space` privilege.\n\n***Example cURL requests***\n\n**Create new space for group**\n```bash\ncurl -k -u admin:password  -H \"Content-type: application/json\" \\\n-X POST -d '{\"name\": \"new_space\"}' \\\nhttps://$HOST:8443/api/v3/onezone/groups/HwUpk8jrwxKOe45uzLFX2GVC8lKEasj4q253sptVqF8/spaces\n```\n",
        "produces": [
          "application/json"
        ],
        "responses": {
          "201": {
            "description": "ID of the created space in the form /spaces/{id} is  returned in the response `Location` header.   \n",
            "headers": {
              "Location": {
                "description": "ID of the created space.",
                "type": "string"
              }
            }
          },
          "400": {
            "description": "Invalid request.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "Forbidden request.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Resource not found..",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Group ID.",
            "type": "string",
            "required": true
          },
          {
            "name": "spaceName",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string",
                  "description": "Name of the new space."
                }
              },
              "required": [
                "name"
              ]
            }
          }
        ]
      }
    },
    "/groups/{id}/spaces/join": {
      "post": {
        "operationId": "group_join_space",
        "tags": [
          "Group"
        ],
        "x-onedata-service": "onezone",
        "x-onedata-module": "group",
        "x-onedata-resource": "sjoin",
        "x-onedata-method": "space_logic:join",
        "x-onedata-permissions": [
          "group_join_space"
        ],
        "summary": "Join space by group",
        "description": "Joins the group to an existing space based on provided space invitation token.\n\nThis operation requires `group_join_space` privilege.\n\n***Example cURL requests***\n\n**Join group's space**\n```bash\ncurl -k -u admin:password -H \"Content-type: application/json\" \\\n-d '{\"token\":\"MDAxNmxvY2F00aW9uIHJlZ2lzdHJ5CjAwM2JpZGVuJ3l02U1JXzstRdK00ZHbso02rRcG8bJLAo\"}' \\\nhttps://$HOST:8443/api/v3/onezone/groups/HwUpk8jrwxKOe45uzLFX2GVC8lKEasj4q253sptVqF8/spaces/join\n```\n",
        "consumes": [
          "application/json"
        ],
        "responses": {
          "201": {
            "description": "ID of the joined space in the form /spaces/{id} is  returned in the response `Location` header.  \n",
            "headers": {
              "Location": {
                "description": "ID of the joined space.",
                "type": "string"
              }
            }
          },
          "400": {
            "description": "Invalid request.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "401": {
            "description": "Authentication error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "Authorization error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Resource not found.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server Error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Group ID.",
            "type": "string",
            "required": true
          },
          {
            "name": "data",
            "in": "body",
            "description": "Space join token.",
            "schema": {
              "$ref": "#/definitions/SpaceInviteToken"
            }
          }
        ]
      }
    },
    "/groups/{id}/spaces/token": {
      "get": {
        "operationId": "create_group_spaces_token",
        "tags": [
          "Group"
        ],
        "x-onedata-service": "onezone",
        "x-onedata-module": "group",
        "x-onedata-resource": "screate",
        "x-onedata-method": "token_logic:create",
        "x-onedata-permissions": [
          "group_create_space_token"
        ],
        "summary": "Create space creation token for group",
        "description": "Creates a token that can be given to selected provider, \nwhere it can be used to create a new space for the group and automatically support it.\n\nThis operation requires `group_create_space_token` privilege.\n\n***Example cURL requests***\n\n**Generate group space creation token**\n```bash\ncurl -k -u admin:password -X GET \\\nhttps://$HOST:8443/api/v3/onezone/groups/HwUpk8jrwxKOe45uzLFX2GVC8lKEasj4q253sptVqF8/spaces/token\n\n{\"token\":\"MDAxNmxvY2F0VhdGVfdG9rZW4KMDAyZnNpZ25hdHVyZSAdVCkpV2L9A00S9Ky01TtJF1Lsne3EBUU9UAW1xOi8Iolwo\"}\n```\n",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "The token for joining a specific space.",
            "schema": {
              "$ref": "#/definitions/SpaceInviteToken"
            }
          },
          "400": {
            "description": "Invalid request.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "401": {
            "description": "Authentication error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "Authorization error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Resource not found.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server Error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Group ID.",
            "type": "string",
            "required": true
          }
        ]
      }
    },
    "/groups/{id}/spaces/{sid}": {
      "get": {
        "operationId": "get_group_space",
        "tags": [
          "Group"
        ],
        "x-onedata-service": "onezone",
        "x-onedata-module": "group",
        "x-onedata-resource": "space",
        "x-onedata-method": "space_logic:get_data",
        "x-onedata-permissions": [
          "group_view_data"
        ],
        "summary": "Get group's space details",
        "description": "Returns information about a specific space to which the group belongs.\n\nThis operation requires `group_view_data` privilege.\n\n***Example cURL requests***\n\n**Get group's space details**\n```bash\ncurl -k -u username:password -X GET \\\nhttps://$HOST:8443/api/v3/onezone/groups/HwUpk8jrwxKOe45uzLFX2GVC8lKEasj4q253sptVqF8/spaces/HUUPOMNGzikwiLXHaFYcE8-qxDtKmt1Gb3v5OnF9UNE\n\n{\n  \"spaceId\": \"HUUPOMNGzikwiLXHaFYcE8-qxDtKmt1Gb3v5OnF9UNE\",\n  \"name\": \"a\",\n  \"canonicalName\": \"a\",\n  \"providersSupports\": []\n}    \n```\n",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Information about a specific space in a group.",
            "schema": {
              "$ref": "#/definitions/Group"
            }
          },
          "400": {
            "description": "Invalid request.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "401": {
            "description": "Authentication error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "Authorization error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Resource not found.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server Error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Group ID.",
            "type": "string",
            "required": true
          },
          {
            "name": "sid",
            "in": "path",
            "description": "Space ID.",
            "type": "string",
            "required": true
          }
        ]
      },
      "delete": {
        "operationId": "remove_group_from_space",
        "tags": [
          "Group"
        ],
        "x-onedata-service": "onezone",
        "x-onedata-module": "group",
        "x-onedata-resource": "space",
        "x-onedata-method": "space_logic:remove_group",
        "x-onedata-permissions": [
          "group_leave_space"
        ],
        "summary": "Remove space from group",
        "description": "Removes the group {id} from space {sid} (the group will no longer have access to space).\n\nThis operation requires `group_leave_space` privilege.\n\n***Example cURL requests***\n\n**Remove space from group**\n```bash\ncurl -k -u username:password -X DELETE \\\nhttps://$HOST:8443/api/v3/onezone/groups/HwUpk8jrwxKOe45uzLFX2GVC8lKEasj4q253sptVqF8/spaces/HUUPOMNGzikwiLXHaFYcE8-qxDtKmt1Gb3v5OnF9UNE\n```\n",
        "responses": {
          "202": {
            "description": "A groupwill be removed from the space."
          },
          "400": {
            "description": "Invalid request.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "401": {
            "description": "Authentication error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "Authorization error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Resource not found.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server Error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Group ID.",
            "type": "string",
            "required": true
          },
          {
            "name": "sid",
            "in": "path",
            "description": "Space ID.",
            "type": "string",
            "required": true
          }
        ]
      }
    },
    "/provider": {
      "get": {
        "operationId": "get_provider",
        "tags": [
          "Provider"
        ],
        "x-onedata-service": "onezone",
        "x-onedata-module": "provider",
        "x-onedata-resource": "provider",
        "x-onedata-method": "provider_logic:get_data",
        "summary": "Get provider details",
        "description": "Returns information about the Oneprovider that performed the request \n(based on provided Peer Certificate authentication).\n\nThis operation requires peer certificate authentication.\n\n***Example cURL requests***\n\n**Get information about provider**\n```bash\ncurl -k --cert ./etc/op_worker/certs/grpcert.pem \\\nhttps://$HOST:8443/api/v3/onezone/provider\n\n{\n  \"clientName\": \"example\",\n  \"providerId\": \"H8ez0CwDZ7JMYRWn1ipmBpgJHPXzIXj0__-upGkf9tk\",\n  \"urls\": [\"195.216.97.151\"],\n  \"redirectionPoint\": \"https://195.216.97.151\",\n  \"latitude\": 50.068968,\n  \"longitude\": 19.909444\n}\n```\n",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Returns the information about Oneprovider.",
            "schema": {
              "$ref": "#/definitions/ProviderDetails"
            }
          },
          "400": {
            "description": "Invalid request.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "401": {
            "description": "Authentication error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "Authorization error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Resource not found.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server Error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "post": {
        "operationId": "register_provider",
        "tags": [
          "Provider"
        ],
        "x-onedata-service": "onezone",
        "x-onedata-module": "provider",
        "x-onedata-resource": "provider",
        "x-onedata-method": "provider_logic:create",
        "summary": "Register provider",
        "description": "Registers a Oneprovider in Onezone service. \n\nRequires a valid CSR in the bodyand returns signed \ncertificate that will must used by the Oneprovider for authorization (SSL Peer Certificate).\n\nThis operation has public access.\n",
        "consumes": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Provider registered successfully.",
            "schema": {
              "type": "object",
              "properties": {
                "id": {
                  "description": "The ID of the registered provider",
                  "type": "string"
                },
                "cert": {
                  "description": "The signed certificate to be used when connecting to Onezone services.",
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "Invalid request.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "401": {
            "description": "Authentication error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "Authorization error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Resource not found.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server Error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "description": "Provider reqistration request including CSR.",
            "schema": {
              "$ref": "#/definitions/ProviderRegistrationRequest"
            },
            "required": true
          }
        ]
      },
      "patch": {
        "operationId": "modify_provider",
        "tags": [
          "Provider"
        ],
        "x-onedata-service": "onezone",
        "x-onedata-module": "provider",
        "x-onedata-resource": "provider",
        "x-onedata-method": "provider_logic:modify",
        "summary": "Modify provider details",
        "description": "Updates information about the Oneprovider identified by the\npeer certificate used for the request.\n\n***Example cURL requests***\n\n**Update provider geo location**\n```bash\ncurl -k --cert ./etc/op_worker/certs/grpcert.pem -X PATCH \\\n-d '{\"latitude\":50.068968,\"longitude\":20.909444}'  \\\nhttps://$HOST:8443/api/v3/onezone/provider\n```\n",
        "consumes": [
          "application/json"
        ],
        "responses": {
          "204": {
            "description": "Provider details updated successfully."
          },
          "400": {
            "description": "Invalid request.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "401": {
            "description": "Authentication error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "Authorization error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Resource not found.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server Error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "description": "Provider data.",
            "schema": {
              "$ref": "#/definitions/ProviderDetails"
            },
            "required": true
          }
        ]
      },
      "delete": {
        "operationId": "delete_provider",
        "tags": [
          "Provider"
        ],
        "x-onedata-service": "onezone",
        "x-onedata-module": "provider",
        "x-onedata-resource": "provider",
        "x-onedata-method": "provider_logic:remove",
        "summary": "Unregister provider",
        "description": "Allows Oneprovider service to unregister from Onezone.\n\nThis operation allows a Oneprovider to unregister from a this Onezone, i.e. it can only be invoked\nby Oneprovider which wants to unregister. It does't require any parameters, as the provider is\nidentified by the peer certificate used for this connection.\n\n***Example cURL requests***\n\n**Unregister provider from Onezone**\n```bash\ncurl -k --cert ./etc/op_worker/certs/grpcert.pem -X DELETE  \\\nhttps://$HOST:8443/api/v3/onezone/provider\n```\n",
        "consumes": [
          "application/json"
        ],
        "responses": {
          "202": {
            "description": "Provider will be unregistered."
          },
          "400": {
            "description": "Invalid request.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "401": {
            "description": "Authentication error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "Authorization error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Resource not found.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server Error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/provider/{pid}": {
      "get": {
        "operationId": "get_other_provider",
        "tags": [
          "Provider"
        ],
        "x-onedata-service": "onezone",
        "x-onedata-module": "provider",
        "x-onedata-resource": "nprovider",
        "x-onedata-method": "provider_logic:get_data",
        "summary": "Get provider details",
        "description": "Returns the information about another Oneprovider service, which is connected to the onezone.\n\nIf called by other provider doesn't require any special privileges. \n\nWhen called by a regular user, requires 'list_providers' privilege.\n\nThis operation requires `list_providers` privilege.\n\n***Example cURL requests***\n\n**Get specific provider details**\n```bash\ncurl -k --cert ./etc/op_worker/certs/grpcert.pem -X GET  \\\nhttps://$HOST:8443/api/v3/onezone/provider/WEavnRE7c49EU2sjF0Rz7l_kpiA1IBrwbDxNfH87Plc\n```\n",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Information about a provider.",
            "schema": {
              "$ref": "#/definitions/ProviderDetails"
            }
          },
          "400": {
            "description": "Invalid request.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "401": {
            "description": "Authentication error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "Authorization error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Resource not found.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server Error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "parameters": [
          {
            "name": "pid",
            "in": "path",
            "description": "Provider ID.",
            "type": "string",
            "required": true
          }
        ]
      }
    },
    "/provider/spaces": {
      "get": {
        "operationId": "get_supported_spaces",
        "tags": [
          "Provider"
        ],
        "x-onedata-service": "onezone",
        "x-onedata-module": "provider",
        "x-onedata-resource": "spaces",
        "x-onedata-method": "provider_logic:get_spaces",
        "summary": "Get spaces at provider",
        "description": "Returns the list of spaces managed by the Oneprovider that performed the request.\n\nThis operation requires peer certificate authentication.\n\n***Example cURL requests***\n\n**Get spaces supported by provider**\n```bash\ncurl -k --cert ./etc/op_worker/certs/grpcert.pem -X GET  \\\nhttps://$HOST:8443/api/v3/onezone/provider/spaces\n\n{\n  \"spaces\":[\"ASDKJHKLAJSDHKjhAsdkjh68asdASDlk\"]\n}\n```\n",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "The list of space ID's.",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          "400": {
            "description": "Invalid request.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "401": {
            "description": "Authentication error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "Authorization error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Resource not found.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server Error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "post": {
        "operationId": "create_provider_space",
        "tags": [
          "Provider"
        ],
        "x-onedata-service": "onezone",
        "x-onedata-module": "provider",
        "x-onedata-resource": "spaces",
        "x-onedata-method": "space_logic:create",
        "summary": "Create new space by provider",
        "description": "Creates a new space on behalf of the Oneprovider that performed the request.\n\nThis operation requires peer certificate authentication.\n",
        "consumes": [
          "application/json"
        ],
        "responses": {
          "201": {
            "description": "ID of the created space in the form /spaces/{id} is  returned in the response `Location` header. \n",
            "headers": {
              "Location": {
                "description": "ID of the created space.",
                "type": "string"
              }
            }
          },
          "400": {
            "description": "Invalid request.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "401": {
            "description": "Authentication error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "Authorization error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Resource not found.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server Error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "description": "New space parameters.",
            "schema": {
              "$ref": "#/definitions/Space"
            },
            "required": true
          }
        ]
      }
    },
    "/provider/spaces/support": {
      "post": {
        "operationId": "provider_space_support",
        "tags": [
          "Provider"
        ],
        "x-onedata-service": "onezone",
        "x-onedata-module": "provider",
        "x-onedata-resource": "ssupport",
        "x-onedata-method": "space_logic:support",
        "summary": "Add space storage support",
        "description": "Adds support for specific space on behalf of the Oneprovider that performed the \nrequest. Space support token is required.\n\nThis operation requires peer certificate authentication.\n",
        "produces": [
          "application/json"
        ],
        "responses": {
          "201": {
            "description": "ID of the supported space in the form /spaces/{id} is  returned in the response `Location` header. \n",
            "headers": {
              "Location": {
                "description": "ID of the supported space.",
                "type": "string"
              }
            }
          },
          "400": {
            "description": "Invalid request.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "401": {
            "description": "Authentication error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "Authorization error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Resource not found.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server Error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "parameters": [
          {
            "name": "pid",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/SpaceSupportToken"
            }
          }
        ]
      }
    },
    "/provider/spaces/{sid}": {
      "get": {
        "operationId": "get_supported_space",
        "tags": [
          "Provider"
        ],
        "x-onedata-service": "onezone",
        "x-onedata-module": "provider",
        "x-onedata-method": "space_logic:get_data",
        "summary": "Get space details by provider",
        "description": "Returns information about a specific space supported by the Oneprovider that \nperformed the request.\n\nThis operation requires peer certificate authentication.\n",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Returns the information about a specific space.",
            "schema": {
              "$ref": "#/definitions/Space"
            }
          },
          "400": {
            "description": "Invalid request.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "401": {
            "description": "Authentication error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "Authorization error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Resource not found.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server Error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "parameters": [
          {
            "name": "sid",
            "in": "path",
            "description": "Space ID.",
            "type": "string",
            "required": true
          }
        ]
      },
      "delete": {
        "operationId": "remove_space_support",
        "tags": [
          "Provider"
        ],
        "x-onedata-service": "onezone",
        "x-onedata-module": "provider",
        "x-onedata-method": "space_logic:remove_provider",
        "summary": "Remove space support",
        "description": "Removes support for space from the Oneprovider that performed the request.\n\nThis operation requires peer certificate authentication.\n",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "The space support has ended."
          },
          "400": {
            "description": "Invalid request.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "401": {
            "description": "Authentication error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "Authorization error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Resource not found.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server Error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "parameters": [
          {
            "name": "sid",
            "in": "path",
            "description": "Space ID.",
            "type": "string",
            "required": true
          }
        ]
      }
    },
    "/provider/test/check_my_ip": {
      "get": {
        "operationId": "check_my_ip",
        "tags": [
          "Provider"
        ],
        "x-onedata-service": "onezone",
        "x-onedata-module": "provider",
        "x-onedata-resource": "ip",
        "x-onedata-method": "cowboy_req:peer",
        "summary": "Show client IP address",
        "description": "Returns the IP of the request peer. Will return the external IP (as seen by the Onezone).\n\nThis operation has public access.\n\n***Example cURL requests***\n\n**Check provider IP**\n```bash\ncurl --tlsv1.2 -X GET https://beta.onedata.org:8443/api/v3/onezone/provider/test/check_my_ip\n```\n",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "The IP of the requesting peer.",
            "schema": {
              "type": "string"
            }
          },
          "400": {
            "description": "Invalid request.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "401": {
            "description": "Authentication error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "Authorization error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Resource not found.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server Error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/provider/test/check_my_ports": {
      "post": {
        "operationId": "check_my_ports",
        "tags": [
          "Provider"
        ],
        "x-onedata-service": "onezone",
        "x-onedata-module": "provider",
        "x-onedata-resource": "ip",
        "x-onedata-method": "provider_logic:test_connection",
        "summary": "Check ports availability",
        "description": "Checks if all given ports are reachable from Onezone. \n\nThis operation has public access.\n\n***Example cURL requests***\n\n**Check provider ports**\n```bash\ncurl -i --tlsv1.2 -X POST -H 'Content-type: application/json' \\\n-d '[ 80 ]' https://$HOST:8443/api/v3/onezone/provider/test/check_my_ports\n```\n",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Returns the list of ports (with URLs) and their status.",
            "schema": {
              "type": "array",
              "items": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "example": [
                [
                  "https://provider1.com:80",
                  "ok"
                ],
                [
                  "https://provider1.com:443",
                  "error"
                ]
              ]
            }
          },
          "400": {
            "description": "Invalid request.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "401": {
            "description": "Authentication error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "Authorization error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Resource not found.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server Error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "parameters": [
          {
            "name": "ports",
            "in": "body",
            "description": "List of ports to check.",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "example": [
                "https://provider1.com:80",
                "https://provider1.com:443"
              ]
            }
          }
        ]
      }
    },
    "/providers": {
      "get": {
        "operationId": "get_providers",
        "tags": [
          "Provider"
        ],
        "x-onedata-service": "onezone",
        "x-onedata-module": "provider",
        "x-onedata-resource": "providers",
        "x-onedata-method": "provider_logic:get_providers",
        "summary": "Get providers",
        "description": "Returns the list of providers registered in the Onezone service.\n\nThis operation requires `list_providers` privilege.\n\n***Example cURL requests***\n\n**Get list of providers**\n```bash\ncurl -Ssk -u username:password -X GET  \\\nhttps://$HOST:8443/api/v3/onezone/providers\n\n{\n  \"providers\": [\"WEavnRE7c49EU2sjF0Rz7l_kpiA1IBrwbDxNfH87Plc\"]\n}\n```\n",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "List of providers Id's.",
            "schema": {
              "type": "object",
              "properties": {
                "providers": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "providers"
              ]
            }
          },
          "400": {
            "description": "Invalid request.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "401": {
            "description": "Authentication error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "Authorization error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Resource not found.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server Error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/privileges/users/{id}": {
      "get": {
        "operationId": "get_user_onezone_privileges",
        "tags": [
          "Privileges"
        ],
        "x-onedata-service": "onezone",
        "x-onedata-module": "privileges",
        "x-onedata-resource": "upriv",
        "x-onedata-method": "onezone_logic:get_user_privileges",
        "summary": "Get user's Onezone privileges",
        "description": "Returns the list of user privileges for Onezone.\n\nThis operation requires `view_privileges` privilege.\n\n***Example cURL requests***\n\n**Get users privileges to Onezone service**\n```bash\ncurl -k -u username:password -X GET  \\\nhttps://$HOST:8443/api/v3/onezone/privileges/users/ivMnRLb2WYNApEmP-j3SF0NsqBgdHG7iel89FHY802w\n\n{\n  \"privileges\": []\n}\n```\n",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "The list of user privileges in Onezone.",
            "schema": {
              "$ref": "#/definitions/OnezonePrivileges"
            }
          },
          "400": {
            "description": "Invalid request.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "401": {
            "description": "Authentication error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "Authorization error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Resource not found.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server Error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "User ID.",
            "type": "string",
            "required": true
          }
        ]
      },
      "patch": {
        "operationId": "set_user_onezone_privileges",
        "tags": [
          "Privileges"
        ],
        "x-onedata-service": "onezone",
        "x-onedata-module": "onezone",
        "x-onedata-resource": "upriv",
        "x-onedata-method": "onezone_logic:set_privileges",
        "summary": "Set user's Onezone privileges",
        "description": "Modifies privileges for a user {id} for Onezone.\n\nThis operation requires `set_privileges` privilege.\n\n***Example cURL requests***\n\n**Modifies users privileges to Onezone service**\n```bash\ncurl -k -u username:password  -H \"Content-type: application/json\"  -X PUT \\\n-d '{\"privileges\":[\"list_spaces\"]}' \\\nhttps://$HOST:8443/api/v3/onezone/privileges/users/ivMnRLb2WYNApEmP-j3SF0NsqBgdHG7iel89FHY802w\n```\n",
        "responses": {
          "200": {
            "description": "The user privileges have been added."
          },
          "400": {
            "description": "Invalid request.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "401": {
            "description": "Authentication error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "Authorization error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Resource not found.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server Error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "User ID.",
            "type": "string",
            "required": true
          },
          {
            "name": "data",
            "in": "body",
            "description": "User Onezone privileges.",
            "schema": {
              "$ref": "#/definitions/OnezonePrivileges"
            }
          }
        ]
      },
      "delete": {
        "operationId": "remove_user_onezone_privileges",
        "tags": [
          "Privileges"
        ],
        "x-onedata-service": "onezone",
        "x-onedata-module": "onezone",
        "x-onedata-resource": "upriv",
        "x-onedata-method": "onezone_logic:remoev_privileges",
        "summary": "Remove user's Onezone privileges",
        "description": "Removes all privileges for a user {id} to Onezone.\n\nThis operation requires `set_privileges` privilege.\n\n***Example cURL requests***\n\n**Delete all user privileges to Onezone service**\n```bash\ncurl -k -u username:password  -X DELETE  \\\nhttps://$HOST:8443/api/v3/onezone/privileges/users/ivMnRLb2WYNApEmP-j3SF0NsqBgdHG7iel89FHY802w\n```\n",
        "responses": {
          "200": {
            "description": "The user privileges have been added."
          },
          "400": {
            "description": "Invalid request.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "401": {
            "description": "Authentication error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "Authorization error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Resource not found.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server Error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "User ID.",
            "type": "string",
            "required": true
          }
        ]
      }
    },
    "/privileges/group/{id}": {
      "get": {
        "operationId": "get_group_onezone_privileges",
        "tags": [
          "Privileges"
        ],
        "x-onedata-service": "onezone",
        "x-onedata-module": "privileges",
        "x-onedata-resource": "upriv",
        "x-onedata-method": "onezone_logic:get_group_privileges",
        "summary": "Get group's Onezone privileges",
        "description": "Returns the list of group privileges for Onezone.\n\nThis operation requires `view_privileges` privilege.\n\n***Example cURL requests***\n\n**Get groups privileges to Onezone service**\n```bash\ncurl -k -u admin:password -X GET \\\nhttps://$HOST:8443/api/v3/onezone/privileges/groups/T5x_HhFYOnILOCUf9OqgExw00RwaU2MXT5122oWk_sM\n\n{\n  \"privileges\": []\n}\n```\n",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "The list of group privileges in Onezone.",
            "schema": {
              "$ref": "#/definitions/OnezonePrivileges"
            }
          },
          "400": {
            "description": "Invalid request.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "401": {
            "description": "Authentication error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "Authorization error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Resource not found.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server Error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Group ID.",
            "type": "string",
            "required": true
          }
        ]
      },
      "patch": {
        "operationId": "set_group_onezone_privileges",
        "tags": [
          "Privileges"
        ],
        "x-onedata-service": "onezone",
        "x-onedata-module": "onezone",
        "x-onedata-resource": "upriv",
        "x-onedata-method": "onezone_logic:set_privileges",
        "summary": "Set group's Onezone privileges",
        "description": "Modifies privileges for a user {id} for Onezone.\n\nThis operation requires `set_privileges` privilege.\n\n***Example cURL requests***\n\n**Set groups privileges to Onezone service**\n```bash\ncurl -k -H \"Content-type: application/json\"  -X PUT \\\n-d '{\"privileges\": [\"list_spaces\"]}' \\\nhttps://$HOST:8443/api/v3/onezone/privileges/groups/T5x_HhFYOnILOCUf9OqgExw00RwaU2MXT5122oWk_sM\n```\n",
        "responses": {
          "200": {
            "description": "The group privileges have been added."
          },
          "400": {
            "description": "Invalid request.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "401": {
            "description": "Authentication error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "Authorization error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Resource not found.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server Error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Group ID.",
            "type": "string",
            "required": true
          },
          {
            "name": "data",
            "in": "body",
            "description": "User Onezone privileges.",
            "schema": {
              "$ref": "#/definitions/OnezonePrivileges"
            }
          }
        ]
      },
      "delete": {
        "operationId": "remove_group_onezone_privileges",
        "tags": [
          "Privileges"
        ],
        "x-onedata-service": "onezone",
        "x-onedata-module": "onezone",
        "x-onedata-resource": "upriv",
        "x-onedata-method": "onezone_logic:remove_privileges",
        "summary": "Remove group's Onezone privileges",
        "description": "Removes all privileges for a group {id} to Onezone.\n\nThis operation requires `set_privileges` privilege.\n\n***Example cURL requests***\n\n**Remove all groups privileges to Onezone service**\n```bash\ncurl -i -k -u username:password  -X DELETE  \\\nhttps://$HOST:8443/api/v3/onezone/privileges/groups/T5x_HhFYOnILOCUf9OqgExw00RwaU2\n```\n",
        "responses": {
          "200": {
            "description": "The group privileges have been added."
          },
          "400": {
            "description": "Invalid request.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "401": {
            "description": "Authentication error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "Authorization error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Resource not found.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server Error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Group ID.",
            "type": "string",
            "required": true
          }
        ]
      }
    },
    "/handle_services": {
      "get": {
        "operationId": "get_handle_services",
        "tags": [
          "Handle"
        ],
        "x-onedata-service": "onezone",
        "x-onedata-module": "handle_service",
        "x-onedata-resource": "handle_service",
        "x-onedata-method": "handle_logic:get_handle_services",
        "x-onedata-permissions": [
          "list_handle_services"
        ],
        "summary": "Get handle services",
        "description": "Returns the list of registered handle services.\n\n***Example cURL requests***\n\n**Get handle services**\n```bash\ncurl -k -u username:password -X GET https://$HOST:8443/api/v3/handle_services\n\n[\n  \"SADHLKJhlkASHDLAKSHDLKJHJjLH\", \n  \"LAKSHDLKJHJjLHSADHLKJhlkASHD\"\n]\n```\n",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "The list of identifiers of registered handle services.",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          "400": {
            "description": "Invalid request.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "401": {
            "description": "Authentication error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "Authorization error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Resource not found.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server Error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "post": {
        "operationId": "add_handle_service",
        "tags": [
          "Handle"
        ],
        "x-onedata-service": "onezone",
        "x-onedata-module": "handle_service",
        "x-onedata-resource": "handle_service",
        "x-onedata-method": "handle_logic:add_handle_service",
        "x-onedata-permissions": [
          "list_handle_services"
        ],
        "summary": "Add handle service",
        "description": "Allows to register a new handle service.\n\n***Example cURL requests***\n\n**Add handle services**\n```bash\ncurl -k -u username:password -X POST  -H \"Content-type: application/json\" \\\n-d '{ ... }' https://$HOST:8443/api/v3/handle_services\n```\n",
        "consumes": [
          "application/json"
        ],
        "responses": {
          "204": {
            "description": "Request successful.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The endpoint of the new handle service resource including the generated GUID.\n"
              }
            }
          },
          "400": {
            "description": "Invalid request.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "401": {
            "description": "Authentication error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "Authorization error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Resource not found.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server Error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "parameters": [
          {
            "name": "handleService",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/HandleService"
            }
          }
        ]
      }
    },
    "/handle_services/{id}": {
      "get": {
        "operationId": "get_handle_service",
        "tags": [
          "Handle"
        ],
        "x-onedata-service": "onezone",
        "x-onedata-module": "handle_service",
        "x-onedata-resource": "handle_service",
        "x-onedata-method": "handle_logic:get_handle_service",
        "x-onedata-permissions": [
          "view_handle_service"
        ],
        "summary": "Get handle service",
        "description": "Returns the properties of a specific handle service.\n\nThis operation requires `view_handle_service` privilege.\n\n***Example cURL requests***\n\n**Get handle services**\n```bash\ncurl -k -u username:password -X GET \\\nhttps://$HOST:8443/api/v3/handle_services/SADHLKJhlkASHDLAKSHDLKJHJjLH\n\n{\n    \"name\": \"MyCommunity Handle service\",\n    \"proxyEndpoint\": \"https://localhost:17000/handle_proxy\",\n    \"serviceProperties\": {\n        \"allowTemplateOverride\": false,\n        \"doiEndpoint\": \"/doi\",\n        \"host\": \"https://mds.test.datacite.org\",\n        \"identifierTemplate\": \"{{space.name}}-{{space.guid}}\",\n        \"mediaEndpoint\": \"/media\",\n        \"metadataEndpoint\": \"/metadata\",\n        \"password\": \"pa$$word\",\n        \"prefix\": 10.5072,\n        \"type\": \"DOI\",\n        \"username\": \"alice\"\n    }\n}\n```\n",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "The list of identifiers of registered handle services.",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          "400": {
            "description": "Invalid request.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "401": {
            "description": "Authentication error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "Authorization error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Resource not found.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server Error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ]
      },
      "patch": {
        "operationId": "modify_handle_service",
        "tags": [
          "Handle"
        ],
        "x-onedata-service": "onezone",
        "x-onedata-module": "handle_service",
        "x-onedata-resource": "handle_service",
        "x-onedata-method": "handle_logic:modify_handle_services",
        "x-onedata-permissions": [
          "modify_handle_service"
        ],
        "summary": "Modify handle service",
        "description": "Allows to update a registeed handle service.\n\nThis operation requires `modify_handle_services` privilege.\n\n***Example cURL requests***\n\n**Modify handle service password**\n```bash\ncurl -k -u username:password -X PATCH  -H \"Content-type: application/json\" \\\n-d '{\"password\": \"new_password\"}' \\\nhttps://$HOST:8443/api/v3/handle_services/LKHASDkkjhASDLHU70ASDn\n```\n",
        "consumes": [
          "application/json"
        ],
        "responses": {
          "204": {
            "description": "Update was successful."
          },
          "400": {
            "description": "Invalid request.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "401": {
            "description": "Authentication error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "Authorization error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Resource not found.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server Error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "handleService",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/HandleServiceUpdate"
            }
          }
        ]
      },
      "delete": {
        "operationId": "delete_handle_service",
        "tags": [
          "Handle"
        ],
        "x-onedata-service": "onezone",
        "x-onedata-module": "handle_service",
        "x-onedata-resource": "handle_service",
        "x-onedata-method": "handle_logic:delete_handle_services",
        "x-onedata-permissions": [
          "delete_handle_service"
        ],
        "summary": "Unregister handle service",
        "description": "Allows to unregister a registeed handle service.\n\nThis operation requires `delete_handle_services` privilege.\n\n***Example cURL requests***\n\n**Unregister handle service**\n```bash\ncurl -k -u username:password -X DELETE \\\nhttps://$HOST:8443/api/v3/handle_services/LKHASDkkjhASDLHU70ASDn\n```\n",
        "responses": {
          "202": {
            "description": "Unregistration was successful."
          },
          "400": {
            "description": "Invalid request.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "401": {
            "description": "Authentication error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "Authorization error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Resource not found.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server Error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ]
      }
    },
    "/handle_services/{id}/users": {
      "get": {
        "operationId": "list_handle_service_users",
        "tags": [
          "Handle"
        ],
        "x-onedata-service": "onezone",
        "x-onedata-module": "handle_service",
        "x-onedata-resource": "handle_service",
        "x-onedata-method": "handle_logic:get_handle_service_users",
        "x-onedata-permissions": [
          "view_handle_service"
        ],
        "summary": "Get handle service users",
        "description": "Returns all users with access to a handle service instance\n\nThis operation requires `view_handle_service` privilege.\n\n***Example cURL requests***\n\n**Get handle service users**\n```bash\ncurl -k -u username:password -X GET \\\nhttps://$HOST:8443/api/v3/handle_services/SADHLKJhlkASHDLAKSHDLKJHJjLH/users\n\n[\n  \"LKJhlkASHDLAKSHDLKJHJjL\",\n  \"LAKSHDLKJHJjLLKJhlkASHD\"\n]\n```\n",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "The list of identifiers of users with access to specific handle service.",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          "400": {
            "description": "Invalid request.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "401": {
            "description": "Authentication error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "Authorization error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Resource not found.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server Error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the handle service.",
            "required": true,
            "type": "string"
          }
        ]
      }
    },
    "/handle_services/{id}/users/{uid}": {
      "put": {
        "operationId": "add_handle_service_user",
        "tags": [
          "Handle"
        ],
        "x-onedata-service": "onezone",
        "x-onedata-module": "handle_service",
        "x-onedata-resource": "handle_service",
        "x-onedata-method": "handle_logic:add_handle_service_user",
        "x-onedata-permissions": [
          "modify_handle_service"
        ],
        "summary": "Add handle service user",
        "description": "Allows to add a user to a handle service.\n\nThis operation requires `modify_handle_service` privilege.\n\n***Example cURL requests***\n\n**Add handle service user**\n```bash\ncurl -k -u username:password -X PUT \\\nhttps://$HOST:8443/api/v3/handle_services/SADHLKJhlkASHDLAKSHDLKJHJjLH/users/DLAKSHDLKJHJjLHADHLKJh\n```\n",
        "produces": [
          "application/json"
        ],
        "responses": {
          "204": {
            "description": "User added successfully."
          },
          "400": {
            "description": "Invalid request.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "401": {
            "description": "Authentication error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "Authorization error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Resource not found.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server Error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the handle service.",
            "required": true,
            "type": "string"
          },
          {
            "name": "uid",
            "in": "path",
            "description": "The ID of the user to add to handle service.",
            "required": true,
            "type": "string"
          }
        ]
      },
      "delete": {
        "operationId": "remove_handle_service_user",
        "tags": [
          "Handle"
        ],
        "x-onedata-service": "onezone",
        "x-onedata-module": "handle_service",
        "x-onedata-resource": "handle_service",
        "x-onedata-method": "handle_logic:remove_handle_service_user",
        "x-onedata-permissions": [
          "modify_handle_service"
        ],
        "summary": "Remove handle service user",
        "description": "Allows to remove a user from access to a handle service.\n\nThis operation requires `modify_handle_service` privilege.\n\n***Example cURL requests***\n\n**Remove handle service user**\n```bash\ncurl -k -u username:password -X DELETE \\\nhttps://$HOST:8443/api/v3/handle_services/SADHLKJhlkASHDLAKSHDLKJHJjLH/users/DLAKSHDLKJHJjLHADHLKJh\n```\n",
        "responses": {
          "202": {
            "description": "User removed successfully."
          },
          "400": {
            "description": "Invalid request.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "401": {
            "description": "Authentication error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "Authorization error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Resource not found.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server Error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the handle service.",
            "required": true,
            "type": "string"
          },
          {
            "name": "uid",
            "in": "path",
            "description": "The ID of the user to remove from handle service.",
            "required": true,
            "type": "string"
          }
        ]
      }
    },
    "/handle_services/{id}/users/{uid}/privileges": {
      "get": {
        "operationId": "get_handle_service_user_privileges",
        "tags": [
          "Handle"
        ],
        "x-onedata-service": "onezone",
        "x-onedata-module": "handle_service",
        "x-onedata-resource": "handle_service",
        "x-onedata-method": "handle_logic:get_handle_service_users",
        "x-onedata-permissions": [
          "view_handle_service"
        ],
        "summary": "Get handle service user privileges",
        "description": "Returns user privileges for accessing a handle service instance.\n\nThis operation requires `view_handle_service` privilege.\n\n***Example cURL requests***\n\n**Get handle service user privileges**\n```bash\ncurl -k -u username:password -X GET \\\nhttps://$HOST:8443/api/v3/handle_services/SADHLKJhlkASHDLAKSHDLKJHJjLH/users/hlkASHDLAKSHDLKJHJjLHSADHLKJhlk/privileges\n\n[\n  \"register_doi\",\n  \"view_handle_service\"\n]\n```\n",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "The list of privileges of a user to a specific handle service.",
            "schema": {
              "$ref": "#/definitions/HandleServicePrivileges"
            }
          },
          "400": {
            "description": "Invalid request.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "401": {
            "description": "Authentication error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "Authorization error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Resource not found.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server Error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the handle service.",
            "required": true,
            "type": "string"
          },
          {
            "name": "uid",
            "in": "path",
            "description": "The ID of the user of a handle service.",
            "required": true,
            "type": "string"
          }
        ]
      },
      "put": {
        "operationId": "set_handle_service_user_privileges",
        "tags": [
          "Handle"
        ],
        "x-onedata-service": "onezone",
        "x-onedata-module": "handle_service",
        "x-onedata-resource": "handle_service",
        "x-onedata-method": "handle_logic:set_handle_service_users",
        "x-onedata-permissions": [
          "modify_handle_service"
        ],
        "summary": "Set handle service user privileges",
        "description": "Sets user privileges for accessing a handle service instance.\n\nThis operation requires `modify_handle_service` privilege.\n\n***Example cURL requests***\n\n**Set handle service user privileges**\n```bash\ncurl -k -u username:password -X PUT  -H \"Content-type: application/json\" \\\n-d '{\"privileges\": [\"register_handle\"]}' \\\nhttps://$HOST:8443/api/v3/handle_services/SADHLKJhlkASHDLAKSHDLKJHJjLH/users/hlkASHDLAKSHDLKJHJjLHSADHLKJhlk/privileges\n```\n",
        "consumes": [
          "application/json"
        ],
        "responses": {
          "204": {
            "description": "User privileges updated successfully."
          },
          "400": {
            "description": "Invalid request.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "401": {
            "description": "Authentication error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "Authorization error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Resource not found.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server Error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the handle service.",
            "required": true,
            "type": "string"
          },
          {
            "name": "uid",
            "in": "path",
            "description": "The ID of the user of a handle service.",
            "required": true,
            "type": "string"
          },
          {
            "name": "privileges",
            "in": "body",
            "description": "The list of user privileges to specific handle service.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/HandleServicePrivileges"
            }
          }
        ]
      }
    },
    "/handle_services/{id}/groups": {
      "get": {
        "operationId": "list_handle_service_groups",
        "tags": [
          "Handle"
        ],
        "x-onedata-service": "onezone",
        "x-onedata-module": "handle_service",
        "x-onedata-resource": "handle_service",
        "x-onedata-method": "handle_logic:get_handle_service_groups",
        "x-onedata-permissions": [
          "view_handle_service"
        ],
        "summary": "Get handle service groups",
        "description": "Returns all groups with access to a handle service instance\n\nThis operation requires `view_handle_service` privilege.\n\n***Example cURL requests***\n\n**Get handle service groups**\n```bash\ncurl -k -u username:password -X GET \\\nhttps://$HOST:8443/api/v3/handle_services/SADHLKJhlkASHDLAKSHDLKJHJjLH/groups\n\n[\n  \"LKJhlkASHDLAKSHDLKJHJjL\",\n  \"LAKSHDLKJHJjLLKJhlkASHD\"\n]\n```\n",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "The list of identifiers of groups with access to specific handle service.",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          "400": {
            "description": "Invalid request.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "401": {
            "description": "Authentication error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "Authorization error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Resource not found.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server Error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the handle service.",
            "required": true,
            "type": "string"
          }
        ]
      }
    },
    "/handle_services/{id}/groups/{gid}": {
      "put": {
        "operationId": "add_handle_service_group",
        "tags": [
          "Handle"
        ],
        "x-onedata-service": "onezone",
        "x-onedata-module": "handle_service",
        "x-onedata-resource": "handle_service",
        "x-onedata-method": "handle_logic:add_handle_service_group",
        "x-onedata-permissions": [
          "modify_handle_service"
        ],
        "summary": "Add handle service group",
        "description": "Allows to add a group to a handle service.\n\nThis operation requires `modify_handle_service` privilege.\n\n***Example cURL requests***\n\n**Add handle service user**\n```bash\ncurl -k -u username:password -X PUT \\\nhttps://$HOST:8443/api/v3/handle_services/SADHLKJhlkASHDLAKSHDLKJHJjLH/groups/DLAKSHDLKJHJjLHADHLKJh\n```\n",
        "produces": [
          "application/json"
        ],
        "responses": {
          "204": {
            "description": "Group added successfully."
          },
          "400": {
            "description": "Invalid request.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "401": {
            "description": "Authentication error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "Authorization error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Resource not found.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server Error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the handle service.",
            "required": true,
            "type": "string"
          },
          {
            "name": "gid",
            "in": "path",
            "description": "The ID of the group to add to handle service.",
            "required": true,
            "type": "string"
          }
        ]
      },
      "delete": {
        "operationId": "remove_handle_service_group",
        "tags": [
          "Handle"
        ],
        "x-onedata-service": "onezone",
        "x-onedata-module": "handle_service",
        "x-onedata-resource": "handle_service",
        "x-onedata-method": "handle_logic:remove_handle_service_group",
        "x-onedata-permissions": [
          "modify_handle_service"
        ],
        "summary": "Add handle service group",
        "description": "Allows to remove a group from access to a handle service.\n\nThis operation requires `modify_handle_service` privilege.\n\n***Example cURL requests***\n\n**Remove handle service group**\n```bash\ncurl -k -u username:password -X DELETE \\\nhttps://$HOST:8443/api/v3/handle_services/SADHLKJhlkASHDLAKSHDLKJHJjLH/group/DLAKSHDLKJHJjLHADHLKJh\n```\n",
        "responses": {
          "202": {
            "description": "Group removed successfully."
          },
          "400": {
            "description": "Invalid request.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "401": {
            "description": "Authentication error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "Authorization error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Resource not found.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server Error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the handle service.",
            "required": true,
            "type": "string"
          },
          {
            "name": "gid",
            "in": "path",
            "description": "The ID of the group to remove from handle service.",
            "required": true,
            "type": "string"
          }
        ]
      }
    },
    "/handle_services/{id}/groups/{gid}/privileges": {
      "get": {
        "operationId": "get_handle_service_group_privileges",
        "tags": [
          "Handle"
        ],
        "x-onedata-service": "onezone",
        "x-onedata-module": "handle_service",
        "x-onedata-resource": "handle_service",
        "x-onedata-method": "handle_logic:get_handle_service_group",
        "x-onedata-permissions": [
          "view_handle_service"
        ],
        "summary": "Get handle service group privileges",
        "description": "Returns group privileges for accessing a handle service instance.\n\nThis operation requires `view_handle_service` privilege.\n\n***Example cURL requests***\n\n**Get handle service group privileges**\n```bash\ncurl -k -u username:password -X GET \\\nhttps://$HOST:8443/api/v3/handle_services/SADHLKJhlkASHDLAKSHDLKJHJjLH/group/hlkASHDLAKSHDLKJHJjLHSADHLKJhlk/privileges\n\n[\n  \"register_doi\",\n  \"view_handle_service\"\n]\n```\n",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "The list of privileges of a group to a specific handle service.",
            "schema": {
              "$ref": "#/definitions/HandleServicePrivileges"
            }
          },
          "400": {
            "description": "Invalid request.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "401": {
            "description": "Authentication error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "Authorization error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Resource not found.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server Error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the handle service.",
            "required": true,
            "type": "string"
          },
          {
            "name": "gid",
            "in": "path",
            "description": "The ID of the group of a handle service.",
            "required": true,
            "type": "string"
          }
        ]
      },
      "put": {
        "operationId": "set_handle_service_group_privileges",
        "tags": [
          "Handle"
        ],
        "x-onedata-service": "onezone",
        "x-onedata-module": "handle_service",
        "x-onedata-resource": "handle_service",
        "x-onedata-method": "handle_logic:set_handle_service_group_privileges",
        "x-onedata-permissions": [
          "modify_handle_service"
        ],
        "summary": "Set handle service groups privileges",
        "description": "Sets group privileges for accessing a handle service instance.\n\nThis operation requires `modify_handle_service` privilege.\n\n***Example cURL requests***\n\n**Set handle service group privileges**\n```bash\ncurl -k -u username:password -X PUT  -H \"Content-type: application/json\" \\\n-d '{\"privileges\": [\"register_handle\"]}' \\\nhttps://$HOST:8443/api/v3/handle_services/SADHLKJhlkASHDLAKSHDLKJHJjLH/group/hlkASHDLAKSHDLKJHJjLHSADHLKJhlk/privileges\n```\n",
        "consumes": [
          "application/json"
        ],
        "responses": {
          "204": {
            "description": "Group privileges updated successfully."
          },
          "400": {
            "description": "Invalid request.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "401": {
            "description": "Authentication error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "Authorization error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Resource not found.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server Error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the handle service.",
            "required": true,
            "type": "string"
          },
          {
            "name": "gid",
            "in": "path",
            "description": "The ID of the group of a handle service.",
            "required": true,
            "type": "string"
          },
          {
            "name": "privileges",
            "in": "body",
            "description": "The list of group privileges to specific handle service.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/HandleServicePrivileges"
            }
          }
        ]
      }
    },
    "/handles": {
      "get": {
        "operationId": "get_handles",
        "tags": [
          "Handle"
        ],
        "x-onedata-service": "onezone",
        "x-onedata-module": "handle",
        "x-onedata-resource": "handle",
        "x-onedata-method": "handle_logic:get_handles",
        "x-onedata-permissions": [
          "list_handles"
        ],
        "summary": "Get handles",
        "description": "Returns the list of ID's of all handles accessible by the current user.\n\n***Example cURL requests***\n\n**Get handles**\n```bash\ncurl -k -u username:password -X GET https://$HOST:8443/api/v3/handles\n\n[\n  \"SADHLKJhlkASHDLAKSHDLKJHJjLH\", \n  \"LAKSHDLKJHJjLHSADHLKJhlkASHD\"\n]\n```\n",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "The list of handle identifiers (Onedata internal GUID's).",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          "400": {
            "description": "Invalid request.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "401": {
            "description": "Authentication error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "Authorization error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Resource not found.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server Error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "post": {
        "operationId": "register_handle",
        "tags": [
          "Handle"
        ],
        "x-onedata-service": "onezone",
        "x-onedata-module": "handle",
        "x-onedata-resource": "handle",
        "x-onedata-method": "handle_logic:add_handle",
        "x-onedata-permissions": [
          "register_handle"
        ],
        "summary": "Register handle",
        "description": "Allows to register a new handle identifier, using a specific handle service.\n\nThe handle service must be registered in Onedata separately.\n\nThis operation requires `register_handle` privilege.\n\n***Example cURL requests***\n\n**Register handle**\n```bash\ncurl -k -u username:password -X POST -H \"Content-type: application/json\" \\\n-d '{\"handleServiceId\": \"AFSASDARAWD32aasfASSD\", \"resourceType\": \"Share\", \"resourceId\": \"LKJGLSAKDGASGD34234JKAHSD\", \"metadata\": \"...\" }' \\\nhttps://$HOST:8443/api/v3/handles\n```\n",
        "consumes": [
          "application/json"
        ],
        "responses": {
          "204": {
            "description": "Request successful.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The endpoint of the new handle resource including the generated GUID.\n"
              }
            }
          },
          "400": {
            "description": "Invalid request.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "401": {
            "description": "Authentication error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "Authorization error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Resource not found.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server Error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "parameters": [
          {
            "name": "handleRegistrationRequest",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/HandleRegistrationRequest"
            }
          }
        ]
      }
    },
    "/handles/{hndl}": {
      "get": {
        "operationId": "get_handle",
        "tags": [
          "Handle"
        ],
        "x-onedata-service": "onezone",
        "x-onedata-module": "handle",
        "x-onedata-resource": "handle",
        "x-onedata-method": "handle_logic:get_handle",
        "x-onedata-permissions": [
          "view_handle"
        ],
        "summary": "Get handle",
        "description": "Returns the properties of a specific handle.\n\nThis operation requires `view_handle` privilege.\n\n***Example cURL requests***\n\n**Get handle**\n```bash\ncurl -k -u username:password -X GET \\\nhttps://$HOST:8443/api/v3/handles/SADHLKJhlkASHDLAKSHDLKJHJjLH\n\n{\n  \"handleId\": \"SADHLKJhlkASHDLAKSHDLKJHJjLH\",\n  \"handleType\": \"DOI\",\n  \"handleServiceId\": \"ASKDGHKAJSHDukjhasdlkjalksjd76876asdkb\",\n  \"handle\": \"10.572/ABCD-asdakjsdak87587asdk-1234/8\",\n  \"resourceId\": \"dlkjalkADKDGHKAJSHDukjhassjd76876asdkb\",\n  \"metadata\": \"...\"\n}\n```\n",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "The properties of a specific handle.",
            "schema": {
              "$ref": "#/definitions/Handle"
            }
          },
          "400": {
            "description": "Invalid request.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "401": {
            "description": "Authentication error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "Authorization error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Resource not found.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server Error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "parameters": [
          {
            "name": "hndl",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The handle ID (internal Onedata GUID) of the identifier."
          }
        ]
      },
      "patch": {
        "operationId": "modify_handle",
        "tags": [
          "Handle"
        ],
        "x-onedata-service": "onezone",
        "x-onedata-module": "handle",
        "x-onedata-resource": "handle",
        "x-onedata-method": "handle_logic:modify_handle",
        "x-onedata-permissions": [
          "modify_handle"
        ],
        "summary": "Modify handle",
        "description": "Allows to update a registeed handle, for instance change the Onedata resource\nto which it points to.\n\nThis operation requires `modify_handle` privilege.\n\n***Example cURL requests***\n\n**Modify handle resource**\n```bash\ncurl -k -u username:password -X PATCH  -H \"Content-type: application/json\" \\\n-d '{\"resourceId\": \"jalkADKDGHKAJSdlkHDukjhassjd76876asdkb\"}' \\\nhttps://$HOST:8443/api/v3/handles/LKHASDkkjhASDLHU70ASDn\n```\n",
        "consumes": [
          "application/json"
        ],
        "responses": {
          "204": {
            "description": "Update was successful."
          },
          "400": {
            "description": "Invalid request.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "401": {
            "description": "Authentication error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "Authorization error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Resource not found.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server Error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "parameters": [
          {
            "name": "hndl",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "handle",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Handle"
            }
          }
        ]
      },
      "delete": {
        "operationId": "delete_handle",
        "tags": [
          "Handle"
        ],
        "x-onedata-service": "onezone",
        "x-onedata-module": "handle",
        "x-onedata-resource": "handle",
        "x-onedata-method": "handle_logic:delete_handle",
        "x-onedata-permissions": [
          "delete_handle"
        ],
        "summary": "Unregister handle",
        "description": "Allows to unregister a registered handle.\n\nThis operation requires `delete_handle` privilege.\n\n***Example cURL requests***\n\n**Unregister handle**\n```bash\ncurl -k -u username:password -X DELETE \\\nhttps://$HOST:8443/api/v3/handles/SDLLKHASDkSDLHU70ASDnHU70ASDnkjhA\n```\n",
        "responses": {
          "202": {
            "description": "Unregistration was successful."
          },
          "400": {
            "description": "Invalid request.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "401": {
            "description": "Authentication error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "Authorization error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Resource not found.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server Error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "parameters": [
          {
            "name": "hndl",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ]
      }
    },
    "/handles/{hndl}/users": {
      "get": {
        "operationId": "list_handle_users",
        "tags": [
          "Handle"
        ],
        "x-onedata-service": "onezone",
        "x-onedata-module": "handle",
        "x-onedata-resource": "handle",
        "x-onedata-method": "handle_logic:get_handle_users",
        "x-onedata-permissions": [
          "view_handle_users"
        ],
        "summary": "Get handle users",
        "description": "Returns all users with access to a handle instance\n\nThis operation requires `view_handle` privilege.\n\n***Example cURL requests***\n\n**Get handle users**\n```bash\ncurl -k -u username:password -X GET \\\nhttps://$HOST:8443/api/v3/handles/SADHLKJhlkASHDLAKSHDLKJHJjLH/users\n\n[\n  \"LAKSHDLKLKJhlkASHDJHJjL\",\n  \"HDLKJHJjLLKLAKSJhlkASHD\"\n]\n```\n",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "The list of identifiers of users with access to specific handle.",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          "400": {
            "description": "Invalid request.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "401": {
            "description": "Authentication error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "Authorization error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Resource not found.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server Error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "parameters": [
          {
            "name": "hndl",
            "in": "path",
            "description": "The ID of the handle service.",
            "required": true,
            "type": "string"
          }
        ]
      }
    },
    "/handles/{hndl}/users/{uid}": {
      "put": {
        "operationId": "add_handle_user",
        "tags": [
          "Handle"
        ],
        "x-onedata-service": "onezone",
        "x-onedata-module": "handle",
        "x-onedata-resource": "handle",
        "x-onedata-method": "handle_logic:add_handle_user",
        "x-onedata-permissions": [
          "modify_handle"
        ],
        "summary": "Add handle user",
        "description": "Allows to add a user to a handle.\n\nThis operation requires `modify_handle_service` privilege.\n\n***Example cURL requests***\n\n**Add handle user**\n```bash\ncurl -k -u username:password -X PUT \\\nhttps://$HOST:8443/api/v3/handles/SADHLKJhlkASHDLAKSHDLKJHJjLH/users/DLAKSHDLKJHJjLHADHLKJh\n```\n",
        "produces": [
          "application/json"
        ],
        "responses": {
          "204": {
            "description": "User added successfully."
          },
          "400": {
            "description": "Invalid request.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "401": {
            "description": "Authentication error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "Authorization error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Resource not found.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server Error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "parameters": [
          {
            "name": "hndl",
            "in": "path",
            "description": "The ID of the handle.",
            "required": true,
            "type": "string"
          },
          {
            "name": "uid",
            "in": "path",
            "description": "The ID of the user to add to handle.",
            "required": true,
            "type": "string"
          }
        ]
      },
      "delete": {
        "operationId": "remove_handle_user",
        "tags": [
          "Handle"
        ],
        "x-onedata-service": "onezone",
        "x-onedata-module": "handle",
        "x-onedata-resource": "handle",
        "x-onedata-method": "handle_logic:remove_handle_user",
        "x-onedata-permissions": [
          "modify_handle"
        ],
        "summary": "Remove handle user",
        "description": "Allows to remove a user from access to a handle.\n\nThis operation requires `modify_handle` privilege.\n\n***Example cURL requests***\n\n**Remove handle service user**\n```bash\ncurl -k -u username:password -X DELETE \\\nhttps://$HOST:8443/api/v3/handles/AKSHDLKJHJjLHSADHLKJhlkASHDL/users/JHJjLHADHLKJhDLAKSHDLK\n```\n",
        "responses": {
          "202": {
            "description": "User removed successfully."
          },
          "400": {
            "description": "Invalid request.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "401": {
            "description": "Authentication error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "Authorization error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Resource not found.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server Error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "parameters": [
          {
            "name": "hndl",
            "in": "path",
            "description": "The ID of the handle.",
            "required": true,
            "type": "string"
          },
          {
            "name": "uid",
            "in": "path",
            "description": "The ID of the user to remove from handle.",
            "required": true,
            "type": "string"
          }
        ]
      }
    },
    "/handles/{hndl}/users/{uid}/privileges": {
      "get": {
        "operationId": "get_handle_user_privileges",
        "tags": [
          "Handle"
        ],
        "x-onedata-service": "onezone",
        "x-onedata-module": "handle",
        "x-onedata-resource": "handle",
        "x-onedata-method": "handle_logic:get_handle_users",
        "x-onedata-permissions": [
          "view_handle"
        ],
        "summary": "Get handle user privileges",
        "description": "Returns user privileges for accessing a handle instance.\n\nThis operation requires `view_handle` privilege.\n\n***Example cURL requests***\n\n**Get handle user privileges**\n```bash\ncurl -k -u username:password -X GET \\\nhttps://$HOST:8443/api/v3/handles/SADHLKJhlkASHDLAKSHDLKJHJjLH/users/hlkASHDLAKSHDLKJHJjLHSADHLKJhlk/privileges\n\n[\n  \"modify_handle\",\n  \"view_handle\"\n]\n```\n",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "The list of privileges of a user to a specific handle.",
            "schema": {
              "$ref": "#/definitions/HandlePrivileges"
            }
          },
          "400": {
            "description": "Invalid request.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "401": {
            "description": "Authentication error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "Authorization error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Resource not found.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server Error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "parameters": [
          {
            "name": "hndl",
            "in": "path",
            "description": "The ID of the handle service.",
            "required": true,
            "type": "string"
          },
          {
            "name": "uid",
            "in": "path",
            "description": "The ID of the user of a handle service.",
            "required": true,
            "type": "string"
          }
        ]
      },
      "put": {
        "operationId": "set_handle_user_privileges",
        "tags": [
          "Handle"
        ],
        "x-onedata-service": "onezone",
        "x-onedata-module": "handle",
        "x-onedata-resource": "handle",
        "x-onedata-method": "handle_logic:set_handle_users",
        "x-onedata-permissions": [
          "modify_handle"
        ],
        "summary": "Set handle user privileges",
        "description": "Sets user privileges for accessing a handle instance.\n\nThis operation requires `modify_handle` privilege.\n\n***Example cURL requests***\n\n**Set handle user privileges**\n```bash\ncurl -k -u username:password -X PUT -H \"Content-type: application/json\" \\\n-d '{\"privileges\": [\"handle_change_data\"]}' \\\nhttps://$HOST:8443/api/v3/handles/SADHLKJhlkASHDLAKSHDLKJHJjLH/users/hlkASHDLAKSHDLKJHJjLHSADHLKJhlk/privileges\n```\n",
        "consumes": [
          "application/json"
        ],
        "responses": {
          "204": {
            "description": "User privileges updated successfully."
          },
          "400": {
            "description": "Invalid request.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "401": {
            "description": "Authentication error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "Authorization error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Resource not found.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server Error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "parameters": [
          {
            "name": "hndl",
            "in": "path",
            "description": "The ID of the handle.",
            "required": true,
            "type": "string"
          },
          {
            "name": "uid",
            "in": "path",
            "description": "The ID of the user of a handle.",
            "required": true,
            "type": "string"
          },
          {
            "name": "privileges",
            "in": "body",
            "description": "The list of user privileges to a specific handle.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/HandlePrivileges"
            }
          }
        ]
      }
    },
    "/handles/{hndl}/groups": {
      "get": {
        "operationId": "list_handle_groups",
        "tags": [
          "Handle"
        ],
        "x-onedata-service": "onezone",
        "x-onedata-module": "handle",
        "x-onedata-resource": "handle",
        "x-onedata-method": "handle_logic:get_handle_groups",
        "x-onedata-permissions": [
          "view_handle_groups"
        ],
        "summary": "Get handle groups",
        "description": "Returns all groups with access to a handle instance\n\nThis operation requires `view_handle` privilege.\n\n***Example cURL requests***\n\n**Get handle groups**\n```bash\ncurl -k -u username:password -X GET \\\nhttps://$HOST:8443/api/v3/handles/SADHLKJhlkASHDLAKSHDLKJHJjLH/groups\n\n[\n  \"LKLKJhlkASHDJLAKSHDHJjL\",\n  \"KJHJjLHDLLKLAKSJhlkASHD\"\n]\n```\n",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "The list of identifiers of groups with access to specific handle.",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          "400": {
            "description": "Invalid request.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "401": {
            "description": "Authentication error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "Authorization error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Resource not found.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server Error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "parameters": [
          {
            "name": "hndl",
            "in": "path",
            "description": "The ID of the handle service.",
            "required": true,
            "type": "string"
          }
        ]
      }
    },
    "/handles/{hndl}/groups/{gid}": {
      "put": {
        "operationId": "add_handle_group",
        "tags": [
          "Handle"
        ],
        "x-onedata-service": "onezone",
        "x-onedata-module": "handle",
        "x-onedata-resource": "handle",
        "x-onedata-method": "handle_logic:add_handle_group",
        "x-onedata-permissions": [
          "modify_handle"
        ],
        "summary": "Add handle group",
        "description": "Allows to add a group to a handle.\n\nThis operation requires `modify_handle` privilege.\n\n***Example cURL requests***\n\n**Add handle group**\n```bash\ncurl -k -u username:password -X PUT \\\nhttps://$HOST:8443/api/v3/handles/SADHLKJhlkASHDLAKSHDLKJHJjLH/groups/DLAKSHDLKJHJjLHADHLKJh\n```\n",
        "produces": [
          "application/json"
        ],
        "responses": {
          "204": {
            "description": "Group added successfully."
          },
          "400": {
            "description": "Invalid request.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "401": {
            "description": "Authentication error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "Authorization error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Resource not found.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server Error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "parameters": [
          {
            "name": "hndl",
            "in": "path",
            "description": "The ID of the handle.",
            "required": true,
            "type": "string"
          },
          {
            "name": "gid",
            "in": "path",
            "description": "The ID of the group to add to handle.",
            "required": true,
            "type": "string"
          }
        ]
      },
      "delete": {
        "operationId": "remove_handle_group",
        "tags": [
          "Handle"
        ],
        "x-onedata-service": "onezone",
        "x-onedata-module": "handle",
        "x-onedata-resource": "handle",
        "x-onedata-method": "handle_logic:remove_handle_group",
        "x-onedata-permissions": [
          "modify_handle"
        ],
        "summary": "Add handle group",
        "description": "Allows to remove a group from access to a handle.\n\nThis operation requires `modify_handle` privilege.\n\n***Example cURL requests***\n\n**Remove handle service group**\n```bash\ncurl -k -u username:password -X DELETE \\\nhttps://$HOST:8443/api/v3/handles/AKSHDLKJHJjLHSADHLKJhlkASHDL/groups/JHJjLHADHLKJhDLAKSHDLK\n```\n",
        "responses": {
          "202": {
            "description": "Group removed successfully."
          },
          "400": {
            "description": "Invalid request.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "401": {
            "description": "Authentication error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "Authorization error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Resource not found.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server Error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "parameters": [
          {
            "name": "hndl",
            "in": "path",
            "description": "The ID of the handle.",
            "required": true,
            "type": "string"
          },
          {
            "name": "gid",
            "in": "path",
            "description": "The ID of the group to remove from handle.",
            "required": true,
            "type": "string"
          }
        ]
      }
    },
    "/handles/{hndl}/groups/{gid}/privileges": {
      "get": {
        "operationId": "get_handle_group_privileges",
        "tags": [
          "Handle"
        ],
        "x-onedata-service": "onezone",
        "x-onedata-module": "handle",
        "x-onedata-resource": "handle",
        "x-onedata-method": "handle_logic:get_handle_group",
        "x-onedata-permissions": [
          "view_handle"
        ],
        "summary": "Get handle group privileges",
        "description": "Returns group privileges for accessing a handle instance.\n\nThis operation requires `view_handle` privilege.\n\n***Example cURL requests***\n\n**Get handle group privileges**\n```bash\ncurl -k -u username:password -X GET \\\nhttps://$HOST:8443/api/v3/handles/DLAKSHDLKJHJjSADHLKJhlkASHLH/group/HJjLHSADHhlkASHDLAKSHDLKJLKJhlk/privileges\n\n[\n  \"view_handle\n]\n```\n",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "The list of privileges of a group to a specific handle.",
            "schema": {
              "$ref": "#/definitions/HandlePrivileges"
            }
          },
          "400": {
            "description": "Invalid request.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "401": {
            "description": "Authentication error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "Authorization error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Resource not found.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server Error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "parameters": [
          {
            "name": "hndl",
            "in": "path",
            "description": "The ID of the handle.",
            "required": true,
            "type": "string"
          },
          {
            "name": "gid",
            "in": "path",
            "description": "The ID of the group of a handle.",
            "required": true,
            "type": "string"
          }
        ]
      },
      "put": {
        "operationId": "set_handle_group_privileges",
        "tags": [
          "Handle"
        ],
        "x-onedata-service": "onezone",
        "x-onedata-module": "handle",
        "x-onedata-resource": "handle",
        "x-onedata-method": "handle_logic:set_handle_group_privileges",
        "x-onedata-permissions": [
          "modify_handle"
        ],
        "summary": "Set handle groups privileges",
        "description": "Sets group privileges for accessing a handle instance.\n\nThis operation requires `modify_handle` privilege.\n\n***Example cURL requests***\n\n**Set handle group privileges**\n```bash\ncurl -k -u username:password -X PUT  -H \"Content-type: application/json\" \\\n-d '{\"privileges\": [\"handle_view_data\"]}' \\\nhttps://$HOST:8443/api/v3/handles/SADHLKJhlkASHDLAKSHDLKJHJjLH/group/hlkASHDLAKSHDLKJHJjLHSADHLKJhlk/privileges\n```\n",
        "consumes": [
          "application/json"
        ],
        "responses": {
          "204": {
            "description": "Group privileges updated successfully."
          },
          "400": {
            "description": "Invalid request.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "401": {
            "description": "Authentication error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "Authorization error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Resource not found.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server Error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "parameters": [
          {
            "name": "hndl",
            "in": "path",
            "description": "The Onedata ID of the handle.",
            "required": true,
            "type": "string"
          },
          {
            "name": "gid",
            "in": "path",
            "description": "The ID of the group of a handle.",
            "required": true,
            "type": "string"
          },
          {
            "name": "privileges",
            "in": "body",
            "description": "The list of group privileges to a specific handle.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/HandlePrivileges"
            }
          }
        ]
      }
    }
  },
  "definitions": {
    "Error": {
      "type": "object",
      "description": "Generic error model for REST requests.",
      "properties": {
        "error": {
          "description": "Identifier representing internal error code.",
          "type": "string"
        },
        "error_description": {
          "description": "Detailed error message.",
          "type": "string"
        }
      },
      "example": {
        "error": "invalid_token",
        "error_description": "Provided token could not be validated."
      }
    },
    "User": {
      "type": "object",
      "description": "Describes a user account.",
      "properties": {
        "userId": {
          "type": "string",
          "description": "Unique user ID."
        },
        "name": {
          "type": "string",
          "description": "The user friendly name of storage resource."
        },
        "connectedAccounts": {
          "type": "array",
          "description": "The list of accounts connected to this user.",
          "items": {
            "$ref": "#/definitions/ConnectedAccount"
          }
        },
        "alias": {
          "type": "string",
          "description": "User alias"
        },
        "emailList": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "required": [
        "userId",
        "name"
      ],
      "example": {
        "userId": "ALKJSDH77i79ASDKJA-ASDBAS9-87",
        "name": "Rudolf Lingens",
        "connectedAccounts": [
          {
            "accountId": "ASD879ASD-7SADASFSsa0831",
            "providerId": "7YASBFLJ-123ASD870-ASDASD"
          },
          {
            "accountId": "QWESsD-7SADASFSsa0831",
            "providerId": "7QWEJ-123ASD870-ASDASD"
          }
        ],
        "alias": "John Doe",
        "emailList": [
          "rudolf.linges@example.com",
          "john.doe@example.com"
        ]
      }
    },
    "ProviderRegistrationRequest": {
      "type": "object",
      "description": "Provider reqistration request.",
      "properties": {
        "urls": {
          "type": "array",
          "description": "The list of urls where the provider can be reached.",
          "items": {
            "type": "string"
          }
        },
        "redirectionPoint": {
          "type": "string",
          "description": "The redirection URL for the provider."
        },
        "csr": {
          "type": "string",
          "description": "Certificate Signature Request to generate new certificate for the provider."
        },
        "latitude": {
          "type": "number",
          "x-erlang-type": "float",
          "description": "The geographical latitude of the provider data center location."
        },
        "longitude": {
          "type": "number",
          "x-erlang-type": "float",
          "description": "The geographical longitude of the provider data center location."
        }
      },
      "required": [
        "urls",
        "redirectionPoint",
        "csr",
        "latitude",
        "longitude"
      ],
      "example": {
        "urls": [
          "http://beta.onedata.org/provider1",
          "http://beta.onedata.org/provider2"
        ],
        "redirectionPoint": "http://beta.onedata.org/provider2",
        "csr": "-----BEGIN CERTIFICATE REQUEST-----\nMIIByjCCATMCAQAwgYkxCzAJBgNVBAYTAlVTMRMwEQYDVQQIEwpDYWxpZm9ybmlh\nMRYwFAYDVQQHEw1Nb3VudGFpbiBWaWV3MRMwEQYDVQQKEwpHb29nbGUgSW5jMR8w\nHQYDVQQLExZJbmZvcm1hdGlvbiBUZWNobm9sb2d5MRcwFQYDVQQDEw53d3cuZ29v\nZ2xlLmNvbTCBnzANBgkqhkiG9w0BAQEFAAOBjQAwgYkCgYEApZtYJCHJ4VpVXHfV\nIlstQTlO4qC03hjX+ZkPyvdYd1Q4+qbAeTwXmCUKYHThVRd5aXSqlPzyIBwieMZr\nWFlRQddZ1IzXAlVRDWwAo60KecqeAXnnUK+5fXoTI/UgWshre8tJ+x/TMHaQKR/J\ncIWPhqaQhsJuzZbvAdGA80BLxdMCAwEAAaAAMA0GCSqGSIb3DQEBBQUAA4GBAIhl\n4PvFq+e7ipARgI5ZM+GZx6mpCz44DTo0JkwfRDf+BtrsaC0q68eTf2XhYOsq4fkH\nQ0uA0aVog3f5iJxCa3Hp5gxbJQ6zV6kJ0TEsuaaOhEko9sdpCoPOnRBm2i/XRD2D\n6iNh8f8z0ShGsFqjDgFHyF3o+lUyj+UC6H1QW7bn\n-----END CERTIFICATE REQUEST-----\n",
        "latitude": 50.0647,
        "longitude": 19.945
      }
    },
    "ProviderDetails": {
      "type": "object",
      "description": "Provider properties.",
      "properties": {
        "providerId": {
          "type": "string",
          "description": "The provider ID."
        },
        "urls": {
          "type": "array",
          "description": "The list of urls where the provider can be reached.",
          "items": {
            "type": "string"
          }
        },
        "redirectionPoint": {
          "type": "string",
          "description": "The redirection URL for the provider."
        },
        "latitude": {
          "type": "number",
          "description": "The geographical latitude of the provider data center location."
        },
        "longitude": {
          "type": "number",
          "description": "The geographical longitude of the provider data center location."
        }
      },
      "example": {
        "providerId": "LASDASJDBH89869ASD79869asd",
        "urls": [
          "http://beta.onedata.org/provider1",
          "http://beta.onedata.org/provider2"
        ],
        "redirectionPoint": "http://beta.onedata.org/provider2",
        "latitude": 50.0647,
        "longitude": 19.945
      }
    },
    "AuthenticationToken": {
      "type": "object",
      "description": "Authentication token.",
      "properties": {
        "identifier": {
          "type": "string",
          "description": "The authentication token for Onezone service."
        }
      },
      "required": [
        "identifier"
      ],
      "example": {
        "identifier": "JKAxNWxvY2F0aW9uIG9uZXpvbmUKMDAzYmlkZW50aWZpZXIgOEhmSEFSSGdrbHFCa1pWSTRsNk1CVHZTU3Z0OThwcHA2OTQ4czhRN1NPawowMDFhY2lkIHRpbWUgPCAxNDk2MTQwMTQ0CjAwMmZzaWduYXR1cmUg88OIBmav38YI0Z2-dw-fvrZ3XP-J0HjCN0taT3_WungK"
      }
    },
    "Space": {
      "type": "object",
      "description": "User space parameters.",
      "properties": {
        "spaceId": {
          "type": "string",
          "description": "Unique ID of the space."
        },
        "name": {
          "type": "string",
          "description": "The name of the space."
        },
        "token": {
          "type": "string",
          "description": "Provider token."
        },
        "size": {
          "type": "integer",
          "description": "The size of requested space support."
        }
      },
      "required": [
        "name",
        "token",
        "size"
      ],
      "example": {
        "name": "My Private space",
        "token": "JKAxNWxvY2F0aW9uIG9uZXpvbmUKMDAzYmlkZW50aWZpZXIgOEhmSEFSSGdrbHFCa1pWSTRsNk1CVHZTU3Z0OThwcHA2OTQ4czhRN1NPawowMDFhY2lkIHRpbWUgPCAxNDk2MTQwMTQ0CjAwMmZzaWduYXR1cmUg88OIBmav38YI0Z2-dw-fvrZ3XP-J0HjCN0taT3_WungK",
        "size": 150
      }
    },
    "SpaceSupportToken": {
      "type": "object",
      "description": "Space support token for provider.",
      "properties": {
        "token": {
          "type": "string",
          "description": "The token for supporting a space."
        }
      },
      "required": [
        "token"
      ],
      "example": {
        "token": "JKAxNWxvY2F0aW9uIG9uZXpvbmUKMDAzYmlkZW50aWZpZXIgOEhmSEFSSGdrbHFCa1pWSTRsNk1CVHZTU3Z0OThwcHA2OTQ4czhRN1NPawowMDFhY2lkIHRpbWUgPCAxNDk2MTQwMTQ0CjAwMmZzaWduYXR1cmUg88OIBmav38YI0Z2-dw-fvrZ3XP-J0HjCN0taT3_WungK"
      }
    },
    "ClientToken": {
      "type": "object",
      "description": "Client token for authorization from command line or via REST.",
      "properties": {
        "token": {
          "type": "string",
          "description": "The client token."
        }
      },
      "required": [
        "token"
      ],
      "example": {
        "token": "JKAxNWxvY2F0aW9uIG9uZXpvbmUKMDAzYmlkZW50aWZpZXIgOEhmSEFSSGdrbHFCa1pWSTRsNk1CVHZTU3Z0OThwcHA2OTQ4czhRN1NPawowMDFhY2lkIHRpbWUgPCAxNDk2MTQwMTQ0CjAwMmZzaWduYXR1cmUg88OIBmav38YI0Z2-dw-fvrZ3XP-J0HjCN0taT3_WungK"
      }
    },
    "DefaultSpace": {
      "type": "object",
      "description": "Default space Id.",
      "properties": {
        "spaceId": {
          "type": "string",
          "description": "The ID of the default user space."
        }
      },
      "required": [
        "spaceId"
      ],
      "example": {
        "spaceId": "7YASBFLJ-123ASD870-ASDASD"
      }
    },
    "SpaceInviteToken": {
      "type": "object",
      "description": "Space invitation token for user.",
      "properties": {
        "token": {
          "type": "string",
          "description": "The token for joining a space."
        }
      },
      "required": [
        "token"
      ],
      "example": {
        "token": "JKAxNWxvY2F0aW9uIG9uZXpvbmUKMDAzYmlkZW50aWZpZXIgOEhmSEFSSGdrbHFCa1pWSTRsNk1CVHZTU3Z0OThwcHA2OTQ4czhRN1NPawowMDFhY2lkIHRpbWUgPCAxNDk2MTQwMTQ0CjAwMmZzaWduYXR1cmUg88OIBmav38YI0Z2-dw-fvrZ3XP-J0HjCN0taT3_WungK"
      }
    },
    "Group": {
      "type": "object",
      "description": "Group details.",
      "properties": {
        "groupId": {
          "type": "string",
          "description": "Unique group Id."
        },
        "name": {
          "type": "string",
          "description": "The name of the space."
        },
        "type": {
          "type": "string",
          "description": "The type of the group.",
          "enum": [
            "organization",
            "unit",
            "team",
            "role"
          ]
        }
      },
      "required": [
        "name",
        "type"
      ],
      "example": {
        "name": "Test group",
        "type": "role"
      }
    },
    "GroupInviteToken": {
      "type": "object",
      "description": "Group invitation token for user.",
      "properties": {
        "token": {
          "type": "string",
          "description": "The token for joining a group."
        }
      },
      "required": [
        "token"
      ],
      "example": {
        "token": "JKAxNWxvY2F0aW9uIG9uZXpvbmUKMDAzYmlkZW50aWZpZXIgOEhmSEFSSGdrbHFCa1pWSTRsNk1CVHZTU3Z0OThwcHA2OTQ4czhRN1NPawowMDFhY2lkIHRpbWUgPCAxNDk2MTQwMTQ0CjAwMmZzaWduYXR1cmUg88OIBmav38YI0Z2-dw-fvrZ3XP-J0HjCN0taT3_WungK"
      }
    },
    "ConnectedAccount": {
      "type": "object",
      "description": "Default space Id.",
      "properties": {
        "accountId": {
          "type": "string",
          "description": "Account Id."
        },
        "providerId": {
          "type": "string",
          "description": "Provider Id."
        }
      },
      "example": {
        "accountId": "ASD879ASD-7SADASFSsa0831",
        "providerId": "7YASBFLJ-123ASD870-ASDASD"
      }
    },
    "SpacePrivileges": {
      "type": "object",
      "description": "The list of space privileges.",
      "properties": {
        "privileges": {
          "type": "array",
          "items": {
            "type": "string",
            "enum": [
              "space_invite_user",
              "space_remove_user",
              "space_invite_group",
              "space_remove_group",
              "space_set_privileges",
              "space_remove",
              "space_add_provider",
              "space_remove_provider",
              "space_change_data",
              "space_view_data"
            ]
          }
        }
      },
      "example": {
        "privileges": [
          "space_invite_user",
          "space_remove_user",
          "space_invite_group",
          "space_remove_group",
          "space_set_privileges",
          "space_remove",
          "space_add_provider",
          "space_remove_provider",
          "space_change_data",
          "space_view_data"
        ]
      }
    },
    "GroupPrivileges": {
      "type": "object",
      "description": "The list of group privileges.",
      "properties": {
        "privileges": {
          "type": "array",
          "items": {
            "type": "string",
            "enum": [
              "group_change_data",
              "group_invite_user",
              "group_remove_user",
              "group_join_space",
              "group_create_space",
              "group_set_privileges",
              "group_remove",
              "group_leave_space",
              "group_view_data",
              "group_create_space_token",
              "group_join_group",
              "group_invite_group",
              "group_remove_group"
            ]
          }
        }
      },
      "example": {
        "privileges": [
          "group_change_data",
          "group_invite_user",
          "group_remove_user",
          "group_join_space",
          "group_create_space",
          "group_set_privileges",
          "group_remove",
          "group_leave_space",
          "group_view_data",
          "group_create_space_token",
          "group_join_group",
          "group_invite_group",
          "group_remove_group"
        ]
      }
    },
    "OnezonePrivileges": {
      "type": "object",
      "description": "The list of Onezone privileges.",
      "properties": {
        "privileges": {
          "type": "array",
          "items": {
            "type": "string",
            "enum": [
              "view_privileges",
              "set_privileges",
              "list_spaces",
              "list_providers",
              "list_providers_of_space"
            ]
          }
        }
      },
      "example": {
        "privileges": [
          "view_privileges",
          "set_privileges",
          "list_spaces",
          "list_providers",
          "list_providers_of_space"
        ]
      }
    },
    "HandleService": {
      "type": "object",
      "description": "Handle service instance.\n",
      "properties": {
        "name": {
          "type": "string",
          "description": "The user defined name of the service.  \n"
        },
        "proxyEndpoint": {
          "type": "string",
          "description": "The endpoint of the Handle service proxy, i.e. a service which implements logic specific for particular Handle service.\n"
        },
        "serviceProperties": {
          "$ref": "#/definitions/HandleServiceProperties"
        }
      },
      "required": [
        "name",
        "proxyEndpoint",
        "serviceProperties"
      ],
      "example": {
        "name": "MyCommunity Handle service",
        "proxyEndpoint": "https://localhost:17000/handle_proxy",
        "serviceProperties": {
          "type": "DOI",
          "host": "https://mds.test.datacite.org",
          "doiEndpoint": "/doi",
          "metadataEndpoint": "/metadata",
          "mediaEndpoint": "/media",
          "prefix": 10.5072,
          "username": "alice",
          "password": "pa$$word",
          "identifierTemplate": "{{space.name}}-{{space.guid}}",
          "allowTemplateOverride": false
        }
      }
    },
    "HandleServiceProperties": {
      "type": "object",
      "description": "An abstract type for [Handle](http://handle.net) identifier services properties.\n",
      "discriminator": "type",
      "x-onedata-oneof": true,
      "x-onedata-subclasses": [
        "doi",
        "pid"
      ],
      "properties": {
        "type": {
          "type": "string",
          "description": "The type of handle service.",
          "x-discriminator": true,
          "enum": [
            "DOI",
            "PID"
          ]
        }
      },
      "required": [
        "type"
      ]
    },
    "HandleServicePropertiesUpdate": {
      "type": "object",
      "description": "An abstract type for [Handle](http://handle.net) identifier services properties.\n",
      "discriminator": "type",
      "x-onedata-oneof": true,
      "x-onedata-subclasses": [
        "doi",
        "pid"
      ],
      "properties": {
        "type": {
          "type": "string",
          "description": "The type of handle service.",
          "x-discriminator": true,
          "enum": [
            "DOI",
            "PID"
          ]
        }
      },
      "required": [
        "type"
      ]
    },
    "DOIServiceProperties": {
      "description": "The properties of a [DOI](http://doi.org) registration service.\n",
      "allOf": [
        {
          "$ref": "#/definitions/HandleServiceProperties"
        },
        {
          "type": "object",
          "x-discriminator-value": "DOI",
          "properties": {
            "host": {
              "type": "string",
              "description": "The service host, including the protocol.\n"
            },
            "doiEndpoint": {
              "type": "string",
              "description": "DOI registration API endpoint relative to the host.\n"
            },
            "metadataEndpoint": {
              "type": "string",
              "description": "Metadata registration API endpoint relative to the host.\n"
            },
            "mediaEndpoint": {
              "type": "string",
              "description": "Media registration API endpoint relative to the host.\n"
            },
            "prefix": {
              "type": "string",
              "description": "The DOI prefix under which new DOI's can be minted using this account.\n"
            },
            "username": {
              "type": "string",
              "description": "The username for login to the DOI service.\n"
            },
            "password": {
              "type": "string",
              "description": "The password for login to the DOI service.\n"
            },
            "identifierTemplate": {
              "type": "string",
              "description": "The template for generation of new DOI's using this account.\n"
            },
            "allowTemplateOverride": {
              "type": "boolean",
              "description": "Specifies whether users can override the DOI suffix template for this account during registration of new DOI's.\n"
            }
          },
          "required": [
            "name",
            "host",
            "doiEndpoint",
            "metadataEndpoint",
            "mediaEndpoint",
            "prefix",
            "username",
            "password"
          ]
        }
      ],
      "example": {
        "type": "DOI",
        "host": "https://mds.test.datacite.org",
        "doiEndpoint": "/doi",
        "metadataEndpoint": "/metadata",
        "mediaEndpoint": "/media",
        "prefix": 10.572,
        "username": "alice",
        "password": "pa$$word",
        "identifierTemplate": "{{space.name}}-{{space.guid}}",
        "allowTemplateOverride": false
      }
    },
    "PIDServiceProperties": {
      "description": "The properties of a [PID](http://www.pidconsortium.eu/) registration service.\n",
      "allOf": [
        {
          "$ref": "#/definitions/HandleServiceProperties"
        },
        {
          "type": "object",
          "x-discriminator-value": "PID",
          "properties": {
            "endpoint": {
              "type": "string",
              "description": "The HTTP endpoint for handle registration.\n"
            },
            "prefix": {
              "type": "string",
              "description": "The PID prefix under which new PID's can be minted using this account.\n"
            },
            "username": {
              "type": "string",
              "description": "The username for login to the PID service.\n"
            },
            "password": {
              "type": "string",
              "description": "The password for login to the PID service.\n"
            },
            "autoSuffixGeneration": {
              "type": "boolean",
              "description": "When set to true, the suffixes will be generated automatically by the registration service.\n"
            },
            "suffixPrefix": {
              "type": "string",
              "description": "Auto generated PID suffixes have a format PREFIX-UUID-SUFFIX, UUID is generated by the registration service.\n"
            },
            "suffixSuffix": {
              "type": "string",
              "description": "Auto generated PID suffixes have a format PREFIX-UUID-SUFFIX, UUID is generated by the registration service.\n"
            },
            "identifierTemplate": {
              "type": "string",
              "description": "Template for generating PID's based Onedata properties (e.g. space UUID). If set to `true` the `autoSuffixGeneration` must be `false`.\n"
            },
            "allowTemplateOverride": {
              "type": "string",
              "description": "Allow users to create custom identifiers regardless of the specified template.\n"
            }
          },
          "required": [
            "name",
            "endpoint",
            "prefix",
            "username",
            "password",
            "autoSuffixGeneration",
            "suffixPrefix",
            "suffixSuffix"
          ]
        }
      ],
      "example": {
        "type": "PID",
        "name": "iMarine EPIC",
        "endpoint": "https://epic.grnet.gr/api/v2/handles",
        "prefix": 11789,
        "autoSuffixGeneration": false,
        "suffixPrefix": "{{space.name}}",
        "suffixSuffix": "{{space.uuid}}",
        "username": "alice",
        "password": "pa$$word",
        "identifierTemplate": "{{space.name}}-{{space.guid}}",
        "allowTemplateOverride": false
      }
    },
    "HandleServiceUpdate": {
      "type": "object",
      "description": "Handle service instance.\n",
      "properties": {
        "name": {
          "type": "string",
          "description": "The user defined name of the service.  \n"
        },
        "proxyEndpoint": {
          "type": "string",
          "description": "The endpoint of the Handle service proxy, i.e. a service which implements logic specific for particular Handle service.\n"
        },
        "serviceProperties": {
          "$ref": "#/definitions/HandleServicePropertiesUpdate"
        }
      },
      "example": {
        "proxyEndpoint": "https://newendpointdomain.com:17000/handle_proxy"
      }
    },
    "DOIServicePropertiesUpdate": {
      "description": "The properties of a [DOI](http://doi.org) registration service.\n",
      "allOf": [
        {
          "$ref": "#/definitions/HandleServicePropertiesUpdate"
        },
        {
          "type": "object",
          "x-discriminator-value": "DOI",
          "properties": {
            "host": {
              "type": "string",
              "description": "The service host, including the protocol.\n"
            },
            "doiEndpoint": {
              "type": "string",
              "description": "DOI registration API endpoint relative to the host.\n"
            },
            "metadataEndpoint": {
              "type": "string",
              "description": "Metadata registration API endpoint relative to the host.\n"
            },
            "mediaEndpoint": {
              "type": "string",
              "description": "Media registration API endpoint relative to the host.\n"
            },
            "prefix": {
              "type": "string",
              "description": "The DOI prefix under which new DOI's can be minted using this account.\n"
            },
            "username": {
              "type": "string",
              "description": "The username for login to the DOI service.\n"
            },
            "password": {
              "type": "string",
              "description": "The password for login to the DOI service.\n"
            },
            "identifierTemplate": {
              "type": "string",
              "description": "The template for generation of new DOI's using this account.\n"
            },
            "allowTemplateOverride": {
              "type": "boolean",
              "description": "Specifies whether users can override the DOI suffix template for this account during registration of new DOI's.\n"
            }
          }
        }
      ],
      "example": {
        "type": "DOI",
        "host": "https://mds.test.datacite.org",
        "username": "alice",
        "password": "pa$$word"
      }
    },
    "PIDServicePropertiesUpdate": {
      "description": "The properties of a [PID](http://www.pidconsortium.eu/) registration service update.\n",
      "allOf": [
        {
          "$ref": "#/definitions/HandleServicePropertiesUpdate"
        },
        {
          "type": "object",
          "x-discriminator-value": "PID",
          "properties": {
            "endpoint": {
              "type": "string",
              "description": "The HTTP endpoint for handle registration.\n"
            },
            "prefix": {
              "type": "string",
              "description": "The PID prefix under which new PID's can be minted using this account.\n"
            },
            "username": {
              "type": "string",
              "description": "The username for login to the PID service.\n"
            },
            "password": {
              "type": "string",
              "description": "The password for login to the PID service.\n"
            },
            "autoSuffixGeneration": {
              "type": "boolean",
              "description": "When set to true, the suffixes will be generated automatically by the registration service.\n"
            },
            "suffixPrefix": {
              "type": "string",
              "description": "Auto generated PID suffixes have a format PREFIX-UUID-SUFFIX, UUID is generated by the registration service.\n"
            },
            "suffixSuffix": {
              "type": "string",
              "description": "Auto generated PID suffixes have a format PREFIX-UUID-SUFFIX, UUID is generated by the registration service.\n"
            },
            "identifierTemplate": {
              "type": "string",
              "description": "Template for generating PID's based Onedata properties (e.g. space UUID). If set to `true` the `autoSuffixGeneration` must be `false`.\n"
            },
            "allowTemplateOverride": {
              "type": "string",
              "description": "Allow users to create custom identifiers regardless of the specified template.\n"
            }
          }
        }
      ],
      "example": {
        "type": "PID",
        "endpoint": "https://epic.grnet.gr/api/v2/handles",
        "username": "alice",
        "password": "pa$$word"
      }
    },
    "Handle": {
      "type": "object",
      "description": "Handle properties.",
      "properties": {
        "handleId": {
          "type": "string",
          "description": "Unique ID the handle (internal to Onedata)."
        },
        "handleType": {
          "type": "string",
          "description": "Type of Handle (e.g. DOI, PID)."
        },
        "handleServiceId": {
          "type": "string",
          "description": "ID of the service where the handle was registered."
        },
        "handle": {
          "type": "string",
          "description": "The globally unique handle."
        },
        "resourceId": {
          "type": "integer",
          "description": "The Onedata GUID of the resource to which the handle should be resolved."
        },
        "metadata": {
          "type": "string",
          "description": "Dublin Core metadata for the resource encoded in XML."
        }
      },
      "example": {
        "handleId": "2MTQwMTQ0CjAwMmZzaWduYXR1cmUg88",
        "handleType": "DOI",
        "handle": "10.572/test-handle-G9uZXpvbmUKMDAzYmlkZW50aWZpZXIgOEh/123",
        "resourceId": "RsNk1CVHZTU3Z0OThwcHAhRN1NPawowMDFhY2lkIHRpbWUgPC",
        "handleServiceId": "JKAxNWxvY2F0aW9uImSEFSSGdrbHFCa1pWST2OTQ4cz"
      }
    },
    "HandleRegistrationRequest": {
      "type": "object",
      "description": "This type contains attributes necessary to register a handle identifier\nfor some Onedata resource (e.g. share).\n",
      "properties": {
        "handleServiceId": {
          "type": "string",
          "description": "The Onedata GUID of the handle service registered."
        },
        "resourceType": {
          "type": "string",
          "description": "The type of resource to be registered."
        },
        "resourceId": {
          "type": "string",
          "description": "The ID of the resource to be assigned a handle identifier."
        },
        "metadata": {
          "type": "string",
          "description": "Dublin Core metadata for the resource encoded in XML."
        }
      },
      "required": [
        "handleServiceId",
        "resourceType",
        "resourceId"
      ],
      "example": {
        "handleServiceId": "ALKJSDH77i79ASDKJA-ASDBAS9-87",
        "resourceType": "Share",
        "resourceId": "LKJAHSDA796IASDKBjkhaksjdk568787asdhjbasd"
      }
    },
    "HandlePrivileges": {
      "type": "object",
      "description": "The list of handle privileges.",
      "properties": {
        "privileges": {
          "type": "array",
          "items": {
            "type": "string",
            "enum": [
              "unregister_handle",
              "handle_change_data",
              "handle_view_data"
            ]
          }
        }
      },
      "example": {
        "privileges": [
          "unregister_handle",
          "handle_change_data",
          "handle_view_data"
        ]
      }
    },
    "HandleServicePrivileges": {
      "type": "object",
      "description": "The list of handle service privileges.",
      "properties": {
        "privileges": {
          "type": "array",
          "items": {
            "type": "string",
            "enum": [
              "register_handle",
              "handle_service_remove",
              "handle_service_change_data",
              "handle_service_view_data",
              "handle_service_add_user",
              "handle_service_remove_user",
              "handle_service_add_group",
              "handle_service_remove_group"
            ]
          }
        }
      },
      "example": {
        "privileges": [
          "register_handle",
          "handle_service_remove",
          "handle_service_change_data",
          "handle_service_view_data",
          "handle_service_add_user",
          "handle_service_remove_user",
          "handle_service_add_group",
          "handle_service_remove_group"
        ]
      }
    },
    "Share": {
      "type": "object",
      "description": "Share parameters.",
      "properties": {
        "shareId": {
          "type": "string",
          "description": "Share ID."
        },
        "name": {
          "type": "string",
          "description": "The user defined name for the share."
        },
        "publicUrl": {
          "type": "string",
          "description": "The publicly accessible URL for the share."
        },
        "rootFileId": {
          "type": "string",
          "description": "The ID of the shared file or folder."
        },
        "parentSpace": {
          "type": "string",
          "description": "The ID of the space in which the share was created."
        }
      },
      "required": [
        "shareId",
        "name",
        "publicUrl",
        "rootFileId",
        "parentSpace"
      ],
      "example": {
        "shareId": null,
        "name": "MyNewShare",
        "publicUrl": "https://onedata.org/shares/ASDLKJH8asdkjasd89898asd89asdlbKJSBDikjab89-asdmASD",
        "rootFileId": "ASDkjlkkasdjoiwnafldnacbaasd8879a8sdkjb",
        "parentSpace": "LKJH8asdkjasd89898asd89asdlbKJSBD79a8sdk"
      }
    },
    "ShareUpdateRequest": {
      "type": "object",
      "description": "Share parameters.",
      "properties": {
        "shareId": {
          "type": "string",
          "description": "Share ID."
        },
        "name": {
          "type": "string",
          "description": "The user defined name for the share."
        },
        "publicUrl": {
          "type": "string",
          "description": "The publicly accessible URL for the share."
        },
        "rootFileId": {
          "type": "string",
          "description": "The ID of the shared file or folder."
        },
        "parentSpace": {
          "type": "string",
          "description": "The ID of the space in which the share was created."
        }
      },
      "example": {
        "shareId": null,
        "name": "MyNewShare",
        "publicUrl": "https://onedata.org/shares/ASDLKJH8asdkjasd89898asd89asdlbKJSBDikjab89-asdmASD",
        "rootFileId": "ASDkjlkkasdjoiwnafldnacbaasd8879a8sdkjb",
        "parentSpace": "LKJH8asdkjasd89898asd89asdlbKJSBD79a8sdk"
      }
    }
  },
  "tags": [
    {
      "name": "Space",
      "description": "Space related operations"
    },
    {
      "name": "Group",
      "description": "Group related operations"
    },
    {
      "name": "User",
      "description": "User related operations"
    },
    {
      "name": "Provider",
      "description": "Provider related operations"
    },
    {
      "name": "Privileges",
      "description": "Operations on Onezone privileges"
    },
    {
      "name": "Handle",
      "description": "Operations for managing Handle system service and identifier generation."
    }
  ],
  "securityDefinitions": {
    "api_key": {
      "type": "apiKey",
      "name": "macaroon",
      "in": "header"
    },
    "basic": {
      "type": "basic"
    }
  }
}
