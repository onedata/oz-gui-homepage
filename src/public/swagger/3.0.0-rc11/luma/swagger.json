{
  "swagger": "2.0",
  "basePath": "/api/v3/luma",
  "info": {
    "version": "3.0.0-rc11",
    "title": "LUMA",
    "description": "# Overview\n\nLUMA (Local User MApping) is a REST server that exposes simple REST API that can be used to map users\n(of any system/kind) to storage specific users, in the process authorizing them with the storage.\nNew storage types are added by means of plugin system of generators. A generator is responsible for:\nmapping users to storage specific users creating a user credentials for accessing the actual storage\n\nAs of now there are four kinds of generators implemented in LUMA:\n * Posix\n * Ceph\n * Amazon S3\n * Openstack Swift\n\nLUMA is written using [Flask](http://flask.pocoo.org/) framework and uses SQLite backend to store information about user credentials.\n\nMore information: [https://github.com/onedata/luma](https://github.com/onedata/luma)\n",
    "contact": {
      "name": "Onedata support",
      "url": "https://onedata.org/support",
      "email": "info@onedata.org"
    },
    "license": {
      "name": "Apache 2.0",
      "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
    },
    "x-logo": {
      "url": "https://onedata.org/assets/images/api/luma-logo.svg",
      "backgroundColor": "#FFFFFF"
    }
  },
  "paths": {
    "/map_user_credentials": {
      "post": {
        "summary": "Get user credentials",
        "description": "Returns user credentials to storage in JSON format.",
        "x-onedata-version": 3,
        "x-onedata-module": "luma",
        "x-onedata-resource": "user",
        "operationId": "map_user_credentials",
        "tags": [
          "LUMA"
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "User details returned successfully.",
            "schema": {
              "$ref": "#/definitions/UserStorageCredentials"
            }
          },
          "400": {
            "description": "Invalid request.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "Forbidden request.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "User credentials not found.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "parameters": [
          {
            "name": "userCredentialsRequest",
            "description": "User credentials mapping request.",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/UserCredentialsRequest"
            },
            "required": false
          }
        ]
      }
    }
  },
  "definitions": {
    "Error": {
      "type": "object",
      "description": "Generic error model for REST requests.",
      "properties": {
        "error": {
          "description": "Identifier representing internal error code.",
          "type": "string"
        },
        "errorDescription": {
          "description": "Detailed error message.",
          "type": "string"
        }
      },
      "required": [
        "error",
        "errorDescription"
      ],
      "example": {
        "error": "invalid_user",
        "errorDescription": "Invalid user ID."
      }
    },
    "UserCredentialsRequest": {
      "type": "object",
      "description": "User credentials request - provides all necessary information to perform the account mapping.",
      "properties": {
        "storageId": {
          "description": "Storage ID (site specific), can be used interchangeably with `spaceType`.",
          "type": "string"
        },
        "storageType": {
          "description": "Storage ID (site specific), can be used interchangeably with `spaceId`.",
          "type": "string"
        },
        "spaceName": {
          "description": "Name of user space for which storage mapping is requested.",
          "type": "string"
        },
        "userDetails": {
          "$ref": "#/definitions/UserDetails"
        }
      },
      "required": [
        "spaceName",
        "userDetails"
      ],
      "example": {
        "storageId": "AKSDHKAJSHD898798ASDKJHA89878ASD",
        "storageType": "POSIX",
        "spaceName": "Space1",
        "userDetails": {
          "name": "User One",
          "connectedAccounts": [
            {
              "providerId": "ASDKLJH859876ASD87687ASDU",
              "userId": "ASDJH65675ASD765ASD890ASD6",
              "login": "user1",
              "name": "User One",
              "emailList": [
                "user.1@example.com",
                "user.one@example.com",
                "user.i@example.com"
              ]
            }
          ],
          "alias": "user.one",
          "emailList": [
            "user.1@example2.com",
            "user.one@example2.com",
            "user.i@example2.com"
          ]
        }
      }
    },
    "ConnectedAccount": {
      "type": "object",
      "description": "User connected account.",
      "properties": {
        "providerId": {
          "type": "string",
          "description": "ID of the storage provider."
        },
        "userId": {
          "type": "string",
          "description": "User ID assigned in Onezone."
        },
        "login": {
          "type": "string",
          "description": "User login name."
        },
        "name": {
          "type": "string",
          "description": "User full name."
        },
        "emailList": {
          "type": "array",
          "description": "The list of user email accounts.",
          "items": {
            "type": "string"
          }
        }
      },
      "required": [
        "providerId",
        "userId",
        "login",
        "name",
        "emailList"
      ],
      "example": {
        "providerId": "ASDKLJH859876ASD87687ASDU",
        "userId": "ASDJH65675ASD765ASD890ASD6",
        "login": "user1",
        "name": "User One",
        "emailList": [
          "user.1@example.com",
          "user.one@example.com",
          "user.i@example.com"
        ]
      }
    },
    "UserDetails": {
      "type": "object",
      "description": "User details needed for user mapping.",
      "properties": {
        "id": {
          "type": "string",
          "description": "Onedata user ID."
        },
        "name": {
          "type": "string",
          "description": "User name."
        },
        "connectedAccounts": {
          "type": "array",
          "description": "The list of user Open ID accounts.",
          "items": {
            "$ref": "#/definitions/ConnectedAccount"
          }
        },
        "alias": {
          "type": "string",
          "description": "User alias."
        },
        "emailList": {
          "type": "array",
          "description": "The list of user email accounts.",
          "items": {
            "type": "string"
          }
        }
      },
      "example": {
        "id": "ASDJH65675ASD765ASD890ASD6",
        "name": "user1",
        "connectedAccounts": [
          {
            "providerId": "ASDKLJH859876ASD87687ASDU",
            "userId": "ASDJH65675ASD765ASD890ASD6",
            "login": "user1",
            "name": "User One",
            "emailList": [
              "user.1@example.com",
              "user.one@example.com",
              "user.i@example.com"
            ]
          }
        ],
        "alias": "user.one",
        "emailList": [
          "user.1@example2.com",
          "user.one@example2.com",
          "user.i@example2.com"
        ]
      }
    },
    "UserStorageCredentials": {
      "type": "object",
      "description": "Generic storage credentials response type.",
      "discriminator": "type",
      "properties": {
        "type": {
          "type": "string",
          "description": "Type of storage.",
          "enum": [
            "Posix",
            "Ceph",
            "S3",
            "Swift"
          ]
        }
      },
      "required": [
        "type"
      ]
    },
    "Posix": {
      "allOf": [
        {
          "$ref": "#/definitions/UserStorageCredentials"
        },
        {
          "type": "object",
          "description": "The POSIX storage credentials.",
          "properties": {
            "uid": {
              "type": "string",
              "description": "POSIX user ID in the local system."
            },
            "gid": {
              "type": "string",
              "description": "POSIX user group ID in the local system."
            }
          }
        }
      ],
      "example": {
        "type": "Posix",
        "uid": 3121,
        "gid": 123
      },
      "required": [
        "type",
        "uid",
        "gid"
      ]
    },
    "S3": {
      "allOf": [
        {
          "$ref": "#/definitions/UserStorageCredentials"
        },
        {
          "type": "object",
          "description": "The Amazon S3 storage credentials.",
          "properties": {
            "accessKey": {
              "type": "string",
              "description": "S3 access key for user."
            },
            "secretKey": {
              "type": "string",
              "description": "S3 secret key for user."
            }
          }
        }
      ],
      "example": {
        "type": "S3",
        "accessKey": "J7657576ASDFKJAHSDASDASDJHVASDLKJAHSDLK",
        "secretKey": "ASDASDJHVASDLKJAHSDLKJ7657576ASDFKJAHSD"
      },
      "required": [
        "type",
        "accessKey",
        "secretKey"
      ]
    },
    "Ceph": {
      "allOf": [
        {
          "$ref": "#/definitions/UserStorageCredentials"
        },
        {
          "type": "object",
          "description": "The Ceph storage credentials.",
          "properties": {
            "userName": {
              "type": "string",
              "description": "Ceph user name."
            },
            "userKey": {
              "type": "string",
              "description": "Ceph user key."
            }
          }
        }
      ],
      "example": {
        "type": "Ceph",
        "userName": "user1",
        "userKey": "LKAJHFLKJHASD9879ASDASDBNASD"
      },
      "required": [
        "type",
        "accessKey",
        "secretKey"
      ]
    },
    "Swift": {
      "allOf": [
        {
          "$ref": "#/definitions/UserStorageCredentials"
        },
        {
          "type": "object",
          "description": "The OpenStack Keystone credentials.",
          "properties": {
            "userName": {
              "type": "string",
              "description": "OpenStack Keystone user name."
            },
            "password": {
              "type": "string",
              "description": "OpenStack Keystone user password."
            }
          }
        }
      ],
      "example": {
        "type": "Swift",
        "userName": "user1",
        "password": "P@$$W0RD"
      }
    }
  },
  "tags": [
    {
      "name": "LUMA",
      "description": "LUMA API methods"
    }
  ],
  "securityDefinitions": {
    "api_key": {
      "type": "apiKey",
      "name": "X-Auth-Token",
      "in": "header"
    }
  }
}
